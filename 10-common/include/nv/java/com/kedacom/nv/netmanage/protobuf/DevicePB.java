// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvstructdevice.proto

package com.kedacom.nv.netmanage.protobuf;

public final class DevicePB {
  private DevicePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TNVKeyPressInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool key_type = 1;
    /**
     * <code>optional bool key_type = 1;</code>
     *
     * <pre>
     *keydown or keyup
     * </pre>
     */
    boolean hasKeyType();
    /**
     * <code>optional bool key_type = 1;</code>
     *
     * <pre>
     *keydown or keyup
     * </pre>
     */
    boolean getKeyType();

    // optional .nv.EmNvRemoteType key_source = 2;
    /**
     * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
     *
     * <pre>
     *按键来源
     * </pre>
     */
    boolean hasKeySource();
    /**
     * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
     *
     * <pre>
     *按键来源
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType getKeySource();

    // optional .nv.EmNvRemoteScanCode key_code = 3;
    /**
     * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
     *
     * <pre>
     *按键键值
     * </pre>
     */
    boolean hasKeyCode();
    /**
     * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
     *
     * <pre>
     *按键键值
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode getKeyCode();

    // optional uint32 key_count = 4;
    /**
     * <code>optional uint32 key_count = 4;</code>
     *
     * <pre>
     *按键计数
     * </pre>
     */
    boolean hasKeyCount();
    /**
     * <code>optional uint32 key_count = 4;</code>
     *
     * <pre>
     *按键计数
     * </pre>
     */
    int getKeyCount();
  }
  /**
   * Protobuf type {@code nv.TNVKeyPressInfo}
   */
  public static final class TNVKeyPressInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNVKeyPressInfoOrBuilder {
    // Use TNVKeyPressInfo.newBuilder() to construct.
    private TNVKeyPressInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVKeyPressInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVKeyPressInfo defaultInstance;
    public static TNVKeyPressInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNVKeyPressInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVKeyPressInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyType_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                keySource_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                keyCode_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              keyCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVKeyPressInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVKeyPressInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVKeyPressInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNVKeyPressInfo>() {
      public TNVKeyPressInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVKeyPressInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVKeyPressInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool key_type = 1;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private boolean keyType_;
    /**
     * <code>optional bool key_type = 1;</code>
     *
     * <pre>
     *keydown or keyup
     * </pre>
     */
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool key_type = 1;</code>
     *
     * <pre>
     *keydown or keyup
     * </pre>
     */
    public boolean getKeyType() {
      return keyType_;
    }

    // optional .nv.EmNvRemoteType key_source = 2;
    public static final int KEY_SOURCE_FIELD_NUMBER = 2;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType keySource_;
    /**
     * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
     *
     * <pre>
     *按键来源
     * </pre>
     */
    public boolean hasKeySource() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
     *
     * <pre>
     *按键来源
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType getKeySource() {
      return keySource_;
    }

    // optional .nv.EmNvRemoteScanCode key_code = 3;
    public static final int KEY_CODE_FIELD_NUMBER = 3;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode keyCode_;
    /**
     * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
     *
     * <pre>
     *按键键值
     * </pre>
     */
    public boolean hasKeyCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
     *
     * <pre>
     *按键键值
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode getKeyCode() {
      return keyCode_;
    }

    // optional uint32 key_count = 4;
    public static final int KEY_COUNT_FIELD_NUMBER = 4;
    private int keyCount_;
    /**
     * <code>optional uint32 key_count = 4;</code>
     *
     * <pre>
     *按键计数
     * </pre>
     */
    public boolean hasKeyCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 key_count = 4;</code>
     *
     * <pre>
     *按键计数
     * </pre>
     */
    public int getKeyCount() {
      return keyCount_;
    }

    private void initFields() {
      keyType_ = false;
      keySource_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType.emNvRemoteTypeUnknown;
      keyCode_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode.emNvScanCode0;
      keyCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, keySource_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, keyCode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, keyCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, keySource_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, keyCode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, keyCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVKeyPressInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVKeyPressInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVKeyPressInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyType_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        keySource_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType.emNvRemoteTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000002);
        keyCode_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode.emNvScanCode0;
        bitField0_ = (bitField0_ & ~0x00000004);
        keyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVKeyPressInfo_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyType_ = keyType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.keySource_ = keySource_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.keyCode_ = keyCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.keyCount_ = keyCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        if (other.hasKeySource()) {
          setKeySource(other.getKeySource());
        }
        if (other.hasKeyCode()) {
          setKeyCode(other.getKeyCode());
        }
        if (other.hasKeyCount()) {
          setKeyCount(other.getKeyCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVKeyPressInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool key_type = 1;
      private boolean keyType_ ;
      /**
       * <code>optional bool key_type = 1;</code>
       *
       * <pre>
       *keydown or keyup
       * </pre>
       */
      public boolean hasKeyType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool key_type = 1;</code>
       *
       * <pre>
       *keydown or keyup
       * </pre>
       */
      public boolean getKeyType() {
        return keyType_;
      }
      /**
       * <code>optional bool key_type = 1;</code>
       *
       * <pre>
       *keydown or keyup
       * </pre>
       */
      public Builder setKeyType(boolean value) {
        bitField0_ |= 0x00000001;
        keyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool key_type = 1;</code>
       *
       * <pre>
       *keydown or keyup
       * </pre>
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = false;
        onChanged();
        return this;
      }

      // optional .nv.EmNvRemoteType key_source = 2;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType keySource_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType.emNvRemoteTypeUnknown;
      /**
       * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
       *
       * <pre>
       *按键来源
       * </pre>
       */
      public boolean hasKeySource() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
       *
       * <pre>
       *按键来源
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType getKeySource() {
        return keySource_;
      }
      /**
       * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
       *
       * <pre>
       *按键来源
       * </pre>
       */
      public Builder setKeySource(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        keySource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvRemoteType key_source = 2;</code>
       *
       * <pre>
       *按键来源
       * </pre>
       */
      public Builder clearKeySource() {
        bitField0_ = (bitField0_ & ~0x00000002);
        keySource_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteType.emNvRemoteTypeUnknown;
        onChanged();
        return this;
      }

      // optional .nv.EmNvRemoteScanCode key_code = 3;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode keyCode_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode.emNvScanCode0;
      /**
       * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
       *
       * <pre>
       *按键键值
       * </pre>
       */
      public boolean hasKeyCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
       *
       * <pre>
       *按键键值
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode getKeyCode() {
        return keyCode_;
      }
      /**
       * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
       *
       * <pre>
       *按键键值
       * </pre>
       */
      public Builder setKeyCode(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        keyCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvRemoteScanCode key_code = 3;</code>
       *
       * <pre>
       *按键键值
       * </pre>
       */
      public Builder clearKeyCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        keyCode_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvRemoteScanCode.emNvScanCode0;
        onChanged();
        return this;
      }

      // optional uint32 key_count = 4;
      private int keyCount_ ;
      /**
       * <code>optional uint32 key_count = 4;</code>
       *
       * <pre>
       *按键计数
       * </pre>
       */
      public boolean hasKeyCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 key_count = 4;</code>
       *
       * <pre>
       *按键计数
       * </pre>
       */
      public int getKeyCount() {
        return keyCount_;
      }
      /**
       * <code>optional uint32 key_count = 4;</code>
       *
       * <pre>
       *按键计数
       * </pre>
       */
      public Builder setKeyCount(int value) {
        bitField0_ |= 0x00000008;
        keyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 key_count = 4;</code>
       *
       * <pre>
       *按键计数
       * </pre>
       */
      public Builder clearKeyCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        keyCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVKeyPressInfo)
    }

    static {
      defaultInstance = new TNVKeyPressInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVKeyPressInfo)
  }

  public interface TNVHDSerialCtrlOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .nv.EmNvSerialType serial_type = 1;
    /**
     * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
     *
     * <pre>
     *串口类型 
     * </pre>
     */
    boolean hasSerialType();
    /**
     * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
     *
     * <pre>
     *串口类型 
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType getSerialType();

    // optional uint32 band_rate = 2;
    /**
     * <code>optional uint32 band_rate = 2;</code>
     *
     * <pre>
     *波特率
     * </pre>
     */
    boolean hasBandRate();
    /**
     * <code>optional uint32 band_rate = 2;</code>
     *
     * <pre>
     *波特率
     * </pre>
     */
    int getBandRate();

    // optional uint32 byte_size = 3;
    /**
     * <code>optional uint32 byte_size = 3;</code>
     *
     * <pre>
     *数据位
     * </pre>
     */
    boolean hasByteSize();
    /**
     * <code>optional uint32 byte_size = 3;</code>
     *
     * <pre>
     *数据位
     * </pre>
     */
    int getByteSize();

    // optional .nv.EmNvStopBits stop_bits = 4;
    /**
     * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
     *
     * <pre>
     *停止位
     * </pre>
     */
    boolean hasStopBits();
    /**
     * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
     *
     * <pre>
     *停止位
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits getStopBits();

    // optional .nv.EmNvParityCheck parity_check = 5;
    /**
     * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
     *
     * <pre>
     *校验算法
     * </pre>
     */
    boolean hasParityCheck();
    /**
     * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
     *
     * <pre>
     *校验算法
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck getParityCheck();
  }
  /**
   * Protobuf type {@code nv.TNVHDSerialCtrl}
   *
   * <pre>
   *串口配置
   * </pre>
   */
  public static final class TNVHDSerialCtrl extends
      com.google.protobuf.GeneratedMessage
      implements TNVHDSerialCtrlOrBuilder {
    // Use TNVHDSerialCtrl.newBuilder() to construct.
    private TNVHDSerialCtrl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVHDSerialCtrl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVHDSerialCtrl defaultInstance;
    public static TNVHDSerialCtrl getDefaultInstance() {
      return defaultInstance;
    }

    public TNVHDSerialCtrl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVHDSerialCtrl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                serialType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bandRate_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              byteSize_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                stopBits_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                parityCheck_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVHDSerialCtrl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVHDSerialCtrl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVHDSerialCtrl> PARSER =
        new com.google.protobuf.AbstractParser<TNVHDSerialCtrl>() {
      public TNVHDSerialCtrl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVHDSerialCtrl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVHDSerialCtrl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .nv.EmNvSerialType serial_type = 1;
    public static final int SERIAL_TYPE_FIELD_NUMBER = 1;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType serialType_;
    /**
     * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
     *
     * <pre>
     *串口类型 
     * </pre>
     */
    public boolean hasSerialType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
     *
     * <pre>
     *串口类型 
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType getSerialType() {
      return serialType_;
    }

    // optional uint32 band_rate = 2;
    public static final int BAND_RATE_FIELD_NUMBER = 2;
    private int bandRate_;
    /**
     * <code>optional uint32 band_rate = 2;</code>
     *
     * <pre>
     *波特率
     * </pre>
     */
    public boolean hasBandRate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 band_rate = 2;</code>
     *
     * <pre>
     *波特率
     * </pre>
     */
    public int getBandRate() {
      return bandRate_;
    }

    // optional uint32 byte_size = 3;
    public static final int BYTE_SIZE_FIELD_NUMBER = 3;
    private int byteSize_;
    /**
     * <code>optional uint32 byte_size = 3;</code>
     *
     * <pre>
     *数据位
     * </pre>
     */
    public boolean hasByteSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 byte_size = 3;</code>
     *
     * <pre>
     *数据位
     * </pre>
     */
    public int getByteSize() {
      return byteSize_;
    }

    // optional .nv.EmNvStopBits stop_bits = 4;
    public static final int STOP_BITS_FIELD_NUMBER = 4;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits stopBits_;
    /**
     * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
     *
     * <pre>
     *停止位
     * </pre>
     */
    public boolean hasStopBits() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
     *
     * <pre>
     *停止位
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits getStopBits() {
      return stopBits_;
    }

    // optional .nv.EmNvParityCheck parity_check = 5;
    public static final int PARITY_CHECK_FIELD_NUMBER = 5;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck parityCheck_;
    /**
     * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
     *
     * <pre>
     *校验算法
     * </pre>
     */
    public boolean hasParityCheck() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
     *
     * <pre>
     *校验算法
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck getParityCheck() {
      return parityCheck_;
    }

    private void initFields() {
      serialType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType.emNvRS232_0;
      bandRate_ = 0;
      byteSize_ = 0;
      stopBits_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits.emNv1StopBit;
      parityCheck_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck.emNvNoCheck;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, serialType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, bandRate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, byteSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, stopBits_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, parityCheck_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, serialType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, bandRate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, byteSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, stopBits_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, parityCheck_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVHDSerialCtrl}
     *
     * <pre>
     *串口配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVHDSerialCtrl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVHDSerialCtrl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serialType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType.emNvRS232_0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bandRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        byteSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        stopBits_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits.emNv1StopBit;
        bitField0_ = (bitField0_ & ~0x00000008);
        parityCheck_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck.emNvNoCheck;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVHDSerialCtrl_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialType_ = serialType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bandRate_ = bandRate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.byteSize_ = byteSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stopBits_ = stopBits_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.parityCheck_ = parityCheck_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl.getDefaultInstance()) return this;
        if (other.hasSerialType()) {
          setSerialType(other.getSerialType());
        }
        if (other.hasBandRate()) {
          setBandRate(other.getBandRate());
        }
        if (other.hasByteSize()) {
          setByteSize(other.getByteSize());
        }
        if (other.hasStopBits()) {
          setStopBits(other.getStopBits());
        }
        if (other.hasParityCheck()) {
          setParityCheck(other.getParityCheck());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVHDSerialCtrl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .nv.EmNvSerialType serial_type = 1;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType serialType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType.emNvRS232_0;
      /**
       * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
       *
       * <pre>
       *串口类型 
       * </pre>
       */
      public boolean hasSerialType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
       *
       * <pre>
       *串口类型 
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType getSerialType() {
        return serialType_;
      }
      /**
       * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
       *
       * <pre>
       *串口类型 
       * </pre>
       */
      public Builder setSerialType(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        serialType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvSerialType serial_type = 1;</code>
       *
       * <pre>
       *串口类型 
       * </pre>
       */
      public Builder clearSerialType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSerialType.emNvRS232_0;
        onChanged();
        return this;
      }

      // optional uint32 band_rate = 2;
      private int bandRate_ ;
      /**
       * <code>optional uint32 band_rate = 2;</code>
       *
       * <pre>
       *波特率
       * </pre>
       */
      public boolean hasBandRate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 band_rate = 2;</code>
       *
       * <pre>
       *波特率
       * </pre>
       */
      public int getBandRate() {
        return bandRate_;
      }
      /**
       * <code>optional uint32 band_rate = 2;</code>
       *
       * <pre>
       *波特率
       * </pre>
       */
      public Builder setBandRate(int value) {
        bitField0_ |= 0x00000002;
        bandRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 band_rate = 2;</code>
       *
       * <pre>
       *波特率
       * </pre>
       */
      public Builder clearBandRate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bandRate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 byte_size = 3;
      private int byteSize_ ;
      /**
       * <code>optional uint32 byte_size = 3;</code>
       *
       * <pre>
       *数据位
       * </pre>
       */
      public boolean hasByteSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 byte_size = 3;</code>
       *
       * <pre>
       *数据位
       * </pre>
       */
      public int getByteSize() {
        return byteSize_;
      }
      /**
       * <code>optional uint32 byte_size = 3;</code>
       *
       * <pre>
       *数据位
       * </pre>
       */
      public Builder setByteSize(int value) {
        bitField0_ |= 0x00000004;
        byteSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 byte_size = 3;</code>
       *
       * <pre>
       *数据位
       * </pre>
       */
      public Builder clearByteSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        byteSize_ = 0;
        onChanged();
        return this;
      }

      // optional .nv.EmNvStopBits stop_bits = 4;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits stopBits_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits.emNv1StopBit;
      /**
       * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
       *
       * <pre>
       *停止位
       * </pre>
       */
      public boolean hasStopBits() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
       *
       * <pre>
       *停止位
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits getStopBits() {
        return stopBits_;
      }
      /**
       * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
       *
       * <pre>
       *停止位
       * </pre>
       */
      public Builder setStopBits(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        stopBits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvStopBits stop_bits = 4;</code>
       *
       * <pre>
       *停止位
       * </pre>
       */
      public Builder clearStopBits() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stopBits_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvStopBits.emNv1StopBit;
        onChanged();
        return this;
      }

      // optional .nv.EmNvParityCheck parity_check = 5;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck parityCheck_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck.emNvNoCheck;
      /**
       * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
       *
       * <pre>
       *校验算法
       * </pre>
       */
      public boolean hasParityCheck() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
       *
       * <pre>
       *校验算法
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck getParityCheck() {
        return parityCheck_;
      }
      /**
       * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
       *
       * <pre>
       *校验算法
       * </pre>
       */
      public Builder setParityCheck(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        parityCheck_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvParityCheck parity_check = 5;</code>
       *
       * <pre>
       *校验算法
       * </pre>
       */
      public Builder clearParityCheck() {
        bitField0_ = (bitField0_ & ~0x00000010);
        parityCheck_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvParityCheck.emNvNoCheck;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVHDSerialCtrl)
    }

    static {
      defaultInstance = new TNVHDSerialCtrl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVHDSerialCtrl)
  }

  public interface TNVUsbPartitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string path = 1;
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    boolean hasPath();
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    java.lang.String getPath();
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional uint32 total_space = 3;
    /**
     * <code>optional uint32 total_space = 3;</code>
     *
     * <pre>
     *分区总大小KB
     * </pre>
     */
    boolean hasTotalSpace();
    /**
     * <code>optional uint32 total_space = 3;</code>
     *
     * <pre>
     *分区总大小KB
     * </pre>
     */
    int getTotalSpace();

    // optional uint32 free_space = 4;
    /**
     * <code>optional uint32 free_space = 4;</code>
     *
     * <pre>
     *分区剩余空间KB
     * </pre>
     */
    boolean hasFreeSpace();
    /**
     * <code>optional uint32 free_space = 4;</code>
     *
     * <pre>
     *分区剩余空间KB
     * </pre>
     */
    int getFreeSpace();
  }
  /**
   * Protobuf type {@code nv.TNVUsbPartition}
   *
   * <pre>
   *U盘信息
   * </pre>
   */
  public static final class TNVUsbPartition extends
      com.google.protobuf.GeneratedMessage
      implements TNVUsbPartitionOrBuilder {
    // Use TNVUsbPartition.newBuilder() to construct.
    private TNVUsbPartition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVUsbPartition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVUsbPartition defaultInstance;
    public static TNVUsbPartition getDefaultInstance() {
      return defaultInstance;
    }

    public TNVUsbPartition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVUsbPartition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              path_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalSpace_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              freeSpace_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbPartition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbPartition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVUsbPartition> PARSER =
        new com.google.protobuf.AbstractParser<TNVUsbPartition>() {
      public TNVUsbPartition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVUsbPartition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVUsbPartition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string path = 1;
    public static final int PATH_FIELD_NUMBER = 1;
    private java.lang.Object path_;
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string path = 1;</code>
     *
     * <pre>
     *分区挂载的路径
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *分区的名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 total_space = 3;
    public static final int TOTAL_SPACE_FIELD_NUMBER = 3;
    private int totalSpace_;
    /**
     * <code>optional uint32 total_space = 3;</code>
     *
     * <pre>
     *分区总大小KB
     * </pre>
     */
    public boolean hasTotalSpace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 total_space = 3;</code>
     *
     * <pre>
     *分区总大小KB
     * </pre>
     */
    public int getTotalSpace() {
      return totalSpace_;
    }

    // optional uint32 free_space = 4;
    public static final int FREE_SPACE_FIELD_NUMBER = 4;
    private int freeSpace_;
    /**
     * <code>optional uint32 free_space = 4;</code>
     *
     * <pre>
     *分区剩余空间KB
     * </pre>
     */
    public boolean hasFreeSpace() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 free_space = 4;</code>
     *
     * <pre>
     *分区剩余空间KB
     * </pre>
     */
    public int getFreeSpace() {
      return freeSpace_;
    }

    private void initFields() {
      path_ = "";
      name_ = "";
      totalSpace_ = 0;
      freeSpace_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, totalSpace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, freeSpace_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, totalSpace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, freeSpace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVUsbPartition}
     *
     * <pre>
     *U盘信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbPartition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbPartition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        freeSpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbPartition_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalSpace_ = totalSpace_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.freeSpace_ = freeSpace_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.getDefaultInstance()) return this;
        if (other.hasPath()) {
          bitField0_ |= 0x00000001;
          path_ = other.path_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasTotalSpace()) {
          setTotalSpace(other.getTotalSpace());
        }
        if (other.hasFreeSpace()) {
          setFreeSpace(other.getFreeSpace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string path = 1;
      private java.lang.Object path_ = "";
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 1;</code>
       *
       * <pre>
       *分区挂载的路径
       * </pre>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *分区的名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional uint32 total_space = 3;
      private int totalSpace_ ;
      /**
       * <code>optional uint32 total_space = 3;</code>
       *
       * <pre>
       *分区总大小KB
       * </pre>
       */
      public boolean hasTotalSpace() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 total_space = 3;</code>
       *
       * <pre>
       *分区总大小KB
       * </pre>
       */
      public int getTotalSpace() {
        return totalSpace_;
      }
      /**
       * <code>optional uint32 total_space = 3;</code>
       *
       * <pre>
       *分区总大小KB
       * </pre>
       */
      public Builder setTotalSpace(int value) {
        bitField0_ |= 0x00000004;
        totalSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_space = 3;</code>
       *
       * <pre>
       *分区总大小KB
       * </pre>
       */
      public Builder clearTotalSpace() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalSpace_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 free_space = 4;
      private int freeSpace_ ;
      /**
       * <code>optional uint32 free_space = 4;</code>
       *
       * <pre>
       *分区剩余空间KB
       * </pre>
       */
      public boolean hasFreeSpace() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 free_space = 4;</code>
       *
       * <pre>
       *分区剩余空间KB
       * </pre>
       */
      public int getFreeSpace() {
        return freeSpace_;
      }
      /**
       * <code>optional uint32 free_space = 4;</code>
       *
       * <pre>
       *分区剩余空间KB
       * </pre>
       */
      public Builder setFreeSpace(int value) {
        bitField0_ |= 0x00000008;
        freeSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 free_space = 4;</code>
       *
       * <pre>
       *分区剩余空间KB
       * </pre>
       */
      public Builder clearFreeSpace() {
        bitField0_ = (bitField0_ & ~0x00000008);
        freeSpace_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVUsbPartition)
    }

    static {
      defaultInstance = new TNVUsbPartition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVUsbPartition)
  }

  public interface TNVUsbInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 usb_id = 1;
    /**
     * <code>optional uint32 usb_id = 1;</code>
     *
     * <pre>
     *USB接口ID
     * </pre>
     */
    boolean hasUsbId();
    /**
     * <code>optional uint32 usb_id = 1;</code>
     *
     * <pre>
     *USB接口ID
     * </pre>
     */
    int getUsbId();

    // optional bool is_used = 2;
    /**
     * <code>optional bool is_used = 2;</code>
     *
     * <pre>
     *是否有U盘插入
     * </pre>
     */
    boolean hasIsUsed();
    /**
     * <code>optional bool is_used = 2;</code>
     *
     * <pre>
     *是否有U盘插入
     * </pre>
     */
    boolean getIsUsed();

    // repeated .nv.TNVUsbPartition usb_partition = 3;
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> 
        getUsbPartitionList();
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition getUsbPartition(int index);
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    int getUsbPartitionCount();
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder> 
        getUsbPartitionOrBuilderList();
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder getUsbPartitionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nv.TNVUsbInfo}
   */
  public static final class TNVUsbInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNVUsbInfoOrBuilder {
    // Use TNVUsbInfo.newBuilder() to construct.
    private TNVUsbInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVUsbInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVUsbInfo defaultInstance;
    public static TNVUsbInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNVUsbInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVUsbInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              usbId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isUsed_ = input.readBool();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                usbPartition_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition>();
                mutable_bitField0_ |= 0x00000004;
              }
              usbPartition_.add(input.readMessage(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          usbPartition_ = java.util.Collections.unmodifiableList(usbPartition_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVUsbInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNVUsbInfo>() {
      public TNVUsbInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVUsbInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVUsbInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 usb_id = 1;
    public static final int USB_ID_FIELD_NUMBER = 1;
    private int usbId_;
    /**
     * <code>optional uint32 usb_id = 1;</code>
     *
     * <pre>
     *USB接口ID
     * </pre>
     */
    public boolean hasUsbId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 usb_id = 1;</code>
     *
     * <pre>
     *USB接口ID
     * </pre>
     */
    public int getUsbId() {
      return usbId_;
    }

    // optional bool is_used = 2;
    public static final int IS_USED_FIELD_NUMBER = 2;
    private boolean isUsed_;
    /**
     * <code>optional bool is_used = 2;</code>
     *
     * <pre>
     *是否有U盘插入
     * </pre>
     */
    public boolean hasIsUsed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_used = 2;</code>
     *
     * <pre>
     *是否有U盘插入
     * </pre>
     */
    public boolean getIsUsed() {
      return isUsed_;
    }

    // repeated .nv.TNVUsbPartition usb_partition = 3;
    public static final int USB_PARTITION_FIELD_NUMBER = 3;
    private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> usbPartition_;
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> getUsbPartitionList() {
      return usbPartition_;
    }
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder> 
        getUsbPartitionOrBuilderList() {
      return usbPartition_;
    }
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    public int getUsbPartitionCount() {
      return usbPartition_.size();
    }
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition getUsbPartition(int index) {
      return usbPartition_.get(index);
    }
    /**
     * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
     *
     * <pre>
     *U盘挂载根目录
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder getUsbPartitionOrBuilder(
        int index) {
      return usbPartition_.get(index);
    }

    private void initFields() {
      usbId_ = 0;
      isUsed_ = false;
      usbPartition_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, usbId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isUsed_);
      }
      for (int i = 0; i < usbPartition_.size(); i++) {
        output.writeMessage(3, usbPartition_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, usbId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isUsed_);
      }
      for (int i = 0; i < usbPartition_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, usbPartition_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVUsbInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUsbPartitionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usbId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isUsed_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (usbPartitionBuilder_ == null) {
          usbPartition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          usbPartitionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbInfo_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usbId_ = usbId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isUsed_ = isUsed_;
        if (usbPartitionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            usbPartition_ = java.util.Collections.unmodifiableList(usbPartition_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.usbPartition_ = usbPartition_;
        } else {
          result.usbPartition_ = usbPartitionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.getDefaultInstance()) return this;
        if (other.hasUsbId()) {
          setUsbId(other.getUsbId());
        }
        if (other.hasIsUsed()) {
          setIsUsed(other.getIsUsed());
        }
        if (usbPartitionBuilder_ == null) {
          if (!other.usbPartition_.isEmpty()) {
            if (usbPartition_.isEmpty()) {
              usbPartition_ = other.usbPartition_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureUsbPartitionIsMutable();
              usbPartition_.addAll(other.usbPartition_);
            }
            onChanged();
          }
        } else {
          if (!other.usbPartition_.isEmpty()) {
            if (usbPartitionBuilder_.isEmpty()) {
              usbPartitionBuilder_.dispose();
              usbPartitionBuilder_ = null;
              usbPartition_ = other.usbPartition_;
              bitField0_ = (bitField0_ & ~0x00000004);
              usbPartitionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUsbPartitionFieldBuilder() : null;
            } else {
              usbPartitionBuilder_.addAllMessages(other.usbPartition_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 usb_id = 1;
      private int usbId_ ;
      /**
       * <code>optional uint32 usb_id = 1;</code>
       *
       * <pre>
       *USB接口ID
       * </pre>
       */
      public boolean hasUsbId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 usb_id = 1;</code>
       *
       * <pre>
       *USB接口ID
       * </pre>
       */
      public int getUsbId() {
        return usbId_;
      }
      /**
       * <code>optional uint32 usb_id = 1;</code>
       *
       * <pre>
       *USB接口ID
       * </pre>
       */
      public Builder setUsbId(int value) {
        bitField0_ |= 0x00000001;
        usbId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 usb_id = 1;</code>
       *
       * <pre>
       *USB接口ID
       * </pre>
       */
      public Builder clearUsbId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usbId_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_used = 2;
      private boolean isUsed_ ;
      /**
       * <code>optional bool is_used = 2;</code>
       *
       * <pre>
       *是否有U盘插入
       * </pre>
       */
      public boolean hasIsUsed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_used = 2;</code>
       *
       * <pre>
       *是否有U盘插入
       * </pre>
       */
      public boolean getIsUsed() {
        return isUsed_;
      }
      /**
       * <code>optional bool is_used = 2;</code>
       *
       * <pre>
       *是否有U盘插入
       * </pre>
       */
      public Builder setIsUsed(boolean value) {
        bitField0_ |= 0x00000002;
        isUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_used = 2;</code>
       *
       * <pre>
       *是否有U盘插入
       * </pre>
       */
      public Builder clearIsUsed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isUsed_ = false;
        onChanged();
        return this;
      }

      // repeated .nv.TNVUsbPartition usb_partition = 3;
      private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> usbPartition_ =
        java.util.Collections.emptyList();
      private void ensureUsbPartitionIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          usbPartition_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition>(usbPartition_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder> usbPartitionBuilder_;

      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> getUsbPartitionList() {
        if (usbPartitionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(usbPartition_);
        } else {
          return usbPartitionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public int getUsbPartitionCount() {
        if (usbPartitionBuilder_ == null) {
          return usbPartition_.size();
        } else {
          return usbPartitionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition getUsbPartition(int index) {
        if (usbPartitionBuilder_ == null) {
          return usbPartition_.get(index);
        } else {
          return usbPartitionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder setUsbPartition(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition value) {
        if (usbPartitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbPartitionIsMutable();
          usbPartition_.set(index, value);
          onChanged();
        } else {
          usbPartitionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder setUsbPartition(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder builderForValue) {
        if (usbPartitionBuilder_ == null) {
          ensureUsbPartitionIsMutable();
          usbPartition_.set(index, builderForValue.build());
          onChanged();
        } else {
          usbPartitionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder addUsbPartition(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition value) {
        if (usbPartitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbPartitionIsMutable();
          usbPartition_.add(value);
          onChanged();
        } else {
          usbPartitionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder addUsbPartition(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition value) {
        if (usbPartitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbPartitionIsMutable();
          usbPartition_.add(index, value);
          onChanged();
        } else {
          usbPartitionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder addUsbPartition(
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder builderForValue) {
        if (usbPartitionBuilder_ == null) {
          ensureUsbPartitionIsMutable();
          usbPartition_.add(builderForValue.build());
          onChanged();
        } else {
          usbPartitionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder addUsbPartition(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder builderForValue) {
        if (usbPartitionBuilder_ == null) {
          ensureUsbPartitionIsMutable();
          usbPartition_.add(index, builderForValue.build());
          onChanged();
        } else {
          usbPartitionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder addAllUsbPartition(
          java.lang.Iterable<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition> values) {
        if (usbPartitionBuilder_ == null) {
          ensureUsbPartitionIsMutable();
          super.addAll(values, usbPartition_);
          onChanged();
        } else {
          usbPartitionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder clearUsbPartition() {
        if (usbPartitionBuilder_ == null) {
          usbPartition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          usbPartitionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public Builder removeUsbPartition(int index) {
        if (usbPartitionBuilder_ == null) {
          ensureUsbPartitionIsMutable();
          usbPartition_.remove(index);
          onChanged();
        } else {
          usbPartitionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder getUsbPartitionBuilder(
          int index) {
        return getUsbPartitionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder getUsbPartitionOrBuilder(
          int index) {
        if (usbPartitionBuilder_ == null) {
          return usbPartition_.get(index);  } else {
          return usbPartitionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder> 
           getUsbPartitionOrBuilderList() {
        if (usbPartitionBuilder_ != null) {
          return usbPartitionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(usbPartition_);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder addUsbPartitionBuilder() {
        return getUsbPartitionFieldBuilder().addBuilder(
            com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder addUsbPartitionBuilder(
          int index) {
        return getUsbPartitionFieldBuilder().addBuilder(
            index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVUsbPartition usb_partition = 3;</code>
       *
       * <pre>
       *U盘挂载根目录
       * </pre>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder> 
           getUsbPartitionBuilderList() {
        return getUsbPartitionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder> 
          getUsbPartitionFieldBuilder() {
        if (usbPartitionBuilder_ == null) {
          usbPartitionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartition.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbPartitionOrBuilder>(
                  usbPartition_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          usbPartition_ = null;
        }
        return usbPartitionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVUsbInfo)
    }

    static {
      defaultInstance = new TNVUsbInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVUsbInfo)
  }

  public interface TNVUsbStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .nv.TNVUsbInfo usb_info = 1;
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> 
        getUsbInfoList();
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo getUsbInfo(int index);
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    int getUsbInfoCount();
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder> 
        getUsbInfoOrBuilderList();
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder getUsbInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nv.TNVUsbStatus}
   */
  public static final class TNVUsbStatus extends
      com.google.protobuf.GeneratedMessage
      implements TNVUsbStatusOrBuilder {
    // Use TNVUsbStatus.newBuilder() to construct.
    private TNVUsbStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVUsbStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVUsbStatus defaultInstance;
    public static TNVUsbStatus getDefaultInstance() {
      return defaultInstance;
    }

    public TNVUsbStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVUsbStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                usbInfo_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              usbInfo_.add(input.readMessage(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          usbInfo_ = java.util.Collections.unmodifiableList(usbInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVUsbStatus> PARSER =
        new com.google.protobuf.AbstractParser<TNVUsbStatus>() {
      public TNVUsbStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVUsbStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVUsbStatus> getParserForType() {
      return PARSER;
    }

    // repeated .nv.TNVUsbInfo usb_info = 1;
    public static final int USB_INFO_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> usbInfo_;
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> getUsbInfoList() {
      return usbInfo_;
    }
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder> 
        getUsbInfoOrBuilderList() {
      return usbInfo_;
    }
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    public int getUsbInfoCount() {
      return usbInfo_.size();
    }
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo getUsbInfo(int index) {
      return usbInfo_.get(index);
    }
    /**
     * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder getUsbInfoOrBuilder(
        int index) {
      return usbInfo_.get(index);
    }

    private void initFields() {
      usbInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < usbInfo_.size(); i++) {
        output.writeMessage(1, usbInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < usbInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, usbInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVUsbStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUsbInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (usbInfoBuilder_ == null) {
          usbInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          usbInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVUsbStatus_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus(this);
        int from_bitField0_ = bitField0_;
        if (usbInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            usbInfo_ = java.util.Collections.unmodifiableList(usbInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.usbInfo_ = usbInfo_;
        } else {
          result.usbInfo_ = usbInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus.getDefaultInstance()) return this;
        if (usbInfoBuilder_ == null) {
          if (!other.usbInfo_.isEmpty()) {
            if (usbInfo_.isEmpty()) {
              usbInfo_ = other.usbInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUsbInfoIsMutable();
              usbInfo_.addAll(other.usbInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.usbInfo_.isEmpty()) {
            if (usbInfoBuilder_.isEmpty()) {
              usbInfoBuilder_.dispose();
              usbInfoBuilder_ = null;
              usbInfo_ = other.usbInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              usbInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUsbInfoFieldBuilder() : null;
            } else {
              usbInfoBuilder_.addAllMessages(other.usbInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .nv.TNVUsbInfo usb_info = 1;
      private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> usbInfo_ =
        java.util.Collections.emptyList();
      private void ensureUsbInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          usbInfo_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo>(usbInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder> usbInfoBuilder_;

      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> getUsbInfoList() {
        if (usbInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(usbInfo_);
        } else {
          return usbInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public int getUsbInfoCount() {
        if (usbInfoBuilder_ == null) {
          return usbInfo_.size();
        } else {
          return usbInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo getUsbInfo(int index) {
        if (usbInfoBuilder_ == null) {
          return usbInfo_.get(index);
        } else {
          return usbInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder setUsbInfo(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo value) {
        if (usbInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbInfoIsMutable();
          usbInfo_.set(index, value);
          onChanged();
        } else {
          usbInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder setUsbInfo(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder builderForValue) {
        if (usbInfoBuilder_ == null) {
          ensureUsbInfoIsMutable();
          usbInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          usbInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder addUsbInfo(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo value) {
        if (usbInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbInfoIsMutable();
          usbInfo_.add(value);
          onChanged();
        } else {
          usbInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder addUsbInfo(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo value) {
        if (usbInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsbInfoIsMutable();
          usbInfo_.add(index, value);
          onChanged();
        } else {
          usbInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder addUsbInfo(
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder builderForValue) {
        if (usbInfoBuilder_ == null) {
          ensureUsbInfoIsMutable();
          usbInfo_.add(builderForValue.build());
          onChanged();
        } else {
          usbInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder addUsbInfo(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder builderForValue) {
        if (usbInfoBuilder_ == null) {
          ensureUsbInfoIsMutable();
          usbInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          usbInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder addAllUsbInfo(
          java.lang.Iterable<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo> values) {
        if (usbInfoBuilder_ == null) {
          ensureUsbInfoIsMutable();
          super.addAll(values, usbInfo_);
          onChanged();
        } else {
          usbInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder clearUsbInfo() {
        if (usbInfoBuilder_ == null) {
          usbInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          usbInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public Builder removeUsbInfo(int index) {
        if (usbInfoBuilder_ == null) {
          ensureUsbInfoIsMutable();
          usbInfo_.remove(index);
          onChanged();
        } else {
          usbInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder getUsbInfoBuilder(
          int index) {
        return getUsbInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder getUsbInfoOrBuilder(
          int index) {
        if (usbInfoBuilder_ == null) {
          return usbInfo_.get(index);  } else {
          return usbInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder> 
           getUsbInfoOrBuilderList() {
        if (usbInfoBuilder_ != null) {
          return usbInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(usbInfo_);
        }
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder addUsbInfoBuilder() {
        return getUsbInfoFieldBuilder().addBuilder(
            com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder addUsbInfoBuilder(
          int index) {
        return getUsbInfoFieldBuilder().addBuilder(
            index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVUsbInfo usb_info = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder> 
           getUsbInfoBuilderList() {
        return getUsbInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder> 
          getUsbInfoFieldBuilder() {
        if (usbInfoBuilder_ == null) {
          usbInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVUsbInfoOrBuilder>(
                  usbInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          usbInfo_ = null;
        }
        return usbInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVUsbStatus)
    }

    static {
      defaultInstance = new TNVUsbStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVUsbStatus)
  }

  public interface TNVBrdInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional uint32 brd_id = 2;
    /**
     * <code>optional uint32 brd_id = 2;</code>
     *
     * <pre>
     *板子id
     * </pre>
     */
    boolean hasBrdId();
    /**
     * <code>optional uint32 brd_id = 2;</code>
     *
     * <pre>
     *板子id
     * </pre>
     */
    int getBrdId();

    // optional uint32 brd_version = 3;
    /**
     * <code>optional uint32 brd_version = 3;</code>
     *
     * <pre>
     *板子版本号
     * </pre>
     */
    boolean hasBrdVersion();
    /**
     * <code>optional uint32 brd_version = 3;</code>
     *
     * <pre>
     *板子版本号
     * </pre>
     */
    int getBrdVersion();

    // optional uint32 pld_version = 4;
    /**
     * <code>optional uint32 pld_version = 4;</code>
     *
     * <pre>
     *EPLD/CPLD版本号(D[7:0]=pld3)
     * </pre>
     */
    boolean hasPldVersion();
    /**
     * <code>optional uint32 pld_version = 4;</code>
     *
     * <pre>
     *EPLD/CPLD版本号(D[7:0]=pld3)
     * </pre>
     */
    int getPldVersion();

    // optional uint32 fpga_version = 5;
    /**
     * <code>optional uint32 fpga_version = 5;</code>
     *
     * <pre>
     *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
     * </pre>
     */
    boolean hasFpgaVersion();
    /**
     * <code>optional uint32 fpga_version = 5;</code>
     *
     * <pre>
     *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
     * </pre>
     */
    int getFpgaVersion();

    // optional int32 layer = 6;
    /**
     * <code>optional int32 layer = 6;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: layer ID stackable
     * </pre>
     */
    boolean hasLayer();
    /**
     * <code>optional int32 layer = 6;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: layer ID stackable
     * </pre>
     */
    int getLayer();

    // optional int32 slot = 7;
    /**
     * <code>optional int32 slot = 7;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: slot  ID inserted
     * </pre>
     */
    boolean hasSlot();
    /**
     * <code>optional int32 slot = 7;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: slot  ID inserted
     * </pre>
     */
    int getSlot();

    // optional uint32 CpuNum = 8;
    /**
     * <code>optional uint32 CpuNum = 8;</code>
     *
     * <pre>
     *板子上的cpu个数(包括MCU)
     * </pre>
     */
    boolean hasCpuNum();
    /**
     * <code>optional uint32 CpuNum = 8;</code>
     *
     * <pre>
     *板子上的cpu个数(包括MCU)
     * </pre>
     */
    int getCpuNum();

    // optional uint32 CpuSelfNo = 9;
    /**
     * <code>optional uint32 CpuSelfNo = 9;</code>
     *
     * <pre>
     *index for self-cpu: host-cpu must be 0
     * </pre>
     */
    boolean hasCpuSelfNo();
    /**
     * <code>optional uint32 CpuSelfNo = 9;</code>
     *
     * <pre>
     *index for self-cpu: host-cpu must be 0
     * </pre>
     */
    int getCpuSelfNo();

    // optional uint32 PldNum = 10;
    /**
     * <code>optional uint32 PldNum = 10;</code>
     *
     * <pre>
     *EPLD/CPLD个数
     * </pre>
     */
    boolean hasPldNum();
    /**
     * <code>optional uint32 PldNum = 10;</code>
     *
     * <pre>
     *EPLD/CPLD个数
     * </pre>
     */
    int getPldNum();

    // optional uint32 FpgaNum = 11;
    /**
     * <code>optional uint32 FpgaNum = 11;</code>
     *
     * <pre>
     *FPGA个数
     * </pre>
     */
    boolean hasFpgaNum();
    /**
     * <code>optional uint32 FpgaNum = 11;</code>
     *
     * <pre>
     *FPGA个数
     * </pre>
     */
    int getFpgaNum();

    // optional uint32 RtcNum = 12;
    /**
     * <code>optional uint32 RtcNum = 12;</code>
     *
     * <pre>
     *Rtc个数
     * </pre>
     */
    boolean hasRtcNum();
    /**
     * <code>optional uint32 RtcNum = 12;</code>
     *
     * <pre>
     *Rtc个数
     * </pre>
     */
    int getRtcNum();

    // optional uint32 EthNum = 13;
    /**
     * <code>optional uint32 EthNum = 13;</code>
     *
     * <pre>
     *以太网个数(包括Wifi)
     * </pre>
     */
    boolean hasEthNum();
    /**
     * <code>optional uint32 EthNum = 13;</code>
     *
     * <pre>
     *以太网个数(包括Wifi)
     * </pre>
     */
    int getEthNum();

    // optional uint32 E1Num = 14;
    /**
     * <code>optional uint32 E1Num = 14;</code>
     *
     * <pre>
     *E1接口合数
     * </pre>
     */
    boolean hasE1Num();
    /**
     * <code>optional uint32 E1Num = 14;</code>
     *
     * <pre>
     *E1接口合数
     * </pre>
     */
    int getE1Num();

    // optional uint32 V35Num = 15;
    /**
     * <code>optional uint32 V35Num = 15;</code>
     *
     * <pre>
     *V35接口个数
     * </pre>
     */
    boolean hasV35Num();
    /**
     * <code>optional uint32 V35Num = 15;</code>
     *
     * <pre>
     *V35接口个数
     * </pre>
     */
    int getV35Num();

    // optional uint32 SerialNum = 16;
    /**
     * <code>optional uint32 SerialNum = 16;</code>
     *
     * <pre>
     *串口个数
     * </pre>
     */
    boolean hasSerialNum();
    /**
     * <code>optional uint32 SerialNum = 16;</code>
     *
     * <pre>
     *串口个数
     * </pre>
     */
    int getSerialNum();

    // optional uint32 FanNum = 17;
    /**
     * <code>optional uint32 FanNum = 17;</code>
     *
     * <pre>
     *风扇个数
     * </pre>
     */
    boolean hasFanNum();
    /**
     * <code>optional uint32 FanNum = 17;</code>
     *
     * <pre>
     *风扇个数
     * </pre>
     */
    int getFanNum();

    // optional uint32 LedNum = 18;
    /**
     * <code>optional uint32 LedNum = 18;</code>
     *
     * <pre>
     *Led个数
     * </pre>
     */
    boolean hasLedNum();
    /**
     * <code>optional uint32 LedNum = 18;</code>
     *
     * <pre>
     *Led个数
     * </pre>
     */
    int getLedNum();

    // optional uint32 ButtonNum = 19;
    /**
     * <code>optional uint32 ButtonNum = 19;</code>
     *
     * <pre>
     *按键个数
     * </pre>
     */
    boolean hasButtonNum();
    /**
     * <code>optional uint32 ButtonNum = 19;</code>
     *
     * <pre>
     *按键个数
     * </pre>
     */
    int getButtonNum();

    // optional uint32 HwmonNum = 20;
    /**
     * <code>optional uint32 HwmonNum = 20;</code>
     *
     * <pre>
     *硬件监控器物镜数，如温度电压
     * </pre>
     */
    boolean hasHwmonNum();
    /**
     * <code>optional uint32 HwmonNum = 20;</code>
     *
     * <pre>
     *硬件监控器物镜数，如温度电压
     * </pre>
     */
    int getHwmonNum();

    // optional uint32 OledNum = 21;
    /**
     * <code>optional uint32 OledNum = 21;</code>
     *
     * <pre>
     *Oled屏幕个数
     * </pre>
     */
    boolean hasOledNum();
    /**
     * <code>optional uint32 OledNum = 21;</code>
     *
     * <pre>
     *Oled屏幕个数
     * </pre>
     */
    int getOledNum();
  }
  /**
   * Protobuf type {@code nv.TNVBrdInfo}
   */
  public static final class TNVBrdInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNVBrdInfoOrBuilder {
    // Use TNVBrdInfo.newBuilder() to construct.
    private TNVBrdInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVBrdInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVBrdInfo defaultInstance;
    public static TNVBrdInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNVBrdInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVBrdInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              brdId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              brdVersion_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pldVersion_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fpgaVersion_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              layer_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              slot_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              cpuNum_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              cpuSelfNo_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pldNum_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              fpgaNum_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              rtcNum_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              ethNum_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              e1Num_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              v35Num_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              serialNum_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              fanNum_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              ledNum_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              buttonNum_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              hwmonNum_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              oledNum_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVBrdInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVBrdInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVBrdInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNVBrdInfo>() {
      public TNVBrdInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVBrdInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVBrdInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *板子名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 brd_id = 2;
    public static final int BRD_ID_FIELD_NUMBER = 2;
    private int brdId_;
    /**
     * <code>optional uint32 brd_id = 2;</code>
     *
     * <pre>
     *板子id
     * </pre>
     */
    public boolean hasBrdId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 brd_id = 2;</code>
     *
     * <pre>
     *板子id
     * </pre>
     */
    public int getBrdId() {
      return brdId_;
    }

    // optional uint32 brd_version = 3;
    public static final int BRD_VERSION_FIELD_NUMBER = 3;
    private int brdVersion_;
    /**
     * <code>optional uint32 brd_version = 3;</code>
     *
     * <pre>
     *板子版本号
     * </pre>
     */
    public boolean hasBrdVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 brd_version = 3;</code>
     *
     * <pre>
     *板子版本号
     * </pre>
     */
    public int getBrdVersion() {
      return brdVersion_;
    }

    // optional uint32 pld_version = 4;
    public static final int PLD_VERSION_FIELD_NUMBER = 4;
    private int pldVersion_;
    /**
     * <code>optional uint32 pld_version = 4;</code>
     *
     * <pre>
     *EPLD/CPLD版本号(D[7:0]=pld3)
     * </pre>
     */
    public boolean hasPldVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 pld_version = 4;</code>
     *
     * <pre>
     *EPLD/CPLD版本号(D[7:0]=pld3)
     * </pre>
     */
    public int getPldVersion() {
      return pldVersion_;
    }

    // optional uint32 fpga_version = 5;
    public static final int FPGA_VERSION_FIELD_NUMBER = 5;
    private int fpgaVersion_;
    /**
     * <code>optional uint32 fpga_version = 5;</code>
     *
     * <pre>
     *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
     * </pre>
     */
    public boolean hasFpgaVersion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 fpga_version = 5;</code>
     *
     * <pre>
     *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
     * </pre>
     */
    public int getFpgaVersion() {
      return fpgaVersion_;
    }

    // optional int32 layer = 6;
    public static final int LAYER_FIELD_NUMBER = 6;
    private int layer_;
    /**
     * <code>optional int32 layer = 6;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: layer ID stackable
     * </pre>
     */
    public boolean hasLayer() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 layer = 6;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: layer ID stackable
     * </pre>
     */
    public int getLayer() {
      return layer_;
    }

    // optional int32 slot = 7;
    public static final int SLOT_FIELD_NUMBER = 7;
    private int slot_;
    /**
     * <code>optional int32 slot = 7;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: slot  ID inserted
     * </pre>
     */
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 slot = 7;</code>
     *
     * <pre>
     *&lt; 0: no support; 0 - Max: slot  ID inserted
     * </pre>
     */
    public int getSlot() {
      return slot_;
    }

    // optional uint32 CpuNum = 8;
    public static final int CPUNUM_FIELD_NUMBER = 8;
    private int cpuNum_;
    /**
     * <code>optional uint32 CpuNum = 8;</code>
     *
     * <pre>
     *板子上的cpu个数(包括MCU)
     * </pre>
     */
    public boolean hasCpuNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 CpuNum = 8;</code>
     *
     * <pre>
     *板子上的cpu个数(包括MCU)
     * </pre>
     */
    public int getCpuNum() {
      return cpuNum_;
    }

    // optional uint32 CpuSelfNo = 9;
    public static final int CPUSELFNO_FIELD_NUMBER = 9;
    private int cpuSelfNo_;
    /**
     * <code>optional uint32 CpuSelfNo = 9;</code>
     *
     * <pre>
     *index for self-cpu: host-cpu must be 0
     * </pre>
     */
    public boolean hasCpuSelfNo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 CpuSelfNo = 9;</code>
     *
     * <pre>
     *index for self-cpu: host-cpu must be 0
     * </pre>
     */
    public int getCpuSelfNo() {
      return cpuSelfNo_;
    }

    // optional uint32 PldNum = 10;
    public static final int PLDNUM_FIELD_NUMBER = 10;
    private int pldNum_;
    /**
     * <code>optional uint32 PldNum = 10;</code>
     *
     * <pre>
     *EPLD/CPLD个数
     * </pre>
     */
    public boolean hasPldNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 PldNum = 10;</code>
     *
     * <pre>
     *EPLD/CPLD个数
     * </pre>
     */
    public int getPldNum() {
      return pldNum_;
    }

    // optional uint32 FpgaNum = 11;
    public static final int FPGANUM_FIELD_NUMBER = 11;
    private int fpgaNum_;
    /**
     * <code>optional uint32 FpgaNum = 11;</code>
     *
     * <pre>
     *FPGA个数
     * </pre>
     */
    public boolean hasFpgaNum() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 FpgaNum = 11;</code>
     *
     * <pre>
     *FPGA个数
     * </pre>
     */
    public int getFpgaNum() {
      return fpgaNum_;
    }

    // optional uint32 RtcNum = 12;
    public static final int RTCNUM_FIELD_NUMBER = 12;
    private int rtcNum_;
    /**
     * <code>optional uint32 RtcNum = 12;</code>
     *
     * <pre>
     *Rtc个数
     * </pre>
     */
    public boolean hasRtcNum() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 RtcNum = 12;</code>
     *
     * <pre>
     *Rtc个数
     * </pre>
     */
    public int getRtcNum() {
      return rtcNum_;
    }

    // optional uint32 EthNum = 13;
    public static final int ETHNUM_FIELD_NUMBER = 13;
    private int ethNum_;
    /**
     * <code>optional uint32 EthNum = 13;</code>
     *
     * <pre>
     *以太网个数(包括Wifi)
     * </pre>
     */
    public boolean hasEthNum() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 EthNum = 13;</code>
     *
     * <pre>
     *以太网个数(包括Wifi)
     * </pre>
     */
    public int getEthNum() {
      return ethNum_;
    }

    // optional uint32 E1Num = 14;
    public static final int E1NUM_FIELD_NUMBER = 14;
    private int e1Num_;
    /**
     * <code>optional uint32 E1Num = 14;</code>
     *
     * <pre>
     *E1接口合数
     * </pre>
     */
    public boolean hasE1Num() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 E1Num = 14;</code>
     *
     * <pre>
     *E1接口合数
     * </pre>
     */
    public int getE1Num() {
      return e1Num_;
    }

    // optional uint32 V35Num = 15;
    public static final int V35NUM_FIELD_NUMBER = 15;
    private int v35Num_;
    /**
     * <code>optional uint32 V35Num = 15;</code>
     *
     * <pre>
     *V35接口个数
     * </pre>
     */
    public boolean hasV35Num() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 V35Num = 15;</code>
     *
     * <pre>
     *V35接口个数
     * </pre>
     */
    public int getV35Num() {
      return v35Num_;
    }

    // optional uint32 SerialNum = 16;
    public static final int SERIALNUM_FIELD_NUMBER = 16;
    private int serialNum_;
    /**
     * <code>optional uint32 SerialNum = 16;</code>
     *
     * <pre>
     *串口个数
     * </pre>
     */
    public boolean hasSerialNum() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 SerialNum = 16;</code>
     *
     * <pre>
     *串口个数
     * </pre>
     */
    public int getSerialNum() {
      return serialNum_;
    }

    // optional uint32 FanNum = 17;
    public static final int FANNUM_FIELD_NUMBER = 17;
    private int fanNum_;
    /**
     * <code>optional uint32 FanNum = 17;</code>
     *
     * <pre>
     *风扇个数
     * </pre>
     */
    public boolean hasFanNum() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 FanNum = 17;</code>
     *
     * <pre>
     *风扇个数
     * </pre>
     */
    public int getFanNum() {
      return fanNum_;
    }

    // optional uint32 LedNum = 18;
    public static final int LEDNUM_FIELD_NUMBER = 18;
    private int ledNum_;
    /**
     * <code>optional uint32 LedNum = 18;</code>
     *
     * <pre>
     *Led个数
     * </pre>
     */
    public boolean hasLedNum() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 LedNum = 18;</code>
     *
     * <pre>
     *Led个数
     * </pre>
     */
    public int getLedNum() {
      return ledNum_;
    }

    // optional uint32 ButtonNum = 19;
    public static final int BUTTONNUM_FIELD_NUMBER = 19;
    private int buttonNum_;
    /**
     * <code>optional uint32 ButtonNum = 19;</code>
     *
     * <pre>
     *按键个数
     * </pre>
     */
    public boolean hasButtonNum() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 ButtonNum = 19;</code>
     *
     * <pre>
     *按键个数
     * </pre>
     */
    public int getButtonNum() {
      return buttonNum_;
    }

    // optional uint32 HwmonNum = 20;
    public static final int HWMONNUM_FIELD_NUMBER = 20;
    private int hwmonNum_;
    /**
     * <code>optional uint32 HwmonNum = 20;</code>
     *
     * <pre>
     *硬件监控器物镜数，如温度电压
     * </pre>
     */
    public boolean hasHwmonNum() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 HwmonNum = 20;</code>
     *
     * <pre>
     *硬件监控器物镜数，如温度电压
     * </pre>
     */
    public int getHwmonNum() {
      return hwmonNum_;
    }

    // optional uint32 OledNum = 21;
    public static final int OLEDNUM_FIELD_NUMBER = 21;
    private int oledNum_;
    /**
     * <code>optional uint32 OledNum = 21;</code>
     *
     * <pre>
     *Oled屏幕个数
     * </pre>
     */
    public boolean hasOledNum() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 OledNum = 21;</code>
     *
     * <pre>
     *Oled屏幕个数
     * </pre>
     */
    public int getOledNum() {
      return oledNum_;
    }

    private void initFields() {
      name_ = "";
      brdId_ = 0;
      brdVersion_ = 0;
      pldVersion_ = 0;
      fpgaVersion_ = 0;
      layer_ = 0;
      slot_ = 0;
      cpuNum_ = 0;
      cpuSelfNo_ = 0;
      pldNum_ = 0;
      fpgaNum_ = 0;
      rtcNum_ = 0;
      ethNum_ = 0;
      e1Num_ = 0;
      v35Num_ = 0;
      serialNum_ = 0;
      fanNum_ = 0;
      ledNum_ = 0;
      buttonNum_ = 0;
      hwmonNum_ = 0;
      oledNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, brdId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, brdVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, pldVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, fpgaVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, layer_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, slot_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, cpuNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, cpuSelfNo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, pldNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, fpgaNum_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, rtcNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, ethNum_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, e1Num_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(15, v35Num_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(16, serialNum_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, fanNum_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(18, ledNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(19, buttonNum_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(20, hwmonNum_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(21, oledNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, brdId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, brdVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, pldVersion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, fpgaVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, layer_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, slot_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, cpuNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, cpuSelfNo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, pldNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, fpgaNum_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, rtcNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, ethNum_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, e1Num_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, v35Num_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, serialNum_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, fanNum_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, ledNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, buttonNum_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, hwmonNum_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, oledNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVBrdInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVBrdInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVBrdInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        brdId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        brdVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pldVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fpgaVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        layer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        cpuNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        cpuSelfNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pldNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        fpgaNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        rtcNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        ethNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        e1Num_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        v35Num_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        serialNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        fanNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        ledNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        buttonNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        hwmonNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        oledNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVBrdInfo_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.brdId_ = brdId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.brdVersion_ = brdVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pldVersion_ = pldVersion_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fpgaVersion_ = fpgaVersion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.layer_ = layer_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cpuNum_ = cpuNum_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cpuSelfNo_ = cpuSelfNo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pldNum_ = pldNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.fpgaNum_ = fpgaNum_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.rtcNum_ = rtcNum_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.ethNum_ = ethNum_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.e1Num_ = e1Num_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.v35Num_ = v35Num_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.serialNum_ = serialNum_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.fanNum_ = fanNum_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.ledNum_ = ledNum_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.buttonNum_ = buttonNum_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.hwmonNum_ = hwmonNum_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.oledNum_ = oledNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasBrdId()) {
          setBrdId(other.getBrdId());
        }
        if (other.hasBrdVersion()) {
          setBrdVersion(other.getBrdVersion());
        }
        if (other.hasPldVersion()) {
          setPldVersion(other.getPldVersion());
        }
        if (other.hasFpgaVersion()) {
          setFpgaVersion(other.getFpgaVersion());
        }
        if (other.hasLayer()) {
          setLayer(other.getLayer());
        }
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasCpuNum()) {
          setCpuNum(other.getCpuNum());
        }
        if (other.hasCpuSelfNo()) {
          setCpuSelfNo(other.getCpuSelfNo());
        }
        if (other.hasPldNum()) {
          setPldNum(other.getPldNum());
        }
        if (other.hasFpgaNum()) {
          setFpgaNum(other.getFpgaNum());
        }
        if (other.hasRtcNum()) {
          setRtcNum(other.getRtcNum());
        }
        if (other.hasEthNum()) {
          setEthNum(other.getEthNum());
        }
        if (other.hasE1Num()) {
          setE1Num(other.getE1Num());
        }
        if (other.hasV35Num()) {
          setV35Num(other.getV35Num());
        }
        if (other.hasSerialNum()) {
          setSerialNum(other.getSerialNum());
        }
        if (other.hasFanNum()) {
          setFanNum(other.getFanNum());
        }
        if (other.hasLedNum()) {
          setLedNum(other.getLedNum());
        }
        if (other.hasButtonNum()) {
          setButtonNum(other.getButtonNum());
        }
        if (other.hasHwmonNum()) {
          setHwmonNum(other.getHwmonNum());
        }
        if (other.hasOledNum()) {
          setOledNum(other.getOledNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVBrdInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *板子名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // optional uint32 brd_id = 2;
      private int brdId_ ;
      /**
       * <code>optional uint32 brd_id = 2;</code>
       *
       * <pre>
       *板子id
       * </pre>
       */
      public boolean hasBrdId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 brd_id = 2;</code>
       *
       * <pre>
       *板子id
       * </pre>
       */
      public int getBrdId() {
        return brdId_;
      }
      /**
       * <code>optional uint32 brd_id = 2;</code>
       *
       * <pre>
       *板子id
       * </pre>
       */
      public Builder setBrdId(int value) {
        bitField0_ |= 0x00000002;
        brdId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 brd_id = 2;</code>
       *
       * <pre>
       *板子id
       * </pre>
       */
      public Builder clearBrdId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        brdId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 brd_version = 3;
      private int brdVersion_ ;
      /**
       * <code>optional uint32 brd_version = 3;</code>
       *
       * <pre>
       *板子版本号
       * </pre>
       */
      public boolean hasBrdVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 brd_version = 3;</code>
       *
       * <pre>
       *板子版本号
       * </pre>
       */
      public int getBrdVersion() {
        return brdVersion_;
      }
      /**
       * <code>optional uint32 brd_version = 3;</code>
       *
       * <pre>
       *板子版本号
       * </pre>
       */
      public Builder setBrdVersion(int value) {
        bitField0_ |= 0x00000004;
        brdVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 brd_version = 3;</code>
       *
       * <pre>
       *板子版本号
       * </pre>
       */
      public Builder clearBrdVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        brdVersion_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 pld_version = 4;
      private int pldVersion_ ;
      /**
       * <code>optional uint32 pld_version = 4;</code>
       *
       * <pre>
       *EPLD/CPLD版本号(D[7:0]=pld3)
       * </pre>
       */
      public boolean hasPldVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 pld_version = 4;</code>
       *
       * <pre>
       *EPLD/CPLD版本号(D[7:0]=pld3)
       * </pre>
       */
      public int getPldVersion() {
        return pldVersion_;
      }
      /**
       * <code>optional uint32 pld_version = 4;</code>
       *
       * <pre>
       *EPLD/CPLD版本号(D[7:0]=pld3)
       * </pre>
       */
      public Builder setPldVersion(int value) {
        bitField0_ |= 0x00000008;
        pldVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pld_version = 4;</code>
       *
       * <pre>
       *EPLD/CPLD版本号(D[7:0]=pld3)
       * </pre>
       */
      public Builder clearPldVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pldVersion_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 fpga_version = 5;
      private int fpgaVersion_ ;
      /**
       * <code>optional uint32 fpga_version = 5;</code>
       *
       * <pre>
       *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
       * </pre>
       */
      public boolean hasFpgaVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 fpga_version = 5;</code>
       *
       * <pre>
       *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
       * </pre>
       */
      public int getFpgaVersion() {
        return fpgaVersion_;
      }
      /**
       * <code>optional uint32 fpga_version = 5;</code>
       *
       * <pre>
       *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
       * </pre>
       */
      public Builder setFpgaVersion(int value) {
        bitField0_ |= 0x00000010;
        fpgaVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fpga_version = 5;</code>
       *
       * <pre>
       *FPGA版本号(D[15:8]=fpga1, D[7:0]=fpga0)
       * </pre>
       */
      public Builder clearFpgaVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fpgaVersion_ = 0;
        onChanged();
        return this;
      }

      // optional int32 layer = 6;
      private int layer_ ;
      /**
       * <code>optional int32 layer = 6;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: layer ID stackable
       * </pre>
       */
      public boolean hasLayer() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 layer = 6;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: layer ID stackable
       * </pre>
       */
      public int getLayer() {
        return layer_;
      }
      /**
       * <code>optional int32 layer = 6;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: layer ID stackable
       * </pre>
       */
      public Builder setLayer(int value) {
        bitField0_ |= 0x00000020;
        layer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 layer = 6;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: layer ID stackable
       * </pre>
       */
      public Builder clearLayer() {
        bitField0_ = (bitField0_ & ~0x00000020);
        layer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 slot = 7;
      private int slot_ ;
      /**
       * <code>optional int32 slot = 7;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: slot  ID inserted
       * </pre>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 slot = 7;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: slot  ID inserted
       * </pre>
       */
      public int getSlot() {
        return slot_;
      }
      /**
       * <code>optional int32 slot = 7;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: slot  ID inserted
       * </pre>
       */
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000040;
        slot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slot = 7;</code>
       *
       * <pre>
       *&lt; 0: no support; 0 - Max: slot  ID inserted
       * </pre>
       */
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000040);
        slot_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 CpuNum = 8;
      private int cpuNum_ ;
      /**
       * <code>optional uint32 CpuNum = 8;</code>
       *
       * <pre>
       *板子上的cpu个数(包括MCU)
       * </pre>
       */
      public boolean hasCpuNum() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 CpuNum = 8;</code>
       *
       * <pre>
       *板子上的cpu个数(包括MCU)
       * </pre>
       */
      public int getCpuNum() {
        return cpuNum_;
      }
      /**
       * <code>optional uint32 CpuNum = 8;</code>
       *
       * <pre>
       *板子上的cpu个数(包括MCU)
       * </pre>
       */
      public Builder setCpuNum(int value) {
        bitField0_ |= 0x00000080;
        cpuNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 CpuNum = 8;</code>
       *
       * <pre>
       *板子上的cpu个数(包括MCU)
       * </pre>
       */
      public Builder clearCpuNum() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cpuNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 CpuSelfNo = 9;
      private int cpuSelfNo_ ;
      /**
       * <code>optional uint32 CpuSelfNo = 9;</code>
       *
       * <pre>
       *index for self-cpu: host-cpu must be 0
       * </pre>
       */
      public boolean hasCpuSelfNo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 CpuSelfNo = 9;</code>
       *
       * <pre>
       *index for self-cpu: host-cpu must be 0
       * </pre>
       */
      public int getCpuSelfNo() {
        return cpuSelfNo_;
      }
      /**
       * <code>optional uint32 CpuSelfNo = 9;</code>
       *
       * <pre>
       *index for self-cpu: host-cpu must be 0
       * </pre>
       */
      public Builder setCpuSelfNo(int value) {
        bitField0_ |= 0x00000100;
        cpuSelfNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 CpuSelfNo = 9;</code>
       *
       * <pre>
       *index for self-cpu: host-cpu must be 0
       * </pre>
       */
      public Builder clearCpuSelfNo() {
        bitField0_ = (bitField0_ & ~0x00000100);
        cpuSelfNo_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 PldNum = 10;
      private int pldNum_ ;
      /**
       * <code>optional uint32 PldNum = 10;</code>
       *
       * <pre>
       *EPLD/CPLD个数
       * </pre>
       */
      public boolean hasPldNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 PldNum = 10;</code>
       *
       * <pre>
       *EPLD/CPLD个数
       * </pre>
       */
      public int getPldNum() {
        return pldNum_;
      }
      /**
       * <code>optional uint32 PldNum = 10;</code>
       *
       * <pre>
       *EPLD/CPLD个数
       * </pre>
       */
      public Builder setPldNum(int value) {
        bitField0_ |= 0x00000200;
        pldNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PldNum = 10;</code>
       *
       * <pre>
       *EPLD/CPLD个数
       * </pre>
       */
      public Builder clearPldNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pldNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 FpgaNum = 11;
      private int fpgaNum_ ;
      /**
       * <code>optional uint32 FpgaNum = 11;</code>
       *
       * <pre>
       *FPGA个数
       * </pre>
       */
      public boolean hasFpgaNum() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 FpgaNum = 11;</code>
       *
       * <pre>
       *FPGA个数
       * </pre>
       */
      public int getFpgaNum() {
        return fpgaNum_;
      }
      /**
       * <code>optional uint32 FpgaNum = 11;</code>
       *
       * <pre>
       *FPGA个数
       * </pre>
       */
      public Builder setFpgaNum(int value) {
        bitField0_ |= 0x00000400;
        fpgaNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 FpgaNum = 11;</code>
       *
       * <pre>
       *FPGA个数
       * </pre>
       */
      public Builder clearFpgaNum() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fpgaNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 RtcNum = 12;
      private int rtcNum_ ;
      /**
       * <code>optional uint32 RtcNum = 12;</code>
       *
       * <pre>
       *Rtc个数
       * </pre>
       */
      public boolean hasRtcNum() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 RtcNum = 12;</code>
       *
       * <pre>
       *Rtc个数
       * </pre>
       */
      public int getRtcNum() {
        return rtcNum_;
      }
      /**
       * <code>optional uint32 RtcNum = 12;</code>
       *
       * <pre>
       *Rtc个数
       * </pre>
       */
      public Builder setRtcNum(int value) {
        bitField0_ |= 0x00000800;
        rtcNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 RtcNum = 12;</code>
       *
       * <pre>
       *Rtc个数
       * </pre>
       */
      public Builder clearRtcNum() {
        bitField0_ = (bitField0_ & ~0x00000800);
        rtcNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 EthNum = 13;
      private int ethNum_ ;
      /**
       * <code>optional uint32 EthNum = 13;</code>
       *
       * <pre>
       *以太网个数(包括Wifi)
       * </pre>
       */
      public boolean hasEthNum() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 EthNum = 13;</code>
       *
       * <pre>
       *以太网个数(包括Wifi)
       * </pre>
       */
      public int getEthNum() {
        return ethNum_;
      }
      /**
       * <code>optional uint32 EthNum = 13;</code>
       *
       * <pre>
       *以太网个数(包括Wifi)
       * </pre>
       */
      public Builder setEthNum(int value) {
        bitField0_ |= 0x00001000;
        ethNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 EthNum = 13;</code>
       *
       * <pre>
       *以太网个数(包括Wifi)
       * </pre>
       */
      public Builder clearEthNum() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ethNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 E1Num = 14;
      private int e1Num_ ;
      /**
       * <code>optional uint32 E1Num = 14;</code>
       *
       * <pre>
       *E1接口合数
       * </pre>
       */
      public boolean hasE1Num() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 E1Num = 14;</code>
       *
       * <pre>
       *E1接口合数
       * </pre>
       */
      public int getE1Num() {
        return e1Num_;
      }
      /**
       * <code>optional uint32 E1Num = 14;</code>
       *
       * <pre>
       *E1接口合数
       * </pre>
       */
      public Builder setE1Num(int value) {
        bitField0_ |= 0x00002000;
        e1Num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 E1Num = 14;</code>
       *
       * <pre>
       *E1接口合数
       * </pre>
       */
      public Builder clearE1Num() {
        bitField0_ = (bitField0_ & ~0x00002000);
        e1Num_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 V35Num = 15;
      private int v35Num_ ;
      /**
       * <code>optional uint32 V35Num = 15;</code>
       *
       * <pre>
       *V35接口个数
       * </pre>
       */
      public boolean hasV35Num() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 V35Num = 15;</code>
       *
       * <pre>
       *V35接口个数
       * </pre>
       */
      public int getV35Num() {
        return v35Num_;
      }
      /**
       * <code>optional uint32 V35Num = 15;</code>
       *
       * <pre>
       *V35接口个数
       * </pre>
       */
      public Builder setV35Num(int value) {
        bitField0_ |= 0x00004000;
        v35Num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 V35Num = 15;</code>
       *
       * <pre>
       *V35接口个数
       * </pre>
       */
      public Builder clearV35Num() {
        bitField0_ = (bitField0_ & ~0x00004000);
        v35Num_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 SerialNum = 16;
      private int serialNum_ ;
      /**
       * <code>optional uint32 SerialNum = 16;</code>
       *
       * <pre>
       *串口个数
       * </pre>
       */
      public boolean hasSerialNum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 SerialNum = 16;</code>
       *
       * <pre>
       *串口个数
       * </pre>
       */
      public int getSerialNum() {
        return serialNum_;
      }
      /**
       * <code>optional uint32 SerialNum = 16;</code>
       *
       * <pre>
       *串口个数
       * </pre>
       */
      public Builder setSerialNum(int value) {
        bitField0_ |= 0x00008000;
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SerialNum = 16;</code>
       *
       * <pre>
       *串口个数
       * </pre>
       */
      public Builder clearSerialNum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        serialNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 FanNum = 17;
      private int fanNum_ ;
      /**
       * <code>optional uint32 FanNum = 17;</code>
       *
       * <pre>
       *风扇个数
       * </pre>
       */
      public boolean hasFanNum() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 FanNum = 17;</code>
       *
       * <pre>
       *风扇个数
       * </pre>
       */
      public int getFanNum() {
        return fanNum_;
      }
      /**
       * <code>optional uint32 FanNum = 17;</code>
       *
       * <pre>
       *风扇个数
       * </pre>
       */
      public Builder setFanNum(int value) {
        bitField0_ |= 0x00010000;
        fanNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 FanNum = 17;</code>
       *
       * <pre>
       *风扇个数
       * </pre>
       */
      public Builder clearFanNum() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fanNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 LedNum = 18;
      private int ledNum_ ;
      /**
       * <code>optional uint32 LedNum = 18;</code>
       *
       * <pre>
       *Led个数
       * </pre>
       */
      public boolean hasLedNum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 LedNum = 18;</code>
       *
       * <pre>
       *Led个数
       * </pre>
       */
      public int getLedNum() {
        return ledNum_;
      }
      /**
       * <code>optional uint32 LedNum = 18;</code>
       *
       * <pre>
       *Led个数
       * </pre>
       */
      public Builder setLedNum(int value) {
        bitField0_ |= 0x00020000;
        ledNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 LedNum = 18;</code>
       *
       * <pre>
       *Led个数
       * </pre>
       */
      public Builder clearLedNum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        ledNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ButtonNum = 19;
      private int buttonNum_ ;
      /**
       * <code>optional uint32 ButtonNum = 19;</code>
       *
       * <pre>
       *按键个数
       * </pre>
       */
      public boolean hasButtonNum() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 ButtonNum = 19;</code>
       *
       * <pre>
       *按键个数
       * </pre>
       */
      public int getButtonNum() {
        return buttonNum_;
      }
      /**
       * <code>optional uint32 ButtonNum = 19;</code>
       *
       * <pre>
       *按键个数
       * </pre>
       */
      public Builder setButtonNum(int value) {
        bitField0_ |= 0x00040000;
        buttonNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ButtonNum = 19;</code>
       *
       * <pre>
       *按键个数
       * </pre>
       */
      public Builder clearButtonNum() {
        bitField0_ = (bitField0_ & ~0x00040000);
        buttonNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 HwmonNum = 20;
      private int hwmonNum_ ;
      /**
       * <code>optional uint32 HwmonNum = 20;</code>
       *
       * <pre>
       *硬件监控器物镜数，如温度电压
       * </pre>
       */
      public boolean hasHwmonNum() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 HwmonNum = 20;</code>
       *
       * <pre>
       *硬件监控器物镜数，如温度电压
       * </pre>
       */
      public int getHwmonNum() {
        return hwmonNum_;
      }
      /**
       * <code>optional uint32 HwmonNum = 20;</code>
       *
       * <pre>
       *硬件监控器物镜数，如温度电压
       * </pre>
       */
      public Builder setHwmonNum(int value) {
        bitField0_ |= 0x00080000;
        hwmonNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 HwmonNum = 20;</code>
       *
       * <pre>
       *硬件监控器物镜数，如温度电压
       * </pre>
       */
      public Builder clearHwmonNum() {
        bitField0_ = (bitField0_ & ~0x00080000);
        hwmonNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 OledNum = 21;
      private int oledNum_ ;
      /**
       * <code>optional uint32 OledNum = 21;</code>
       *
       * <pre>
       *Oled屏幕个数
       * </pre>
       */
      public boolean hasOledNum() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 OledNum = 21;</code>
       *
       * <pre>
       *Oled屏幕个数
       * </pre>
       */
      public int getOledNum() {
        return oledNum_;
      }
      /**
       * <code>optional uint32 OledNum = 21;</code>
       *
       * <pre>
       *Oled屏幕个数
       * </pre>
       */
      public Builder setOledNum(int value) {
        bitField0_ |= 0x00100000;
        oledNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 OledNum = 21;</code>
       *
       * <pre>
       *Oled屏幕个数
       * </pre>
       */
      public Builder clearOledNum() {
        bitField0_ = (bitField0_ & ~0x00100000);
        oledNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVBrdInfo)
    }

    static {
      defaultInstance = new TNVBrdInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVBrdInfo)
  }

  public interface TNVCpuAndMemStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 cpu_idle_percent = 1;
    /**
     * <code>optional uint32 cpu_idle_percent = 1;</code>
     *
     * <pre>
     *CPU空闲百分比，0－100
     * </pre>
     */
    boolean hasCpuIdlePercent();
    /**
     * <code>optional uint32 cpu_idle_percent = 1;</code>
     *
     * <pre>
     *CPU空闲百分比，0－100
     * </pre>
     */
    int getCpuIdlePercent();

    // optional uint32 mem_total_size = 2;
    /**
     * <code>optional uint32 mem_total_size = 2;</code>
     *
     * <pre>
     *物理内存大小(KByte)
     * </pre>
     */
    boolean hasMemTotalSize();
    /**
     * <code>optional uint32 mem_total_size = 2;</code>
     *
     * <pre>
     *物理内存大小(KByte)
     * </pre>
     */
    int getMemTotalSize();

    // optional uint32 mem_alloc_size = 3;
    /**
     * <code>optional uint32 mem_alloc_size = 3;</code>
     *
     * <pre>
     *已使用内存(KBytes)
     * </pre>
     */
    boolean hasMemAllocSize();
    /**
     * <code>optional uint32 mem_alloc_size = 3;</code>
     *
     * <pre>
     *已使用内存(KBytes)
     * </pre>
     */
    int getMemAllocSize();

    // optional uint32 mem_free_size = 4;
    /**
     * <code>optional uint32 mem_free_size = 4;</code>
     *
     * <pre>
     *可用内存(KBytes)
     * </pre>
     */
    boolean hasMemFreeSize();
    /**
     * <code>optional uint32 mem_free_size = 4;</code>
     *
     * <pre>
     *可用内存(KBytes)
     * </pre>
     */
    int getMemFreeSize();
  }
  /**
   * Protobuf type {@code nv.TNVCpuAndMemState}
   */
  public static final class TNVCpuAndMemState extends
      com.google.protobuf.GeneratedMessage
      implements TNVCpuAndMemStateOrBuilder {
    // Use TNVCpuAndMemState.newBuilder() to construct.
    private TNVCpuAndMemState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVCpuAndMemState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVCpuAndMemState defaultInstance;
    public static TNVCpuAndMemState getDefaultInstance() {
      return defaultInstance;
    }

    public TNVCpuAndMemState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVCpuAndMemState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cpuIdlePercent_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              memTotalSize_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              memAllocSize_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              memFreeSize_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVCpuAndMemState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVCpuAndMemState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVCpuAndMemState> PARSER =
        new com.google.protobuf.AbstractParser<TNVCpuAndMemState>() {
      public TNVCpuAndMemState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVCpuAndMemState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVCpuAndMemState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 cpu_idle_percent = 1;
    public static final int CPU_IDLE_PERCENT_FIELD_NUMBER = 1;
    private int cpuIdlePercent_;
    /**
     * <code>optional uint32 cpu_idle_percent = 1;</code>
     *
     * <pre>
     *CPU空闲百分比，0－100
     * </pre>
     */
    public boolean hasCpuIdlePercent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 cpu_idle_percent = 1;</code>
     *
     * <pre>
     *CPU空闲百分比，0－100
     * </pre>
     */
    public int getCpuIdlePercent() {
      return cpuIdlePercent_;
    }

    // optional uint32 mem_total_size = 2;
    public static final int MEM_TOTAL_SIZE_FIELD_NUMBER = 2;
    private int memTotalSize_;
    /**
     * <code>optional uint32 mem_total_size = 2;</code>
     *
     * <pre>
     *物理内存大小(KByte)
     * </pre>
     */
    public boolean hasMemTotalSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 mem_total_size = 2;</code>
     *
     * <pre>
     *物理内存大小(KByte)
     * </pre>
     */
    public int getMemTotalSize() {
      return memTotalSize_;
    }

    // optional uint32 mem_alloc_size = 3;
    public static final int MEM_ALLOC_SIZE_FIELD_NUMBER = 3;
    private int memAllocSize_;
    /**
     * <code>optional uint32 mem_alloc_size = 3;</code>
     *
     * <pre>
     *已使用内存(KBytes)
     * </pre>
     */
    public boolean hasMemAllocSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mem_alloc_size = 3;</code>
     *
     * <pre>
     *已使用内存(KBytes)
     * </pre>
     */
    public int getMemAllocSize() {
      return memAllocSize_;
    }

    // optional uint32 mem_free_size = 4;
    public static final int MEM_FREE_SIZE_FIELD_NUMBER = 4;
    private int memFreeSize_;
    /**
     * <code>optional uint32 mem_free_size = 4;</code>
     *
     * <pre>
     *可用内存(KBytes)
     * </pre>
     */
    public boolean hasMemFreeSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 mem_free_size = 4;</code>
     *
     * <pre>
     *可用内存(KBytes)
     * </pre>
     */
    public int getMemFreeSize() {
      return memFreeSize_;
    }

    private void initFields() {
      cpuIdlePercent_ = 0;
      memTotalSize_ = 0;
      memAllocSize_ = 0;
      memFreeSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cpuIdlePercent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, memTotalSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, memAllocSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, memFreeSize_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cpuIdlePercent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, memTotalSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, memAllocSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, memFreeSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVCpuAndMemState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVCpuAndMemState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVCpuAndMemState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cpuIdlePercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        memTotalSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        memAllocSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        memFreeSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVCpuAndMemState_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cpuIdlePercent_ = cpuIdlePercent_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.memTotalSize_ = memTotalSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.memAllocSize_ = memAllocSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.memFreeSize_ = memFreeSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState.getDefaultInstance()) return this;
        if (other.hasCpuIdlePercent()) {
          setCpuIdlePercent(other.getCpuIdlePercent());
        }
        if (other.hasMemTotalSize()) {
          setMemTotalSize(other.getMemTotalSize());
        }
        if (other.hasMemAllocSize()) {
          setMemAllocSize(other.getMemAllocSize());
        }
        if (other.hasMemFreeSize()) {
          setMemFreeSize(other.getMemFreeSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVCpuAndMemState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 cpu_idle_percent = 1;
      private int cpuIdlePercent_ ;
      /**
       * <code>optional uint32 cpu_idle_percent = 1;</code>
       *
       * <pre>
       *CPU空闲百分比，0－100
       * </pre>
       */
      public boolean hasCpuIdlePercent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 cpu_idle_percent = 1;</code>
       *
       * <pre>
       *CPU空闲百分比，0－100
       * </pre>
       */
      public int getCpuIdlePercent() {
        return cpuIdlePercent_;
      }
      /**
       * <code>optional uint32 cpu_idle_percent = 1;</code>
       *
       * <pre>
       *CPU空闲百分比，0－100
       * </pre>
       */
      public Builder setCpuIdlePercent(int value) {
        bitField0_ |= 0x00000001;
        cpuIdlePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cpu_idle_percent = 1;</code>
       *
       * <pre>
       *CPU空闲百分比，0－100
       * </pre>
       */
      public Builder clearCpuIdlePercent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cpuIdlePercent_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mem_total_size = 2;
      private int memTotalSize_ ;
      /**
       * <code>optional uint32 mem_total_size = 2;</code>
       *
       * <pre>
       *物理内存大小(KByte)
       * </pre>
       */
      public boolean hasMemTotalSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 mem_total_size = 2;</code>
       *
       * <pre>
       *物理内存大小(KByte)
       * </pre>
       */
      public int getMemTotalSize() {
        return memTotalSize_;
      }
      /**
       * <code>optional uint32 mem_total_size = 2;</code>
       *
       * <pre>
       *物理内存大小(KByte)
       * </pre>
       */
      public Builder setMemTotalSize(int value) {
        bitField0_ |= 0x00000002;
        memTotalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mem_total_size = 2;</code>
       *
       * <pre>
       *物理内存大小(KByte)
       * </pre>
       */
      public Builder clearMemTotalSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        memTotalSize_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mem_alloc_size = 3;
      private int memAllocSize_ ;
      /**
       * <code>optional uint32 mem_alloc_size = 3;</code>
       *
       * <pre>
       *已使用内存(KBytes)
       * </pre>
       */
      public boolean hasMemAllocSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mem_alloc_size = 3;</code>
       *
       * <pre>
       *已使用内存(KBytes)
       * </pre>
       */
      public int getMemAllocSize() {
        return memAllocSize_;
      }
      /**
       * <code>optional uint32 mem_alloc_size = 3;</code>
       *
       * <pre>
       *已使用内存(KBytes)
       * </pre>
       */
      public Builder setMemAllocSize(int value) {
        bitField0_ |= 0x00000004;
        memAllocSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mem_alloc_size = 3;</code>
       *
       * <pre>
       *已使用内存(KBytes)
       * </pre>
       */
      public Builder clearMemAllocSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        memAllocSize_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mem_free_size = 4;
      private int memFreeSize_ ;
      /**
       * <code>optional uint32 mem_free_size = 4;</code>
       *
       * <pre>
       *可用内存(KBytes)
       * </pre>
       */
      public boolean hasMemFreeSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 mem_free_size = 4;</code>
       *
       * <pre>
       *可用内存(KBytes)
       * </pre>
       */
      public int getMemFreeSize() {
        return memFreeSize_;
      }
      /**
       * <code>optional uint32 mem_free_size = 4;</code>
       *
       * <pre>
       *可用内存(KBytes)
       * </pre>
       */
      public Builder setMemFreeSize(int value) {
        bitField0_ |= 0x00000008;
        memFreeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mem_free_size = 4;</code>
       *
       * <pre>
       *可用内存(KBytes)
       * </pre>
       */
      public Builder clearMemFreeSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        memFreeSize_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVCpuAndMemState)
    }

    static {
      defaultInstance = new TNVCpuAndMemState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVCpuAndMemState)
  }

  public interface TNVNetCapFileInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string file_name = 1;
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    boolean hasFileName();
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    // optional uint32 file_size = 2;
    /**
     * <code>optional uint32 file_size = 2;</code>
     *
     * <pre>
     *文件大小
     * </pre>
     */
    boolean hasFileSize();
    /**
     * <code>optional uint32 file_size = 2;</code>
     *
     * <pre>
     *文件大小
     * </pre>
     */
    int getFileSize();
  }
  /**
   * Protobuf type {@code nv.TNVNetCapFileInfo}
   *
   * <pre>
   *抓包文件信息
   * </pre>
   */
  public static final class TNVNetCapFileInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNVNetCapFileInfoOrBuilder {
    // Use TNVNetCapFileInfo.newBuilder() to construct.
    private TNVNetCapFileInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVNetCapFileInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVNetCapFileInfo defaultInstance;
    public static TNVNetCapFileInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNVNetCapFileInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVNetCapFileInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              fileName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fileSize_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVNetCapFileInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNVNetCapFileInfo>() {
      public TNVNetCapFileInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVNetCapFileInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVNetCapFileInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string file_name = 1;
    public static final int FILE_NAME_FIELD_NUMBER = 1;
    private java.lang.Object fileName_;
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string file_name = 1;</code>
     *
     * <pre>
     *文件名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 file_size = 2;
    public static final int FILE_SIZE_FIELD_NUMBER = 2;
    private int fileSize_;
    /**
     * <code>optional uint32 file_size = 2;</code>
     *
     * <pre>
     *文件大小
     * </pre>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 file_size = 2;</code>
     *
     * <pre>
     *文件大小
     * </pre>
     */
    public int getFileSize() {
      return fileSize_;
    }

    private void initFields() {
      fileName_ = "";
      fileSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fileSize_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fileSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVNetCapFileInfo}
     *
     * <pre>
     *抓包文件信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fileSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileInfo_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileSize_ = fileSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.getDefaultInstance()) return this;
        if (other.hasFileName()) {
          bitField0_ |= 0x00000001;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasFileSize()) {
          setFileSize(other.getFileSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string file_name = 1;
      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_name = 1;</code>
       *
       * <pre>
       *文件名
       * </pre>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 file_size = 2;
      private int fileSize_ ;
      /**
       * <code>optional uint32 file_size = 2;</code>
       *
       * <pre>
       *文件大小
       * </pre>
       */
      public boolean hasFileSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 file_size = 2;</code>
       *
       * <pre>
       *文件大小
       * </pre>
       */
      public int getFileSize() {
        return fileSize_;
      }
      /**
       * <code>optional uint32 file_size = 2;</code>
       *
       * <pre>
       *文件大小
       * </pre>
       */
      public Builder setFileSize(int value) {
        bitField0_ |= 0x00000002;
        fileSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 file_size = 2;</code>
       *
       * <pre>
       *文件大小
       * </pre>
       */
      public Builder clearFileSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileSize_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVNetCapFileInfo)
    }

    static {
      defaultInstance = new TNVNetCapFileInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVNetCapFileInfo)
  }

  public interface TNVNetCapFileListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string file_path = 1;
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    boolean hasFilePath();
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    java.lang.String getFilePath();
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    // repeated .nv.TNVNetCapFileInfo file_list = 2;
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> 
        getFileListList();
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo getFileList(int index);
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    int getFileListCount();
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder> 
        getFileListOrBuilderList();
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder getFileListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nv.TNVNetCapFileList}
   *
   * <pre>
   *抓包文件列表
   * </pre>
   */
  public static final class TNVNetCapFileList extends
      com.google.protobuf.GeneratedMessage
      implements TNVNetCapFileListOrBuilder {
    // Use TNVNetCapFileList.newBuilder() to construct.
    private TNVNetCapFileList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVNetCapFileList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVNetCapFileList defaultInstance;
    public static TNVNetCapFileList getDefaultInstance() {
      return defaultInstance;
    }

    public TNVNetCapFileList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVNetCapFileList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              filePath_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fileList_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              fileList_.add(input.readMessage(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fileList_ = java.util.Collections.unmodifiableList(fileList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVNetCapFileList> PARSER =
        new com.google.protobuf.AbstractParser<TNVNetCapFileList>() {
      public TNVNetCapFileList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVNetCapFileList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVNetCapFileList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string file_path = 1;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private java.lang.Object filePath_;
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    public boolean hasFilePath() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filePath_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string file_path = 1;</code>
     *
     * <pre>
     *文件所在路径
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .nv.TNVNetCapFileInfo file_list = 2;
    public static final int FILE_LIST_FIELD_NUMBER = 2;
    private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> fileList_;
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> getFileListList() {
      return fileList_;
    }
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder> 
        getFileListOrBuilderList() {
      return fileList_;
    }
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    public int getFileListCount() {
      return fileList_.size();
    }
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo getFileList(int index) {
      return fileList_.get(index);
    }
    /**
     * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
     *
     * <pre>
     *文件列表
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder getFileListOrBuilder(
        int index) {
      return fileList_.get(index);
    }

    private void initFields() {
      filePath_ = "";
      fileList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFilePathBytes());
      }
      for (int i = 0; i < fileList_.size(); i++) {
        output.writeMessage(2, fileList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFilePathBytes());
      }
      for (int i = 0; i < fileList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fileList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVNetCapFileList}
     *
     * <pre>
     *抓包文件列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFileListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        filePath_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fileListBuilder_ == null) {
          fileList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fileListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVNetCapFileList_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.filePath_ = filePath_;
        if (fileListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fileList_ = java.util.Collections.unmodifiableList(fileList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fileList_ = fileList_;
        } else {
          result.fileList_ = fileListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList.getDefaultInstance()) return this;
        if (other.hasFilePath()) {
          bitField0_ |= 0x00000001;
          filePath_ = other.filePath_;
          onChanged();
        }
        if (fileListBuilder_ == null) {
          if (!other.fileList_.isEmpty()) {
            if (fileList_.isEmpty()) {
              fileList_ = other.fileList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFileListIsMutable();
              fileList_.addAll(other.fileList_);
            }
            onChanged();
          }
        } else {
          if (!other.fileList_.isEmpty()) {
            if (fileListBuilder_.isEmpty()) {
              fileListBuilder_.dispose();
              fileListBuilder_ = null;
              fileList_ = other.fileList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fileListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFileListFieldBuilder() : null;
            } else {
              fileListBuilder_.addAllMessages(other.fileList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string file_path = 1;
      private java.lang.Object filePath_ = "";
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public boolean hasFilePath() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public Builder clearFilePath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_path = 1;</code>
       *
       * <pre>
       *文件所在路径
       * </pre>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filePath_ = value;
        onChanged();
        return this;
      }

      // repeated .nv.TNVNetCapFileInfo file_list = 2;
      private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> fileList_ =
        java.util.Collections.emptyList();
      private void ensureFileListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fileList_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo>(fileList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder> fileListBuilder_;

      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> getFileListList() {
        if (fileListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fileList_);
        } else {
          return fileListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public int getFileListCount() {
        if (fileListBuilder_ == null) {
          return fileList_.size();
        } else {
          return fileListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo getFileList(int index) {
        if (fileListBuilder_ == null) {
          return fileList_.get(index);
        } else {
          return fileListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder setFileList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo value) {
        if (fileListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileListIsMutable();
          fileList_.set(index, value);
          onChanged();
        } else {
          fileListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder setFileList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder builderForValue) {
        if (fileListBuilder_ == null) {
          ensureFileListIsMutable();
          fileList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fileListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder addFileList(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo value) {
        if (fileListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileListIsMutable();
          fileList_.add(value);
          onChanged();
        } else {
          fileListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder addFileList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo value) {
        if (fileListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileListIsMutable();
          fileList_.add(index, value);
          onChanged();
        } else {
          fileListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder addFileList(
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder builderForValue) {
        if (fileListBuilder_ == null) {
          ensureFileListIsMutable();
          fileList_.add(builderForValue.build());
          onChanged();
        } else {
          fileListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder addFileList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder builderForValue) {
        if (fileListBuilder_ == null) {
          ensureFileListIsMutable();
          fileList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fileListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder addAllFileList(
          java.lang.Iterable<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo> values) {
        if (fileListBuilder_ == null) {
          ensureFileListIsMutable();
          super.addAll(values, fileList_);
          onChanged();
        } else {
          fileListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder clearFileList() {
        if (fileListBuilder_ == null) {
          fileList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fileListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public Builder removeFileList(int index) {
        if (fileListBuilder_ == null) {
          ensureFileListIsMutable();
          fileList_.remove(index);
          onChanged();
        } else {
          fileListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder getFileListBuilder(
          int index) {
        return getFileListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder getFileListOrBuilder(
          int index) {
        if (fileListBuilder_ == null) {
          return fileList_.get(index);  } else {
          return fileListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder> 
           getFileListOrBuilderList() {
        if (fileListBuilder_ != null) {
          return fileListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fileList_);
        }
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder addFileListBuilder() {
        return getFileListFieldBuilder().addBuilder(
            com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder addFileListBuilder(
          int index) {
        return getFileListFieldBuilder().addBuilder(
            index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVNetCapFileInfo file_list = 2;</code>
       *
       * <pre>
       *文件列表
       * </pre>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder> 
           getFileListBuilderList() {
        return getFileListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder> 
          getFileListFieldBuilder() {
        if (fileListBuilder_ == null) {
          fileListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfo.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVNetCapFileInfoOrBuilder>(
                  fileList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fileList_ = null;
        }
        return fileListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVNetCapFileList)
    }

    static {
      defaultInstance = new TNVNetCapFileList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVNetCapFileList)
  }

  public interface TNVPathStructureUnitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .nv.EmNvSystemFileType file_type = 1;
    /**
     * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
     *
     * <pre>
     *是否为文件夹
     * </pre>
     */
    boolean hasFileType();
    /**
     * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
     *
     * <pre>
     *是否为文件夹
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType getFileType();

    // optional string path = 2;
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    boolean hasPath();
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    java.lang.String getPath();
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getPathBytes();
  }
  /**
   * Protobuf type {@code nv.TNVPathStructureUnit}
   *
   * <pre>
   *系统目录结构
   * </pre>
   */
  public static final class TNVPathStructureUnit extends
      com.google.protobuf.GeneratedMessage
      implements TNVPathStructureUnitOrBuilder {
    // Use TNVPathStructureUnit.newBuilder() to construct.
    private TNVPathStructureUnit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVPathStructureUnit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVPathStructureUnit defaultInstance;
    public static TNVPathStructureUnit getDefaultInstance() {
      return defaultInstance;
    }

    public TNVPathStructureUnit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVPathStructureUnit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                fileType_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              path_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureUnit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVPathStructureUnit> PARSER =
        new com.google.protobuf.AbstractParser<TNVPathStructureUnit>() {
      public TNVPathStructureUnit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVPathStructureUnit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVPathStructureUnit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .nv.EmNvSystemFileType file_type = 1;
    public static final int FILE_TYPE_FIELD_NUMBER = 1;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType fileType_;
    /**
     * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
     *
     * <pre>
     *是否为文件夹
     * </pre>
     */
    public boolean hasFileType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
     *
     * <pre>
     *是否为文件夹
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType getFileType() {
      return fileType_;
    }

    // optional string path = 2;
    public static final int PATH_FIELD_NUMBER = 2;
    private java.lang.Object path_;
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string path = 2;</code>
     *
     * <pre>
     *路径名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      fileType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType.emNvFileNormal;
      path_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, fileType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPathBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, fileType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPathBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVPathStructureUnit}
     *
     * <pre>
     *系统目录结构
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureUnit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fileType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType.emNvFileNormal;
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureUnit_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fileType_ = fileType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.path_ = path_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.getDefaultInstance()) return this;
        if (other.hasFileType()) {
          setFileType(other.getFileType());
        }
        if (other.hasPath()) {
          bitField0_ |= 0x00000002;
          path_ = other.path_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .nv.EmNvSystemFileType file_type = 1;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType fileType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType.emNvFileNormal;
      /**
       * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
       *
       * <pre>
       *是否为文件夹
       * </pre>
       */
      public boolean hasFileType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
       *
       * <pre>
       *是否为文件夹
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType getFileType() {
        return fileType_;
      }
      /**
       * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
       *
       * <pre>
       *是否为文件夹
       * </pre>
       */
      public Builder setFileType(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        fileType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvSystemFileType file_type = 1;</code>
       *
       * <pre>
       *是否为文件夹
       * </pre>
       */
      public Builder clearFileType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvSystemFileType.emNvFileNormal;
        onChanged();
        return this;
      }

      // optional string path = 2;
      private java.lang.Object path_ = "";
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000002);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       *
       * <pre>
       *路径名称
       * </pre>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVPathStructureUnit)
    }

    static {
      defaultInstance = new TNVPathStructureUnit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVPathStructureUnit)
  }

  public interface TNVPathStructureDetailOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .nv.TNVPathStructureUnit path_unit_list = 1;
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> 
        getPathUnitListList();
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit getPathUnitList(int index);
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    int getPathUnitListCount();
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder> 
        getPathUnitListOrBuilderList();
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder getPathUnitListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nv.TNVPathStructureDetail}
   */
  public static final class TNVPathStructureDetail extends
      com.google.protobuf.GeneratedMessage
      implements TNVPathStructureDetailOrBuilder {
    // Use TNVPathStructureDetail.newBuilder() to construct.
    private TNVPathStructureDetail(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVPathStructureDetail(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVPathStructureDetail defaultInstance;
    public static TNVPathStructureDetail getDefaultInstance() {
      return defaultInstance;
    }

    public TNVPathStructureDetail getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVPathStructureDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                pathUnitList_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit>();
                mutable_bitField0_ |= 0x00000001;
              }
              pathUnitList_.add(input.readMessage(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          pathUnitList_ = java.util.Collections.unmodifiableList(pathUnitList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureDetail_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVPathStructureDetail> PARSER =
        new com.google.protobuf.AbstractParser<TNVPathStructureDetail>() {
      public TNVPathStructureDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVPathStructureDetail(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVPathStructureDetail> getParserForType() {
      return PARSER;
    }

    // repeated .nv.TNVPathStructureUnit path_unit_list = 1;
    public static final int PATH_UNIT_LIST_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> pathUnitList_;
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> getPathUnitListList() {
      return pathUnitList_;
    }
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder> 
        getPathUnitListOrBuilderList() {
      return pathUnitList_;
    }
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    public int getPathUnitListCount() {
      return pathUnitList_.size();
    }
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit getPathUnitList(int index) {
      return pathUnitList_.get(index);
    }
    /**
     * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder getPathUnitListOrBuilder(
        int index) {
      return pathUnitList_.get(index);
    }

    private void initFields() {
      pathUnitList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < pathUnitList_.size(); i++) {
        output.writeMessage(1, pathUnitList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pathUnitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pathUnitList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVPathStructureDetail}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureDetail_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureDetail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPathUnitListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (pathUnitListBuilder_ == null) {
          pathUnitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pathUnitListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVPathStructureDetail_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail(this);
        int from_bitField0_ = bitField0_;
        if (pathUnitListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            pathUnitList_ = java.util.Collections.unmodifiableList(pathUnitList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pathUnitList_ = pathUnitList_;
        } else {
          result.pathUnitList_ = pathUnitListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail.getDefaultInstance()) return this;
        if (pathUnitListBuilder_ == null) {
          if (!other.pathUnitList_.isEmpty()) {
            if (pathUnitList_.isEmpty()) {
              pathUnitList_ = other.pathUnitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePathUnitListIsMutable();
              pathUnitList_.addAll(other.pathUnitList_);
            }
            onChanged();
          }
        } else {
          if (!other.pathUnitList_.isEmpty()) {
            if (pathUnitListBuilder_.isEmpty()) {
              pathUnitListBuilder_.dispose();
              pathUnitListBuilder_ = null;
              pathUnitList_ = other.pathUnitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pathUnitListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPathUnitListFieldBuilder() : null;
            } else {
              pathUnitListBuilder_.addAllMessages(other.pathUnitList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureDetail) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .nv.TNVPathStructureUnit path_unit_list = 1;
      private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> pathUnitList_ =
        java.util.Collections.emptyList();
      private void ensurePathUnitListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          pathUnitList_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit>(pathUnitList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder> pathUnitListBuilder_;

      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> getPathUnitListList() {
        if (pathUnitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pathUnitList_);
        } else {
          return pathUnitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public int getPathUnitListCount() {
        if (pathUnitListBuilder_ == null) {
          return pathUnitList_.size();
        } else {
          return pathUnitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit getPathUnitList(int index) {
        if (pathUnitListBuilder_ == null) {
          return pathUnitList_.get(index);
        } else {
          return pathUnitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder setPathUnitList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit value) {
        if (pathUnitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathUnitListIsMutable();
          pathUnitList_.set(index, value);
          onChanged();
        } else {
          pathUnitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder setPathUnitList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder builderForValue) {
        if (pathUnitListBuilder_ == null) {
          ensurePathUnitListIsMutable();
          pathUnitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          pathUnitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder addPathUnitList(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit value) {
        if (pathUnitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathUnitListIsMutable();
          pathUnitList_.add(value);
          onChanged();
        } else {
          pathUnitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder addPathUnitList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit value) {
        if (pathUnitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathUnitListIsMutable();
          pathUnitList_.add(index, value);
          onChanged();
        } else {
          pathUnitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder addPathUnitList(
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder builderForValue) {
        if (pathUnitListBuilder_ == null) {
          ensurePathUnitListIsMutable();
          pathUnitList_.add(builderForValue.build());
          onChanged();
        } else {
          pathUnitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder addPathUnitList(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder builderForValue) {
        if (pathUnitListBuilder_ == null) {
          ensurePathUnitListIsMutable();
          pathUnitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          pathUnitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder addAllPathUnitList(
          java.lang.Iterable<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit> values) {
        if (pathUnitListBuilder_ == null) {
          ensurePathUnitListIsMutable();
          super.addAll(values, pathUnitList_);
          onChanged();
        } else {
          pathUnitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder clearPathUnitList() {
        if (pathUnitListBuilder_ == null) {
          pathUnitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pathUnitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public Builder removePathUnitList(int index) {
        if (pathUnitListBuilder_ == null) {
          ensurePathUnitListIsMutable();
          pathUnitList_.remove(index);
          onChanged();
        } else {
          pathUnitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder getPathUnitListBuilder(
          int index) {
        return getPathUnitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder getPathUnitListOrBuilder(
          int index) {
        if (pathUnitListBuilder_ == null) {
          return pathUnitList_.get(index);  } else {
          return pathUnitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder> 
           getPathUnitListOrBuilderList() {
        if (pathUnitListBuilder_ != null) {
          return pathUnitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pathUnitList_);
        }
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder addPathUnitListBuilder() {
        return getPathUnitListFieldBuilder().addBuilder(
            com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder addPathUnitListBuilder(
          int index) {
        return getPathUnitListFieldBuilder().addBuilder(
            index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVPathStructureUnit path_unit_list = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder> 
           getPathUnitListBuilderList() {
        return getPathUnitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder> 
          getPathUnitListFieldBuilder() {
        if (pathUnitListBuilder_ == null) {
          pathUnitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnit.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVPathStructureUnitOrBuilder>(
                  pathUnitList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          pathUnitList_ = null;
        }
        return pathUnitListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVPathStructureDetail)
    }

    static {
      defaultInstance = new TNVPathStructureDetail(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVPathStructureDetail)
  }

  public interface TNVScreenParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 brightness = 1;
    /**
     * <code>optional uint32 brightness = 1;</code>
     *
     * <pre>
     *亮度 
     * </pre>
     */
    boolean hasBrightness();
    /**
     * <code>optional uint32 brightness = 1;</code>
     *
     * <pre>
     *亮度 
     * </pre>
     */
    int getBrightness();

    // optional uint32 contrast = 2;
    /**
     * <code>optional uint32 contrast = 2;</code>
     *
     * <pre>
     *对比度
     * </pre>
     */
    boolean hasContrast();
    /**
     * <code>optional uint32 contrast = 2;</code>
     *
     * <pre>
     *对比度
     * </pre>
     */
    int getContrast();

    // optional uint32 saturation = 3;
    /**
     * <code>optional uint32 saturation = 3;</code>
     *
     * <pre>
     *饱和度
     * </pre>
     */
    boolean hasSaturation();
    /**
     * <code>optional uint32 saturation = 3;</code>
     *
     * <pre>
     *饱和度
     * </pre>
     */
    int getSaturation();

    // optional uint32 clarity = 4;
    /**
     * <code>optional uint32 clarity = 4;</code>
     *
     * <pre>
     *清晰度
     * </pre>
     */
    boolean hasClarity();
    /**
     * <code>optional uint32 clarity = 4;</code>
     *
     * <pre>
     *清晰度
     * </pre>
     */
    int getClarity();

    // optional .nv.EmNvScreenColorTemperature color_temp = 5;
    /**
     * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
     *
     * <pre>
     *色温
     * </pre>
     */
    boolean hasColorTemp();
    /**
     * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
     *
     * <pre>
     *色温
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature getColorTemp();

    // optional .nv.EmNvTvDisplayRatio displayratio = 6;
    /**
     * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
     *
     * <pre>
     *显示比例
     * </pre>
     */
    boolean hasDisplayratio();
    /**
     * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
     *
     * <pre>
     *显示比例
     * </pre>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio getDisplayratio();

    // optional .nv.EmNvScreenType screen_type = 7;
    /**
     * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
     */
    boolean hasScreenType();
    /**
     * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
     */
    com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType getScreenType();
  }
  /**
   * Protobuf type {@code nv.TNVScreenParam}
   *
   * <pre>
   *显示器参数
   * </pre>
   */
  public static final class TNVScreenParam extends
      com.google.protobuf.GeneratedMessage
      implements TNVScreenParamOrBuilder {
    // Use TNVScreenParam.newBuilder() to construct.
    private TNVScreenParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVScreenParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVScreenParam defaultInstance;
    public static TNVScreenParam getDefaultInstance() {
      return defaultInstance;
    }

    public TNVScreenParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVScreenParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              brightness_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              contrast_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              saturation_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              clarity_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                colorTemp_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                displayratio_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType value = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                screenType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVScreenParam> PARSER =
        new com.google.protobuf.AbstractParser<TNVScreenParam>() {
      public TNVScreenParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVScreenParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVScreenParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 brightness = 1;
    public static final int BRIGHTNESS_FIELD_NUMBER = 1;
    private int brightness_;
    /**
     * <code>optional uint32 brightness = 1;</code>
     *
     * <pre>
     *亮度 
     * </pre>
     */
    public boolean hasBrightness() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 brightness = 1;</code>
     *
     * <pre>
     *亮度 
     * </pre>
     */
    public int getBrightness() {
      return brightness_;
    }

    // optional uint32 contrast = 2;
    public static final int CONTRAST_FIELD_NUMBER = 2;
    private int contrast_;
    /**
     * <code>optional uint32 contrast = 2;</code>
     *
     * <pre>
     *对比度
     * </pre>
     */
    public boolean hasContrast() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 contrast = 2;</code>
     *
     * <pre>
     *对比度
     * </pre>
     */
    public int getContrast() {
      return contrast_;
    }

    // optional uint32 saturation = 3;
    public static final int SATURATION_FIELD_NUMBER = 3;
    private int saturation_;
    /**
     * <code>optional uint32 saturation = 3;</code>
     *
     * <pre>
     *饱和度
     * </pre>
     */
    public boolean hasSaturation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 saturation = 3;</code>
     *
     * <pre>
     *饱和度
     * </pre>
     */
    public int getSaturation() {
      return saturation_;
    }

    // optional uint32 clarity = 4;
    public static final int CLARITY_FIELD_NUMBER = 4;
    private int clarity_;
    /**
     * <code>optional uint32 clarity = 4;</code>
     *
     * <pre>
     *清晰度
     * </pre>
     */
    public boolean hasClarity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 clarity = 4;</code>
     *
     * <pre>
     *清晰度
     * </pre>
     */
    public int getClarity() {
      return clarity_;
    }

    // optional .nv.EmNvScreenColorTemperature color_temp = 5;
    public static final int COLOR_TEMP_FIELD_NUMBER = 5;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature colorTemp_;
    /**
     * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
     *
     * <pre>
     *色温
     * </pre>
     */
    public boolean hasColorTemp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
     *
     * <pre>
     *色温
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature getColorTemp() {
      return colorTemp_;
    }

    // optional .nv.EmNvTvDisplayRatio displayratio = 6;
    public static final int DISPLAYRATIO_FIELD_NUMBER = 6;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio displayratio_;
    /**
     * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
     *
     * <pre>
     *显示比例
     * </pre>
     */
    public boolean hasDisplayratio() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
     *
     * <pre>
     *显示比例
     * </pre>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio getDisplayratio() {
      return displayratio_;
    }

    // optional .nv.EmNvScreenType screen_type = 7;
    public static final int SCREEN_TYPE_FIELD_NUMBER = 7;
    private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType screenType_;
    /**
     * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
     */
    public boolean hasScreenType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType getScreenType() {
      return screenType_;
    }

    private void initFields() {
      brightness_ = 0;
      contrast_ = 0;
      saturation_ = 0;
      clarity_ = 0;
      colorTemp_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature.emNvCT_Standard;
      displayratio_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio.emNvTvDR16to9;
      screenType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType.emNvSc_Right;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, brightness_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, contrast_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, saturation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, clarity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, colorTemp_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, displayratio_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, screenType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, brightness_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, contrast_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, saturation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, clarity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, colorTemp_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, displayratio_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, screenType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVScreenParam}
     *
     * <pre>
     *显示器参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        brightness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        contrast_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        saturation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clarity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        colorTemp_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature.emNvCT_Standard;
        bitField0_ = (bitField0_ & ~0x00000010);
        displayratio_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio.emNvTvDR16to9;
        bitField0_ = (bitField0_ & ~0x00000020);
        screenType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType.emNvSc_Right;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParam_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.brightness_ = brightness_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.contrast_ = contrast_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.saturation_ = saturation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clarity_ = clarity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.colorTemp_ = colorTemp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.displayratio_ = displayratio_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.screenType_ = screenType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.getDefaultInstance()) return this;
        if (other.hasBrightness()) {
          setBrightness(other.getBrightness());
        }
        if (other.hasContrast()) {
          setContrast(other.getContrast());
        }
        if (other.hasSaturation()) {
          setSaturation(other.getSaturation());
        }
        if (other.hasClarity()) {
          setClarity(other.getClarity());
        }
        if (other.hasColorTemp()) {
          setColorTemp(other.getColorTemp());
        }
        if (other.hasDisplayratio()) {
          setDisplayratio(other.getDisplayratio());
        }
        if (other.hasScreenType()) {
          setScreenType(other.getScreenType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 brightness = 1;
      private int brightness_ ;
      /**
       * <code>optional uint32 brightness = 1;</code>
       *
       * <pre>
       *亮度 
       * </pre>
       */
      public boolean hasBrightness() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 brightness = 1;</code>
       *
       * <pre>
       *亮度 
       * </pre>
       */
      public int getBrightness() {
        return brightness_;
      }
      /**
       * <code>optional uint32 brightness = 1;</code>
       *
       * <pre>
       *亮度 
       * </pre>
       */
      public Builder setBrightness(int value) {
        bitField0_ |= 0x00000001;
        brightness_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 brightness = 1;</code>
       *
       * <pre>
       *亮度 
       * </pre>
       */
      public Builder clearBrightness() {
        bitField0_ = (bitField0_ & ~0x00000001);
        brightness_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 contrast = 2;
      private int contrast_ ;
      /**
       * <code>optional uint32 contrast = 2;</code>
       *
       * <pre>
       *对比度
       * </pre>
       */
      public boolean hasContrast() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 contrast = 2;</code>
       *
       * <pre>
       *对比度
       * </pre>
       */
      public int getContrast() {
        return contrast_;
      }
      /**
       * <code>optional uint32 contrast = 2;</code>
       *
       * <pre>
       *对比度
       * </pre>
       */
      public Builder setContrast(int value) {
        bitField0_ |= 0x00000002;
        contrast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 contrast = 2;</code>
       *
       * <pre>
       *对比度
       * </pre>
       */
      public Builder clearContrast() {
        bitField0_ = (bitField0_ & ~0x00000002);
        contrast_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 saturation = 3;
      private int saturation_ ;
      /**
       * <code>optional uint32 saturation = 3;</code>
       *
       * <pre>
       *饱和度
       * </pre>
       */
      public boolean hasSaturation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 saturation = 3;</code>
       *
       * <pre>
       *饱和度
       * </pre>
       */
      public int getSaturation() {
        return saturation_;
      }
      /**
       * <code>optional uint32 saturation = 3;</code>
       *
       * <pre>
       *饱和度
       * </pre>
       */
      public Builder setSaturation(int value) {
        bitField0_ |= 0x00000004;
        saturation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 saturation = 3;</code>
       *
       * <pre>
       *饱和度
       * </pre>
       */
      public Builder clearSaturation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        saturation_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 clarity = 4;
      private int clarity_ ;
      /**
       * <code>optional uint32 clarity = 4;</code>
       *
       * <pre>
       *清晰度
       * </pre>
       */
      public boolean hasClarity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 clarity = 4;</code>
       *
       * <pre>
       *清晰度
       * </pre>
       */
      public int getClarity() {
        return clarity_;
      }
      /**
       * <code>optional uint32 clarity = 4;</code>
       *
       * <pre>
       *清晰度
       * </pre>
       */
      public Builder setClarity(int value) {
        bitField0_ |= 0x00000008;
        clarity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 clarity = 4;</code>
       *
       * <pre>
       *清晰度
       * </pre>
       */
      public Builder clearClarity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clarity_ = 0;
        onChanged();
        return this;
      }

      // optional .nv.EmNvScreenColorTemperature color_temp = 5;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature colorTemp_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature.emNvCT_Standard;
      /**
       * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
       *
       * <pre>
       *色温
       * </pre>
       */
      public boolean hasColorTemp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
       *
       * <pre>
       *色温
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature getColorTemp() {
        return colorTemp_;
      }
      /**
       * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
       *
       * <pre>
       *色温
       * </pre>
       */
      public Builder setColorTemp(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        colorTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvScreenColorTemperature color_temp = 5;</code>
       *
       * <pre>
       *色温
       * </pre>
       */
      public Builder clearColorTemp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        colorTemp_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenColorTemperature.emNvCT_Standard;
        onChanged();
        return this;
      }

      // optional .nv.EmNvTvDisplayRatio displayratio = 6;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio displayratio_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio.emNvTvDR16to9;
      /**
       * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
       *
       * <pre>
       *显示比例
       * </pre>
       */
      public boolean hasDisplayratio() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
       *
       * <pre>
       *显示比例
       * </pre>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio getDisplayratio() {
        return displayratio_;
      }
      /**
       * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
       *
       * <pre>
       *显示比例
       * </pre>
       */
      public Builder setDisplayratio(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        displayratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvTvDisplayRatio displayratio = 6;</code>
       *
       * <pre>
       *显示比例
       * </pre>
       */
      public Builder clearDisplayratio() {
        bitField0_ = (bitField0_ & ~0x00000020);
        displayratio_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvTvDisplayRatio.emNvTvDR16to9;
        onChanged();
        return this;
      }

      // optional .nv.EmNvScreenType screen_type = 7;
      private com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType screenType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType.emNvSc_Right;
      /**
       * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
       */
      public boolean hasScreenType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType getScreenType() {
        return screenType_;
      }
      /**
       * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
       */
      public Builder setScreenType(com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        screenType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .nv.EmNvScreenType screen_type = 7;</code>
       */
      public Builder clearScreenType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        screenType_ = com.kedacom.nv.netmanage.protobuf.EnumPB.EmNvScreenType.emNvSc_Right;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVScreenParam)
    }

    static {
      defaultInstance = new TNVScreenParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVScreenParam)
  }

  public interface TNVScreenParamListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .nv.TNVScreenParam screen = 1;
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> 
        getScreenList();
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam getScreen(int index);
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    int getScreenCount();
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder> 
        getScreenOrBuilderList();
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder getScreenOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nv.TNVScreenParamList}
   */
  public static final class TNVScreenParamList extends
      com.google.protobuf.GeneratedMessage
      implements TNVScreenParamListOrBuilder {
    // Use TNVScreenParamList.newBuilder() to construct.
    private TNVScreenParamList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNVScreenParamList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNVScreenParamList defaultInstance;
    public static TNVScreenParamList getDefaultInstance() {
      return defaultInstance;
    }

    public TNVScreenParamList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNVScreenParamList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                screen_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              screen_.add(input.readMessage(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          screen_ = java.util.Collections.unmodifiableList(screen_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParamList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParamList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.Builder.class);
    }

    public static com.google.protobuf.Parser<TNVScreenParamList> PARSER =
        new com.google.protobuf.AbstractParser<TNVScreenParamList>() {
      public TNVScreenParamList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNVScreenParamList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNVScreenParamList> getParserForType() {
      return PARSER;
    }

    // repeated .nv.TNVScreenParam screen = 1;
    public static final int SCREEN_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> screen_;
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> getScreenList() {
      return screen_;
    }
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder> 
        getScreenOrBuilderList() {
      return screen_;
    }
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    public int getScreenCount() {
      return screen_.size();
    }
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam getScreen(int index) {
      return screen_.get(index);
    }
    /**
     * <code>repeated .nv.TNVScreenParam screen = 1;</code>
     */
    public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder getScreenOrBuilder(
        int index) {
      return screen_.get(index);
    }

    private void initFields() {
      screen_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < screen_.size(); i++) {
        output.writeMessage(1, screen_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < screen_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, screen_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nv.TNVScreenParamList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParamList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParamList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.class, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.Builder.class);
      }

      // Construct using com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScreenFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (screenBuilder_ == null) {
          screen_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          screenBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.internal_static_nv_TNVScreenParamList_descriptor;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList getDefaultInstanceForType() {
        return com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.getDefaultInstance();
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList build() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList buildPartial() {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList result = new com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList(this);
        int from_bitField0_ = bitField0_;
        if (screenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            screen_ = java.util.Collections.unmodifiableList(screen_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.screen_ = screen_;
        } else {
          result.screen_ = screenBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList) {
          return mergeFrom((com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList other) {
        if (other == com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList.getDefaultInstance()) return this;
        if (screenBuilder_ == null) {
          if (!other.screen_.isEmpty()) {
            if (screen_.isEmpty()) {
              screen_ = other.screen_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureScreenIsMutable();
              screen_.addAll(other.screen_);
            }
            onChanged();
          }
        } else {
          if (!other.screen_.isEmpty()) {
            if (screenBuilder_.isEmpty()) {
              screenBuilder_.dispose();
              screenBuilder_ = null;
              screen_ = other.screen_;
              bitField0_ = (bitField0_ & ~0x00000001);
              screenBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScreenFieldBuilder() : null;
            } else {
              screenBuilder_.addAllMessages(other.screen_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .nv.TNVScreenParam screen = 1;
      private java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> screen_ =
        java.util.Collections.emptyList();
      private void ensureScreenIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          screen_ = new java.util.ArrayList<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam>(screen_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder> screenBuilder_;

      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> getScreenList() {
        if (screenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(screen_);
        } else {
          return screenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public int getScreenCount() {
        if (screenBuilder_ == null) {
          return screen_.size();
        } else {
          return screenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam getScreen(int index) {
        if (screenBuilder_ == null) {
          return screen_.get(index);
        } else {
          return screenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder setScreen(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam value) {
        if (screenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScreenIsMutable();
          screen_.set(index, value);
          onChanged();
        } else {
          screenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder setScreen(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder builderForValue) {
        if (screenBuilder_ == null) {
          ensureScreenIsMutable();
          screen_.set(index, builderForValue.build());
          onChanged();
        } else {
          screenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder addScreen(com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam value) {
        if (screenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScreenIsMutable();
          screen_.add(value);
          onChanged();
        } else {
          screenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder addScreen(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam value) {
        if (screenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScreenIsMutable();
          screen_.add(index, value);
          onChanged();
        } else {
          screenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder addScreen(
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder builderForValue) {
        if (screenBuilder_ == null) {
          ensureScreenIsMutable();
          screen_.add(builderForValue.build());
          onChanged();
        } else {
          screenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder addScreen(
          int index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder builderForValue) {
        if (screenBuilder_ == null) {
          ensureScreenIsMutable();
          screen_.add(index, builderForValue.build());
          onChanged();
        } else {
          screenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder addAllScreen(
          java.lang.Iterable<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam> values) {
        if (screenBuilder_ == null) {
          ensureScreenIsMutable();
          super.addAll(values, screen_);
          onChanged();
        } else {
          screenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder clearScreen() {
        if (screenBuilder_ == null) {
          screen_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          screenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public Builder removeScreen(int index) {
        if (screenBuilder_ == null) {
          ensureScreenIsMutable();
          screen_.remove(index);
          onChanged();
        } else {
          screenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder getScreenBuilder(
          int index) {
        return getScreenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder getScreenOrBuilder(
          int index) {
        if (screenBuilder_ == null) {
          return screen_.get(index);  } else {
          return screenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public java.util.List<? extends com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder> 
           getScreenOrBuilderList() {
        if (screenBuilder_ != null) {
          return screenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(screen_);
        }
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder addScreenBuilder() {
        return getScreenFieldBuilder().addBuilder(
            com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder addScreenBuilder(
          int index) {
        return getScreenFieldBuilder().addBuilder(
            index, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.getDefaultInstance());
      }
      /**
       * <code>repeated .nv.TNVScreenParam screen = 1;</code>
       */
      public java.util.List<com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder> 
           getScreenBuilderList() {
        return getScreenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder> 
          getScreenFieldBuilder() {
        if (screenBuilder_ == null) {
          screenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParam.Builder, com.kedacom.nv.netmanage.protobuf.DevicePB.TNVScreenParamOrBuilder>(
                  screen_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          screen_ = null;
        }
        return screenBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:nv.TNVScreenParamList)
    }

    static {
      defaultInstance = new TNVScreenParamList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nv.TNVScreenParamList)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVKeyPressInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVKeyPressInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVHDSerialCtrl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVHDSerialCtrl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVUsbPartition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVUsbPartition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVUsbInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVUsbInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVUsbStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVUsbStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVBrdInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVBrdInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVCpuAndMemState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVCpuAndMemState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVNetCapFileInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVNetCapFileInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVNetCapFileList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVNetCapFileList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVPathStructureUnit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVPathStructureUnit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVPathStructureDetail_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVPathStructureDetail_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVScreenParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVScreenParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nv_TNVScreenParamList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nv_TNVScreenParamList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024nvstructdevice.proto\022\002nv\032\014nvenum.proto" +
      "\"\210\001\n\017TNVKeyPressInfo\022\020\n\010key_type\030\001 \001(\010\022&" +
      "\n\nkey_source\030\002 \001(\0162\022.nv.EmNvRemoteType\022(" +
      "\n\010key_code\030\003 \001(\0162\026.nv.EmNvRemoteScanCode" +
      "\022\021\n\tkey_count\030\004 \001(\r\"\260\001\n\017TNVHDSerialCtrl\022" +
      "\'\n\013serial_type\030\001 \001(\0162\022.nv.EmNvSerialType" +
      "\022\021\n\tband_rate\030\002 \001(\r\022\021\n\tbyte_size\030\003 \001(\r\022#" +
      "\n\tstop_bits\030\004 \001(\0162\020.nv.EmNvStopBits\022)\n\014p" +
      "arity_check\030\005 \001(\0162\023.nv.EmNvParityCheck\"V" +
      "\n\017TNVUsbPartition\022\014\n\004path\030\001 \001(\t\022\014\n\004name\030",
      "\002 \001(\t\022\023\n\013total_space\030\003 \001(\r\022\022\n\nfree_space" +
      "\030\004 \001(\r\"Y\n\nTNVUsbInfo\022\016\n\006usb_id\030\001 \001(\r\022\017\n\007" +
      "is_used\030\002 \001(\010\022*\n\rusb_partition\030\003 \003(\0132\023.n" +
      "v.TNVUsbPartition\"0\n\014TNVUsbStatus\022 \n\010usb" +
      "_info\030\001 \003(\0132\016.nv.TNVUsbInfo\"\363\002\n\nTNVBrdIn" +
      "fo\022\014\n\004name\030\001 \001(\t\022\016\n\006brd_id\030\002 \001(\r\022\023\n\013brd_" +
      "version\030\003 \001(\r\022\023\n\013pld_version\030\004 \001(\r\022\024\n\014fp" +
      "ga_version\030\005 \001(\r\022\r\n\005layer\030\006 \001(\005\022\014\n\004slot\030" +
      "\007 \001(\005\022\016\n\006CpuNum\030\010 \001(\r\022\021\n\tCpuSelfNo\030\t \001(\r" +
      "\022\016\n\006PldNum\030\n \001(\r\022\017\n\007FpgaNum\030\013 \001(\r\022\016\n\006Rtc",
      "Num\030\014 \001(\r\022\016\n\006EthNum\030\r \001(\r\022\r\n\005E1Num\030\016 \001(\r" +
      "\022\016\n\006V35Num\030\017 \001(\r\022\021\n\tSerialNum\030\020 \001(\r\022\016\n\006F" +
      "anNum\030\021 \001(\r\022\016\n\006LedNum\030\022 \001(\r\022\021\n\tButtonNum" +
      "\030\023 \001(\r\022\020\n\010HwmonNum\030\024 \001(\r\022\017\n\007OledNum\030\025 \001(" +
      "\r\"t\n\021TNVCpuAndMemState\022\030\n\020cpu_idle_perce" +
      "nt\030\001 \001(\r\022\026\n\016mem_total_size\030\002 \001(\r\022\026\n\016mem_" +
      "alloc_size\030\003 \001(\r\022\025\n\rmem_free_size\030\004 \001(\r\"" +
      "9\n\021TNVNetCapFileInfo\022\021\n\tfile_name\030\001 \001(\t\022" +
      "\021\n\tfile_size\030\002 \001(\r\"P\n\021TNVNetCapFileList\022" +
      "\021\n\tfile_path\030\001 \001(\t\022(\n\tfile_list\030\002 \003(\0132\025.",
      "nv.TNVNetCapFileInfo\"O\n\024TNVPathStructure" +
      "Unit\022)\n\tfile_type\030\001 \001(\0162\026.nv.EmNvSystemF" +
      "ileType\022\014\n\004path\030\002 \001(\t\"J\n\026TNVPathStructur" +
      "eDetail\0220\n\016path_unit_list\030\001 \003(\0132\030.nv.TNV" +
      "PathStructureUnit\"\346\001\n\016TNVScreenParam\022\022\n\n" +
      "brightness\030\001 \001(\r\022\020\n\010contrast\030\002 \001(\r\022\022\n\nsa" +
      "turation\030\003 \001(\r\022\017\n\007clarity\030\004 \001(\r\0222\n\ncolor" +
      "_temp\030\005 \001(\0162\036.nv.EmNvScreenColorTemperat" +
      "ure\022,\n\014displayratio\030\006 \001(\0162\026.nv.EmNvTvDis" +
      "playRatio\022\'\n\013screen_type\030\007 \001(\0162\022.nv.EmNv",
      "ScreenType\"8\n\022TNVScreenParamList\022\"\n\006scre" +
      "en\030\001 \003(\0132\022.nv.TNVScreenParamB-\n!com.keda" +
      "com.nv.netmanage.protobufB\010DevicePB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_nv_TNVKeyPressInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_nv_TNVKeyPressInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVKeyPressInfo_descriptor,
              new java.lang.String[] { "KeyType", "KeySource", "KeyCode", "KeyCount", });
          internal_static_nv_TNVHDSerialCtrl_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_nv_TNVHDSerialCtrl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVHDSerialCtrl_descriptor,
              new java.lang.String[] { "SerialType", "BandRate", "ByteSize", "StopBits", "ParityCheck", });
          internal_static_nv_TNVUsbPartition_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_nv_TNVUsbPartition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVUsbPartition_descriptor,
              new java.lang.String[] { "Path", "Name", "TotalSpace", "FreeSpace", });
          internal_static_nv_TNVUsbInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_nv_TNVUsbInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVUsbInfo_descriptor,
              new java.lang.String[] { "UsbId", "IsUsed", "UsbPartition", });
          internal_static_nv_TNVUsbStatus_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_nv_TNVUsbStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVUsbStatus_descriptor,
              new java.lang.String[] { "UsbInfo", });
          internal_static_nv_TNVBrdInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_nv_TNVBrdInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVBrdInfo_descriptor,
              new java.lang.String[] { "Name", "BrdId", "BrdVersion", "PldVersion", "FpgaVersion", "Layer", "Slot", "CpuNum", "CpuSelfNo", "PldNum", "FpgaNum", "RtcNum", "EthNum", "E1Num", "V35Num", "SerialNum", "FanNum", "LedNum", "ButtonNum", "HwmonNum", "OledNum", });
          internal_static_nv_TNVCpuAndMemState_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_nv_TNVCpuAndMemState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVCpuAndMemState_descriptor,
              new java.lang.String[] { "CpuIdlePercent", "MemTotalSize", "MemAllocSize", "MemFreeSize", });
          internal_static_nv_TNVNetCapFileInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_nv_TNVNetCapFileInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVNetCapFileInfo_descriptor,
              new java.lang.String[] { "FileName", "FileSize", });
          internal_static_nv_TNVNetCapFileList_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_nv_TNVNetCapFileList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVNetCapFileList_descriptor,
              new java.lang.String[] { "FilePath", "FileList", });
          internal_static_nv_TNVPathStructureUnit_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_nv_TNVPathStructureUnit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVPathStructureUnit_descriptor,
              new java.lang.String[] { "FileType", "Path", });
          internal_static_nv_TNVPathStructureDetail_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_nv_TNVPathStructureDetail_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVPathStructureDetail_descriptor,
              new java.lang.String[] { "PathUnitList", });
          internal_static_nv_TNVScreenParam_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_nv_TNVScreenParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVScreenParam_descriptor,
              new java.lang.String[] { "Brightness", "Contrast", "Saturation", "Clarity", "ColorTemp", "Displayratio", "ScreenType", });
          internal_static_nv_TNVScreenParamList_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_nv_TNVScreenParamList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nv_TNVScreenParamList_descriptor,
              new java.lang.String[] { "Screen", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kedacom.nv.netmanage.protobuf.EnumPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
