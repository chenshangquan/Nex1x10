// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structagent.proto

#ifndef PROTOBUF_structagent_2eproto__INCLUDED
#define PROTOBUF_structagent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "enum.pb.h"
#include "structcommon.pb.h"
#include "structcfg.pb.h"
// @@protoc_insertion_point(includes)

namespace mt {

// Internal implementation detail -- do not call these.
void MTMSG_API protobuf_AddDesc_structagent_2eproto();
void protobuf_AssignDesc_structagent_2eproto();
void protobuf_ShutdownFile_structagent_2eproto();

class TNMSNetInfo;
class TNMSLogInCfg;
class TServerTypes;
class TServerInfo;
class TServerInfos;
class TNMSLogInResult;
class TAlarmTrap;
class TExceptionFileReportData;
class TAgentConfStatus;
class TAgentAudEncStatistic;
class TAgentAudDecStatistic;
class TAgentVidEncStatistic;
class TAgentVidDecStatistic;
class TAgentCodecStatistic;
class TMtPfmInfo;
class TMTAgentPackFileState;

// ===================================================================

class MTMSG_API TNMSNetInfo : public ::google::protobuf::Message {
 public:
  TNMSNetInfo();
  virtual ~TNMSNetInfo();

  TNMSNetInfo(const TNMSNetInfo& from);

  inline TNMSNetInfo& operator=(const TNMSNetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TNMSNetInfo& default_instance();

  void Swap(TNMSNetInfo* other);

  // implements Message ----------------------------------------------

  TNMSNetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TNMSNetInfo& from);
  void MergeFrom(const TNMSNetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional string dns = 2;
  inline bool has_dns() const;
  inline void clear_dns();
  static const int kDnsFieldNumber = 2;
  inline const ::std::string& dns() const;
  inline void set_dns(const ::std::string& value);
  inline void set_dns(const char* value);
  inline void set_dns(const char* value, size_t size);
  inline ::std::string* mutable_dns();
  inline ::std::string* release_dns();
  inline void set_allocated_dns(::std::string* dns);

  // @@protoc_insertion_point(class_scope:mt.TNMSNetInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_dns();
  inline void clear_has_dns();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::std::string* dns_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TNMSNetInfo* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TNMSLogInCfg : public ::google::protobuf::Message {
 public:
  TNMSLogInCfg();
  virtual ~TNMSLogInCfg();

  TNMSLogInCfg(const TNMSLogInCfg& from);

  inline TNMSLogInCfg& operator=(const TNMSLogInCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TNMSLogInCfg& default_instance();

  void Swap(TNMSLogInCfg* other);

  // implements Message ----------------------------------------------

  TNMSLogInCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TNMSLogInCfg& from);
  void MergeFrom(const TNMSLogInCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mt.TNetAddr server_addr = 1;
  inline bool has_server_addr() const;
  inline void clear_server_addr();
  static const int kServerAddrFieldNumber = 1;
  inline const ::mt::TNetAddr& server_addr() const;
  inline ::mt::TNetAddr* mutable_server_addr();
  inline ::mt::TNetAddr* release_server_addr();
  inline void set_allocated_server_addr(::mt::TNetAddr* server_addr);

  // optional .mt.EmMtModel model = 2;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 2;
  inline ::mt::EmMtModel model() const;
  inline void set_model(::mt::EmMtModel value);

  // optional string dev_id = 3;
  inline bool has_dev_id() const;
  inline void clear_dev_id();
  static const int kDevIdFieldNumber = 3;
  inline const ::std::string& dev_id() const;
  inline void set_dev_id(const ::std::string& value);
  inline void set_dev_id(const char* value);
  inline void set_dev_id(const char* value, size_t size);
  inline ::std::string* mutable_dev_id();
  inline ::std::string* release_dev_id();
  inline void set_allocated_dev_id(::std::string* dev_id);

  // optional .mt.TNMSNetInfo net_info = 4;
  inline bool has_net_info() const;
  inline void clear_net_info();
  static const int kNetInfoFieldNumber = 4;
  inline const ::mt::TNMSNetInfo& net_info() const;
  inline ::mt::TNMSNetInfo* mutable_net_info();
  inline ::mt::TNMSNetInfo* release_net_info();
  inline void set_allocated_net_info(::mt::TNMSNetInfo* net_info);

  // optional string dev_ver = 6;
  inline bool has_dev_ver() const;
  inline void clear_dev_ver();
  static const int kDevVerFieldNumber = 6;
  inline const ::std::string& dev_ver() const;
  inline void set_dev_ver(const ::std::string& value);
  inline void set_dev_ver(const char* value);
  inline void set_dev_ver(const char* value, size_t size);
  inline ::std::string* mutable_dev_ver();
  inline ::std::string* release_dev_ver();
  inline void set_allocated_dev_ver(::std::string* dev_ver);

  // optional string dev_name = 7;
  inline bool has_dev_name() const;
  inline void clear_dev_name();
  static const int kDevNameFieldNumber = 7;
  inline const ::std::string& dev_name() const;
  inline void set_dev_name(const ::std::string& value);
  inline void set_dev_name(const char* value);
  inline void set_dev_name(const char* value, size_t size);
  inline ::std::string* mutable_dev_name();
  inline ::std::string* release_dev_name();
  inline void set_allocated_dev_name(::std::string* dev_name);

  // optional string oem = 8;
  inline bool has_oem() const;
  inline void clear_oem();
  static const int kOemFieldNumber = 8;
  inline const ::std::string& oem() const;
  inline void set_oem(const ::std::string& value);
  inline void set_oem(const char* value);
  inline void set_oem(const char* value, size_t size);
  inline ::std::string* mutable_oem();
  inline ::std::string* release_oem();
  inline void set_allocated_oem(::std::string* oem);

  // optional .mt.TNMSClientHWInfo hw_info = 9;
  inline bool has_hw_info() const;
  inline void clear_hw_info();
  static const int kHwInfoFieldNumber = 9;
  inline const ::mt::TNMSClientHWInfo& hw_info() const;
  inline ::mt::TNMSClientHWInfo* mutable_hw_info();
  inline ::mt::TNMSClientHWInfo* release_hw_info();
  inline void set_allocated_hw_info(::mt::TNMSClientHWInfo* hw_info);

  // optional .mt.TMtAPSSvrAddr aps_addr = 10;
  inline bool has_aps_addr() const;
  inline void clear_aps_addr();
  static const int kApsAddrFieldNumber = 10;
  inline const ::mt::TMtAPSSvrAddr& aps_addr() const;
  inline ::mt::TMtAPSSvrAddr* mutable_aps_addr();
  inline ::mt::TMtAPSSvrAddr* release_aps_addr();
  inline void set_allocated_aps_addr(::mt::TMtAPSSvrAddr* aps_addr);

  // @@protoc_insertion_point(class_scope:mt.TNMSLogInCfg)
 private:
  inline void set_has_server_addr();
  inline void clear_has_server_addr();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_dev_id();
  inline void clear_has_dev_id();
  inline void set_has_net_info();
  inline void clear_has_net_info();
  inline void set_has_dev_ver();
  inline void clear_has_dev_ver();
  inline void set_has_dev_name();
  inline void clear_has_dev_name();
  inline void set_has_oem();
  inline void clear_has_oem();
  inline void set_has_hw_info();
  inline void clear_has_hw_info();
  inline void set_has_aps_addr();
  inline void clear_has_aps_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::mt::TNetAddr* server_addr_;
  ::std::string* dev_id_;
  ::mt::TNMSNetInfo* net_info_;
  ::std::string* dev_ver_;
  ::std::string* dev_name_;
  ::std::string* oem_;
  ::mt::TNMSClientHWInfo* hw_info_;
  ::mt::TMtAPSSvrAddr* aps_addr_;
  int model_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TNMSLogInCfg* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TServerTypes : public ::google::protobuf::Message {
 public:
  TServerTypes();
  virtual ~TServerTypes();

  TServerTypes(const TServerTypes& from);

  inline TServerTypes& operator=(const TServerTypes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TServerTypes& default_instance();

  void Swap(TServerTypes* other);

  // implements Message ----------------------------------------------

  TServerTypes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TServerTypes& from);
  void MergeFrom(const TServerTypes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mt.EmServerType svr_type = 1;
  inline int svr_type_size() const;
  inline void clear_svr_type();
  static const int kSvrTypeFieldNumber = 1;
  inline ::mt::EmServerType svr_type(int index) const;
  inline void set_svr_type(int index, ::mt::EmServerType value);
  inline void add_svr_type(::mt::EmServerType value);
  inline const ::google::protobuf::RepeatedField<int>& svr_type() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_svr_type();

  // @@protoc_insertion_point(class_scope:mt.TServerTypes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField<int> svr_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TServerTypes* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TServerInfo : public ::google::protobuf::Message {
 public:
  TServerInfo();
  virtual ~TServerInfo();

  TServerInfo(const TServerInfo& from);

  inline TServerInfo& operator=(const TServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TServerInfo& default_instance();

  void Swap(TServerInfo* other);

  // implements Message ----------------------------------------------

  TServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TServerInfo& from);
  void MergeFrom(const TServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mt.EmServerType svr_type = 1;
  inline bool has_svr_type() const;
  inline void clear_svr_type();
  static const int kSvrTypeFieldNumber = 1;
  inline ::mt::EmServerType svr_type() const;
  inline void set_svr_type(::mt::EmServerType value);

  // optional string svr_ip = 2;
  inline bool has_svr_ip() const;
  inline void clear_svr_ip();
  static const int kSvrIpFieldNumber = 2;
  inline const ::std::string& svr_ip() const;
  inline void set_svr_ip(const ::std::string& value);
  inline void set_svr_ip(const char* value);
  inline void set_svr_ip(const char* value, size_t size);
  inline ::std::string* mutable_svr_ip();
  inline ::std::string* release_svr_ip();
  inline void set_allocated_svr_ip(::std::string* svr_ip);

  // optional bool is_svr_con = 3;
  inline bool has_is_svr_con() const;
  inline void clear_is_svr_con();
  static const int kIsSvrConFieldNumber = 3;
  inline bool is_svr_con() const;
  inline void set_is_svr_con(bool value);

  // @@protoc_insertion_point(class_scope:mt.TServerInfo)
 private:
  inline void set_has_svr_type();
  inline void clear_has_svr_type();
  inline void set_has_svr_ip();
  inline void clear_has_svr_ip();
  inline void set_has_is_svr_con();
  inline void clear_has_is_svr_con();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* svr_ip_;
  int svr_type_;
  bool is_svr_con_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TServerInfos : public ::google::protobuf::Message {
 public:
  TServerInfos();
  virtual ~TServerInfos();

  TServerInfos(const TServerInfos& from);

  inline TServerInfos& operator=(const TServerInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TServerInfos& default_instance();

  void Swap(TServerInfos* other);

  // implements Message ----------------------------------------------

  TServerInfos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TServerInfos& from);
  void MergeFrom(const TServerInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mt.TServerInfo svr_infos = 1;
  inline int svr_infos_size() const;
  inline void clear_svr_infos();
  static const int kSvrInfosFieldNumber = 1;
  inline const ::mt::TServerInfo& svr_infos(int index) const;
  inline ::mt::TServerInfo* mutable_svr_infos(int index);
  inline ::mt::TServerInfo* add_svr_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TServerInfo >&
      svr_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TServerInfo >*
      mutable_svr_infos();

  // @@protoc_insertion_point(class_scope:mt.TServerInfos)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::mt::TServerInfo > svr_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TServerInfos* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TNMSLogInResult : public ::google::protobuf::Message {
 public:
  TNMSLogInResult();
  virtual ~TNMSLogInResult();

  TNMSLogInResult(const TNMSLogInResult& from);

  inline TNMSLogInResult& operator=(const TNMSLogInResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TNMSLogInResult& default_instance();

  void Swap(TNMSLogInResult* other);

  // implements Message ----------------------------------------------

  TNMSLogInResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TNMSLogInResult& from);
  void MergeFrom(const TNMSLogInResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool login_ok = 1;
  inline bool has_login_ok() const;
  inline void clear_login_ok();
  static const int kLoginOkFieldNumber = 1;
  inline bool login_ok() const;
  inline void set_login_ok(bool value);

  // optional .mt.EmNmsLoginResult reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::mt::EmNmsLoginResult reason() const;
  inline void set_reason(::mt::EmNmsLoginResult value);

  // @@protoc_insertion_point(class_scope:mt.TNMSLogInResult)
 private:
  inline void set_has_login_ok();
  inline void clear_has_login_ok();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool login_ok_;
  int reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TNMSLogInResult* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAlarmTrap : public ::google::protobuf::Message {
 public:
  TAlarmTrap();
  virtual ~TAlarmTrap();

  TAlarmTrap(const TAlarmTrap& from);

  inline TAlarmTrap& operator=(const TAlarmTrap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAlarmTrap& default_instance();

  void Swap(TAlarmTrap* other);

  // implements Message ----------------------------------------------

  TAlarmTrap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAlarmTrap& from);
  void MergeFrom(const TAlarmTrap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 alarm_code = 1;
  inline bool has_alarm_code() const;
  inline void clear_alarm_code();
  static const int kAlarmCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 alarm_code() const;
  inline void set_alarm_code(::google::protobuf::uint32 value);

  // optional bool alarm_state = 2;
  inline bool has_alarm_state() const;
  inline void clear_alarm_state();
  static const int kAlarmStateFieldNumber = 2;
  inline bool alarm_state() const;
  inline void set_alarm_state(bool value);

  // @@protoc_insertion_point(class_scope:mt.TAlarmTrap)
 private:
  inline void set_has_alarm_code();
  inline void clear_has_alarm_code();
  inline void set_has_alarm_state();
  inline void clear_has_alarm_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 alarm_code_;
  bool alarm_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAlarmTrap* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TExceptionFileReportData : public ::google::protobuf::Message {
 public:
  TExceptionFileReportData();
  virtual ~TExceptionFileReportData();

  TExceptionFileReportData(const TExceptionFileReportData& from);

  inline TExceptionFileReportData& operator=(const TExceptionFileReportData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TExceptionFileReportData& default_instance();

  void Swap(TExceptionFileReportData* other);

  // implements Message ----------------------------------------------

  TExceptionFileReportData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TExceptionFileReportData& from);
  void MergeFrom(const TExceptionFileReportData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exception_time = 1;
  inline bool has_exception_time() const;
  inline void clear_exception_time();
  static const int kExceptionTimeFieldNumber = 1;
  inline const ::std::string& exception_time() const;
  inline void set_exception_time(const ::std::string& value);
  inline void set_exception_time(const char* value);
  inline void set_exception_time(const char* value, size_t size);
  inline ::std::string* mutable_exception_time();
  inline ::std::string* release_exception_time();
  inline void set_allocated_exception_time(::std::string* exception_time);

  // optional string exception_ver = 2;
  inline bool has_exception_ver() const;
  inline void clear_exception_ver();
  static const int kExceptionVerFieldNumber = 2;
  inline const ::std::string& exception_ver() const;
  inline void set_exception_ver(const ::std::string& value);
  inline void set_exception_ver(const char* value);
  inline void set_exception_ver(const char* value, size_t size);
  inline ::std::string* mutable_exception_ver();
  inline ::std::string* release_exception_ver();
  inline void set_allocated_exception_ver(::std::string* exception_ver);

  // optional string exception_log = 3;
  inline bool has_exception_log() const;
  inline void clear_exception_log();
  static const int kExceptionLogFieldNumber = 3;
  inline const ::std::string& exception_log() const;
  inline void set_exception_log(const ::std::string& value);
  inline void set_exception_log(const char* value);
  inline void set_exception_log(const char* value, size_t size);
  inline ::std::string* mutable_exception_log();
  inline ::std::string* release_exception_log();
  inline void set_allocated_exception_log(::std::string* exception_log);

  // @@protoc_insertion_point(class_scope:mt.TExceptionFileReportData)
 private:
  inline void set_has_exception_time();
  inline void clear_has_exception_time();
  inline void set_has_exception_ver();
  inline void clear_has_exception_ver();
  inline void set_has_exception_log();
  inline void clear_has_exception_log();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* exception_time_;
  ::std::string* exception_ver_;
  ::std::string* exception_log_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TExceptionFileReportData* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentConfStatus : public ::google::protobuf::Message {
 public:
  TAgentConfStatus();
  virtual ~TAgentConfStatus();

  TAgentConfStatus(const TAgentConfStatus& from);

  inline TAgentConfStatus& operator=(const TAgentConfStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentConfStatus& default_instance();

  void Swap(TAgentConfStatus* other);

  // implements Message ----------------------------------------------

  TAgentConfStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentConfStatus& from);
  void MergeFrom(const TAgentConfStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mt.EmMtCallState conf_status = 1;
  inline bool has_conf_status() const;
  inline void clear_conf_status();
  static const int kConfStatusFieldNumber = 1;
  inline ::mt::EmMtCallState conf_status() const;
  inline void set_conf_status(::mt::EmMtCallState value);

  // optional string mt_e164 = 2;
  inline bool has_mt_e164() const;
  inline void clear_mt_e164();
  static const int kMtE164FieldNumber = 2;
  inline const ::std::string& mt_e164() const;
  inline void set_mt_e164(const ::std::string& value);
  inline void set_mt_e164(const char* value);
  inline void set_mt_e164(const char* value, size_t size);
  inline ::std::string* mutable_mt_e164();
  inline ::std::string* release_mt_e164();
  inline void set_allocated_mt_e164(::std::string* mt_e164);

  // optional string conf_e164 = 3;
  inline bool has_conf_e164() const;
  inline void clear_conf_e164();
  static const int kConfE164FieldNumber = 3;
  inline const ::std::string& conf_e164() const;
  inline void set_conf_e164(const ::std::string& value);
  inline void set_conf_e164(const char* value);
  inline void set_conf_e164(const char* value, size_t size);
  inline ::std::string* mutable_conf_e164();
  inline ::std::string* release_conf_e164();
  inline void set_allocated_conf_e164(::std::string* conf_e164);

  // optional uint32 bitrate = 4;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 4;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TAgentConfStatus)
 private:
  inline void set_has_conf_status();
  inline void clear_has_conf_status();
  inline void set_has_mt_e164();
  inline void clear_has_mt_e164();
  inline void set_has_conf_e164();
  inline void clear_has_conf_e164();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mt_e164_;
  int conf_status_;
  ::google::protobuf::uint32 bitrate_;
  ::std::string* conf_e164_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentConfStatus* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentAudEncStatistic : public ::google::protobuf::Message {
 public:
  TAgentAudEncStatistic();
  virtual ~TAgentAudEncStatistic();

  TAgentAudEncStatistic(const TAgentAudEncStatistic& from);

  inline TAgentAudEncStatistic& operator=(const TAgentAudEncStatistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentAudEncStatistic& default_instance();

  void Swap(TAgentAudEncStatistic* other);

  // implements Message ----------------------------------------------

  TAgentAudEncStatistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentAudEncStatistic& from);
  void MergeFrom(const TAgentAudEncStatistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 2;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 2;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // optional uint32 format = 3;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 3;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TAgentAudEncStatistic)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();
  inline void set_has_format();
  inline void clear_has_format();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 bitrate_;
  ::google::protobuf::uint32 format_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentAudEncStatistic* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentAudDecStatistic : public ::google::protobuf::Message {
 public:
  TAgentAudDecStatistic();
  virtual ~TAgentAudDecStatistic();

  TAgentAudDecStatistic(const TAgentAudDecStatistic& from);

  inline TAgentAudDecStatistic& operator=(const TAgentAudDecStatistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentAudDecStatistic& default_instance();

  void Swap(TAgentAudDecStatistic* other);

  // implements Message ----------------------------------------------

  TAgentAudDecStatistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentAudDecStatistic& from);
  void MergeFrom(const TAgentAudDecStatistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint32 pkts_lose = 2;
  inline bool has_pkts_lose() const;
  inline void clear_pkts_lose();
  static const int kPktsLoseFieldNumber = 2;
  inline ::google::protobuf::uint32 pkts_lose() const;
  inline void set_pkts_lose(::google::protobuf::uint32 value);

  // optional uint32 pkts_loserate = 3;
  inline bool has_pkts_loserate() const;
  inline void clear_pkts_loserate();
  static const int kPktsLoserateFieldNumber = 3;
  inline ::google::protobuf::uint32 pkts_loserate() const;
  inline void set_pkts_loserate(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 4;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 4;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // optional uint32 format = 5;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 5;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TAgentAudDecStatistic)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_pkts_lose();
  inline void clear_has_pkts_lose();
  inline void set_has_pkts_loserate();
  inline void clear_has_pkts_loserate();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();
  inline void set_has_format();
  inline void clear_has_format();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 pkts_lose_;
  ::google::protobuf::uint32 pkts_loserate_;
  ::google::protobuf::uint32 bitrate_;
  ::google::protobuf::uint32 format_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentAudDecStatistic* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentVidEncStatistic : public ::google::protobuf::Message {
 public:
  TAgentVidEncStatistic();
  virtual ~TAgentVidEncStatistic();

  TAgentVidEncStatistic(const TAgentVidEncStatistic& from);

  inline TAgentVidEncStatistic& operator=(const TAgentVidEncStatistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentVidEncStatistic& default_instance();

  void Swap(TAgentVidEncStatistic* other);

  // implements Message ----------------------------------------------

  TAgentVidEncStatistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentVidEncStatistic& from);
  void MergeFrom(const TAgentVidEncStatistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional bool video_resource_exist = 2;
  inline bool has_video_resource_exist() const;
  inline void clear_video_resource_exist();
  static const int kVideoResourceExistFieldNumber = 2;
  inline bool video_resource_exist() const;
  inline void set_video_resource_exist(bool value);

  // optional uint32 framerate = 3;
  inline bool has_framerate() const;
  inline void clear_framerate();
  static const int kFramerateFieldNumber = 3;
  inline ::google::protobuf::uint32 framerate() const;
  inline void set_framerate(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 4;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 4;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // optional uint32 format = 5;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 5;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // optional uint32 resolution = 6;
  inline bool has_resolution() const;
  inline void clear_resolution();
  static const int kResolutionFieldNumber = 6;
  inline ::google::protobuf::uint32 resolution() const;
  inline void set_resolution(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TAgentVidEncStatistic)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_video_resource_exist();
  inline void clear_has_video_resource_exist();
  inline void set_has_framerate();
  inline void clear_has_framerate();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_resolution();
  inline void clear_has_resolution();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  bool video_resource_exist_;
  ::google::protobuf::uint32 framerate_;
  ::google::protobuf::uint32 bitrate_;
  ::google::protobuf::uint32 format_;
  ::google::protobuf::uint32 resolution_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentVidEncStatistic* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentVidDecStatistic : public ::google::protobuf::Message {
 public:
  TAgentVidDecStatistic();
  virtual ~TAgentVidDecStatistic();

  TAgentVidDecStatistic(const TAgentVidDecStatistic& from);

  inline TAgentVidDecStatistic& operator=(const TAgentVidDecStatistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentVidDecStatistic& default_instance();

  void Swap(TAgentVidDecStatistic* other);

  // implements Message ----------------------------------------------

  TAgentVidDecStatistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentVidDecStatistic& from);
  void MergeFrom(const TAgentVidDecStatistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint32 framerate = 2;
  inline bool has_framerate() const;
  inline void clear_framerate();
  static const int kFramerateFieldNumber = 2;
  inline ::google::protobuf::uint32 framerate() const;
  inline void set_framerate(::google::protobuf::uint32 value);

  // optional uint32 pkts_lose = 3;
  inline bool has_pkts_lose() const;
  inline void clear_pkts_lose();
  static const int kPktsLoseFieldNumber = 3;
  inline ::google::protobuf::uint32 pkts_lose() const;
  inline void set_pkts_lose(::google::protobuf::uint32 value);

  // optional uint32 pkts_loserate = 4;
  inline bool has_pkts_loserate() const;
  inline void clear_pkts_loserate();
  static const int kPktsLoserateFieldNumber = 4;
  inline ::google::protobuf::uint32 pkts_loserate() const;
  inline void set_pkts_loserate(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 5;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 5;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // optional uint32 format = 6;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 6;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // optional uint32 resolution = 7;
  inline bool has_resolution() const;
  inline void clear_resolution();
  static const int kResolutionFieldNumber = 7;
  inline ::google::protobuf::uint32 resolution() const;
  inline void set_resolution(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TAgentVidDecStatistic)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_framerate();
  inline void clear_has_framerate();
  inline void set_has_pkts_lose();
  inline void clear_has_pkts_lose();
  inline void set_has_pkts_loserate();
  inline void clear_has_pkts_loserate();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_resolution();
  inline void clear_has_resolution();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 framerate_;
  ::google::protobuf::uint32 pkts_lose_;
  ::google::protobuf::uint32 pkts_loserate_;
  ::google::protobuf::uint32 bitrate_;
  ::google::protobuf::uint32 format_;
  ::google::protobuf::uint32 resolution_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentVidDecStatistic* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TAgentCodecStatistic : public ::google::protobuf::Message {
 public:
  TAgentCodecStatistic();
  virtual ~TAgentCodecStatistic();

  TAgentCodecStatistic(const TAgentCodecStatistic& from);

  inline TAgentCodecStatistic& operator=(const TAgentCodecStatistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAgentCodecStatistic& default_instance();

  void Swap(TAgentCodecStatistic* other);

  // implements Message ----------------------------------------------

  TAgentCodecStatistic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAgentCodecStatistic& from);
  void MergeFrom(const TAgentCodecStatistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mt.TAgentAudEncStatistic audenc_statics = 1;
  inline int audenc_statics_size() const;
  inline void clear_audenc_statics();
  static const int kAudencStaticsFieldNumber = 1;
  inline const ::mt::TAgentAudEncStatistic& audenc_statics(int index) const;
  inline ::mt::TAgentAudEncStatistic* mutable_audenc_statics(int index);
  inline ::mt::TAgentAudEncStatistic* add_audenc_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudEncStatistic >&
      audenc_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudEncStatistic >*
      mutable_audenc_statics();

  // repeated .mt.TAgentAudDecStatistic auddec_statics = 2;
  inline int auddec_statics_size() const;
  inline void clear_auddec_statics();
  static const int kAuddecStaticsFieldNumber = 2;
  inline const ::mt::TAgentAudDecStatistic& auddec_statics(int index) const;
  inline ::mt::TAgentAudDecStatistic* mutable_auddec_statics(int index);
  inline ::mt::TAgentAudDecStatistic* add_auddec_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudDecStatistic >&
      auddec_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudDecStatistic >*
      mutable_auddec_statics();

  // repeated .mt.TAgentVidEncStatistic pri_videnc_statics = 3;
  inline int pri_videnc_statics_size() const;
  inline void clear_pri_videnc_statics();
  static const int kPriVidencStaticsFieldNumber = 3;
  inline const ::mt::TAgentVidEncStatistic& pri_videnc_statics(int index) const;
  inline ::mt::TAgentVidEncStatistic* mutable_pri_videnc_statics(int index);
  inline ::mt::TAgentVidEncStatistic* add_pri_videnc_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >&
      pri_videnc_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >*
      mutable_pri_videnc_statics();

  // repeated .mt.TAgentVidDecStatistic pri_viddec_statics = 4;
  inline int pri_viddec_statics_size() const;
  inline void clear_pri_viddec_statics();
  static const int kPriViddecStaticsFieldNumber = 4;
  inline const ::mt::TAgentVidDecStatistic& pri_viddec_statics(int index) const;
  inline ::mt::TAgentVidDecStatistic* mutable_pri_viddec_statics(int index);
  inline ::mt::TAgentVidDecStatistic* add_pri_viddec_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >&
      pri_viddec_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >*
      mutable_pri_viddec_statics();

  // repeated .mt.TAgentVidEncStatistic ass_videnc_statics = 5;
  inline int ass_videnc_statics_size() const;
  inline void clear_ass_videnc_statics();
  static const int kAssVidencStaticsFieldNumber = 5;
  inline const ::mt::TAgentVidEncStatistic& ass_videnc_statics(int index) const;
  inline ::mt::TAgentVidEncStatistic* mutable_ass_videnc_statics(int index);
  inline ::mt::TAgentVidEncStatistic* add_ass_videnc_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >&
      ass_videnc_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >*
      mutable_ass_videnc_statics();

  // repeated .mt.TAgentVidDecStatistic ass_viddec_statics = 6;
  inline int ass_viddec_statics_size() const;
  inline void clear_ass_viddec_statics();
  static const int kAssViddecStaticsFieldNumber = 6;
  inline const ::mt::TAgentVidDecStatistic& ass_viddec_statics(int index) const;
  inline ::mt::TAgentVidDecStatistic* mutable_ass_viddec_statics(int index);
  inline ::mt::TAgentVidDecStatistic* add_ass_viddec_statics();
  inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >&
      ass_viddec_statics() const;
  inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >*
      mutable_ass_viddec_statics();

  // @@protoc_insertion_point(class_scope:mt.TAgentCodecStatistic)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudEncStatistic > audenc_statics_;
  ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudDecStatistic > auddec_statics_;
  ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic > pri_videnc_statics_;
  ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic > pri_viddec_statics_;
  ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic > ass_videnc_statics_;
  ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic > ass_viddec_statics_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TAgentCodecStatistic* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TMtPfmInfo : public ::google::protobuf::Message {
 public:
  TMtPfmInfo();
  virtual ~TMtPfmInfo();

  TMtPfmInfo(const TMtPfmInfo& from);

  inline TMtPfmInfo& operator=(const TMtPfmInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMtPfmInfo& default_instance();

  void Swap(TMtPfmInfo* other);

  // implements Message ----------------------------------------------

  TMtPfmInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMtPfmInfo& from);
  void MergeFrom(const TMtPfmInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cpu_userate = 1;
  inline bool has_cpu_userate() const;
  inline void clear_cpu_userate();
  static const int kCpuUserateFieldNumber = 1;
  inline ::google::protobuf::uint32 cpu_userate() const;
  inline void set_cpu_userate(::google::protobuf::uint32 value);

  // optional uint32 disk_userate = 2;
  inline bool has_disk_userate() const;
  inline void clear_disk_userate();
  static const int kDiskUserateFieldNumber = 2;
  inline ::google::protobuf::uint32 disk_userate() const;
  inline void set_disk_userate(::google::protobuf::uint32 value);

  // optional uint32 mem_userate = 3;
  inline bool has_mem_userate() const;
  inline void clear_mem_userate();
  static const int kMemUserateFieldNumber = 3;
  inline ::google::protobuf::uint32 mem_userate() const;
  inline void set_mem_userate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mt.TMtPfmInfo)
 private:
  inline void set_has_cpu_userate();
  inline void clear_has_cpu_userate();
  inline void set_has_disk_userate();
  inline void clear_has_disk_userate();
  inline void set_has_mem_userate();
  inline void clear_has_mem_userate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cpu_userate_;
  ::google::protobuf::uint32 disk_userate_;
  ::google::protobuf::uint32 mem_userate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TMtPfmInfo* default_instance_;
};
// -------------------------------------------------------------------

class MTMSG_API TMTAgentPackFileState : public ::google::protobuf::Message {
 public:
  TMTAgentPackFileState();
  virtual ~TMTAgentPackFileState();

  TMTAgentPackFileState(const TMTAgentPackFileState& from);

  inline TMTAgentPackFileState& operator=(const TMTAgentPackFileState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMTAgentPackFileState& default_instance();

  void Swap(TMTAgentPackFileState* other);

  // implements Message ----------------------------------------------

  TMTAgentPackFileState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMTAgentPackFileState& from);
  void MergeFrom(const TMTAgentPackFileState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mt.EmAgentPackFileState emPackState = 1;
  inline bool has_empackstate() const;
  inline void clear_empackstate();
  static const int kEmPackStateFieldNumber = 1;
  inline ::mt::EmAgentPackFileState empackstate() const;
  inline void set_empackstate(::mt::EmAgentPackFileState value);

  // @@protoc_insertion_point(class_scope:mt.TMTAgentPackFileState)
 private:
  inline void set_has_empackstate();
  inline void clear_has_empackstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int empackstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void MTMSG_API protobuf_AddDesc_structagent_2eproto();
  friend void protobuf_AssignDesc_structagent_2eproto();
  friend void protobuf_ShutdownFile_structagent_2eproto();

  void InitAsDefaultInstance();
  static TMTAgentPackFileState* default_instance_;
};
// ===================================================================


// ===================================================================

// TNMSNetInfo

// optional string ip = 1;
inline bool TNMSNetInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TNMSNetInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TNMSNetInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TNMSNetInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& TNMSNetInfo::ip() const {
  return *ip_;
}
inline void TNMSNetInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void TNMSNetInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void TNMSNetInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSNetInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* TNMSNetInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSNetInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string dns = 2;
inline bool TNMSNetInfo::has_dns() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TNMSNetInfo::set_has_dns() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TNMSNetInfo::clear_has_dns() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TNMSNetInfo::clear_dns() {
  if (dns_ != &::google::protobuf::internal::kEmptyString) {
    dns_->clear();
  }
  clear_has_dns();
}
inline const ::std::string& TNMSNetInfo::dns() const {
  return *dns_;
}
inline void TNMSNetInfo::set_dns(const ::std::string& value) {
  set_has_dns();
  if (dns_ == &::google::protobuf::internal::kEmptyString) {
    dns_ = new ::std::string;
  }
  dns_->assign(value);
}
inline void TNMSNetInfo::set_dns(const char* value) {
  set_has_dns();
  if (dns_ == &::google::protobuf::internal::kEmptyString) {
    dns_ = new ::std::string;
  }
  dns_->assign(value);
}
inline void TNMSNetInfo::set_dns(const char* value, size_t size) {
  set_has_dns();
  if (dns_ == &::google::protobuf::internal::kEmptyString) {
    dns_ = new ::std::string;
  }
  dns_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSNetInfo::mutable_dns() {
  set_has_dns();
  if (dns_ == &::google::protobuf::internal::kEmptyString) {
    dns_ = new ::std::string;
  }
  return dns_;
}
inline ::std::string* TNMSNetInfo::release_dns() {
  clear_has_dns();
  if (dns_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dns_;
    dns_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSNetInfo::set_allocated_dns(::std::string* dns) {
  if (dns_ != &::google::protobuf::internal::kEmptyString) {
    delete dns_;
  }
  if (dns) {
    set_has_dns();
    dns_ = dns;
  } else {
    clear_has_dns();
    dns_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TNMSLogInCfg

// optional .mt.TNetAddr server_addr = 1;
inline bool TNMSLogInCfg::has_server_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TNMSLogInCfg::set_has_server_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TNMSLogInCfg::clear_has_server_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TNMSLogInCfg::clear_server_addr() {
  if (server_addr_ != NULL) server_addr_->::mt::TNetAddr::Clear();
  clear_has_server_addr();
}
inline const ::mt::TNetAddr& TNMSLogInCfg::server_addr() const {
  return server_addr_ != NULL ? *server_addr_ : *default_instance_->server_addr_;
}
inline ::mt::TNetAddr* TNMSLogInCfg::mutable_server_addr() {
  set_has_server_addr();
  if (server_addr_ == NULL) server_addr_ = new ::mt::TNetAddr;
  return server_addr_;
}
inline ::mt::TNetAddr* TNMSLogInCfg::release_server_addr() {
  clear_has_server_addr();
  ::mt::TNetAddr* temp = server_addr_;
  server_addr_ = NULL;
  return temp;
}
inline void TNMSLogInCfg::set_allocated_server_addr(::mt::TNetAddr* server_addr) {
  delete server_addr_;
  server_addr_ = server_addr;
  if (server_addr) {
    set_has_server_addr();
  } else {
    clear_has_server_addr();
  }
}

// optional .mt.EmMtModel model = 2;
inline bool TNMSLogInCfg::has_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TNMSLogInCfg::set_has_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TNMSLogInCfg::clear_has_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TNMSLogInCfg::clear_model() {
  model_ = 0;
  clear_has_model();
}
inline ::mt::EmMtModel TNMSLogInCfg::model() const {
  return static_cast< ::mt::EmMtModel >(model_);
}
inline void TNMSLogInCfg::set_model(::mt::EmMtModel value) {
  assert(::mt::EmMtModel_IsValid(value));
  set_has_model();
  model_ = value;
}

// optional string dev_id = 3;
inline bool TNMSLogInCfg::has_dev_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TNMSLogInCfg::set_has_dev_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TNMSLogInCfg::clear_has_dev_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TNMSLogInCfg::clear_dev_id() {
  if (dev_id_ != &::google::protobuf::internal::kEmptyString) {
    dev_id_->clear();
  }
  clear_has_dev_id();
}
inline const ::std::string& TNMSLogInCfg::dev_id() const {
  return *dev_id_;
}
inline void TNMSLogInCfg::set_dev_id(const ::std::string& value) {
  set_has_dev_id();
  if (dev_id_ == &::google::protobuf::internal::kEmptyString) {
    dev_id_ = new ::std::string;
  }
  dev_id_->assign(value);
}
inline void TNMSLogInCfg::set_dev_id(const char* value) {
  set_has_dev_id();
  if (dev_id_ == &::google::protobuf::internal::kEmptyString) {
    dev_id_ = new ::std::string;
  }
  dev_id_->assign(value);
}
inline void TNMSLogInCfg::set_dev_id(const char* value, size_t size) {
  set_has_dev_id();
  if (dev_id_ == &::google::protobuf::internal::kEmptyString) {
    dev_id_ = new ::std::string;
  }
  dev_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSLogInCfg::mutable_dev_id() {
  set_has_dev_id();
  if (dev_id_ == &::google::protobuf::internal::kEmptyString) {
    dev_id_ = new ::std::string;
  }
  return dev_id_;
}
inline ::std::string* TNMSLogInCfg::release_dev_id() {
  clear_has_dev_id();
  if (dev_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dev_id_;
    dev_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSLogInCfg::set_allocated_dev_id(::std::string* dev_id) {
  if (dev_id_ != &::google::protobuf::internal::kEmptyString) {
    delete dev_id_;
  }
  if (dev_id) {
    set_has_dev_id();
    dev_id_ = dev_id;
  } else {
    clear_has_dev_id();
    dev_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .mt.TNMSNetInfo net_info = 4;
inline bool TNMSLogInCfg::has_net_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TNMSLogInCfg::set_has_net_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TNMSLogInCfg::clear_has_net_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TNMSLogInCfg::clear_net_info() {
  if (net_info_ != NULL) net_info_->::mt::TNMSNetInfo::Clear();
  clear_has_net_info();
}
inline const ::mt::TNMSNetInfo& TNMSLogInCfg::net_info() const {
  return net_info_ != NULL ? *net_info_ : *default_instance_->net_info_;
}
inline ::mt::TNMSNetInfo* TNMSLogInCfg::mutable_net_info() {
  set_has_net_info();
  if (net_info_ == NULL) net_info_ = new ::mt::TNMSNetInfo;
  return net_info_;
}
inline ::mt::TNMSNetInfo* TNMSLogInCfg::release_net_info() {
  clear_has_net_info();
  ::mt::TNMSNetInfo* temp = net_info_;
  net_info_ = NULL;
  return temp;
}
inline void TNMSLogInCfg::set_allocated_net_info(::mt::TNMSNetInfo* net_info) {
  delete net_info_;
  net_info_ = net_info;
  if (net_info) {
    set_has_net_info();
  } else {
    clear_has_net_info();
  }
}

// optional string dev_ver = 6;
inline bool TNMSLogInCfg::has_dev_ver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TNMSLogInCfg::set_has_dev_ver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TNMSLogInCfg::clear_has_dev_ver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TNMSLogInCfg::clear_dev_ver() {
  if (dev_ver_ != &::google::protobuf::internal::kEmptyString) {
    dev_ver_->clear();
  }
  clear_has_dev_ver();
}
inline const ::std::string& TNMSLogInCfg::dev_ver() const {
  return *dev_ver_;
}
inline void TNMSLogInCfg::set_dev_ver(const ::std::string& value) {
  set_has_dev_ver();
  if (dev_ver_ == &::google::protobuf::internal::kEmptyString) {
    dev_ver_ = new ::std::string;
  }
  dev_ver_->assign(value);
}
inline void TNMSLogInCfg::set_dev_ver(const char* value) {
  set_has_dev_ver();
  if (dev_ver_ == &::google::protobuf::internal::kEmptyString) {
    dev_ver_ = new ::std::string;
  }
  dev_ver_->assign(value);
}
inline void TNMSLogInCfg::set_dev_ver(const char* value, size_t size) {
  set_has_dev_ver();
  if (dev_ver_ == &::google::protobuf::internal::kEmptyString) {
    dev_ver_ = new ::std::string;
  }
  dev_ver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSLogInCfg::mutable_dev_ver() {
  set_has_dev_ver();
  if (dev_ver_ == &::google::protobuf::internal::kEmptyString) {
    dev_ver_ = new ::std::string;
  }
  return dev_ver_;
}
inline ::std::string* TNMSLogInCfg::release_dev_ver() {
  clear_has_dev_ver();
  if (dev_ver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dev_ver_;
    dev_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSLogInCfg::set_allocated_dev_ver(::std::string* dev_ver) {
  if (dev_ver_ != &::google::protobuf::internal::kEmptyString) {
    delete dev_ver_;
  }
  if (dev_ver) {
    set_has_dev_ver();
    dev_ver_ = dev_ver;
  } else {
    clear_has_dev_ver();
    dev_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string dev_name = 7;
inline bool TNMSLogInCfg::has_dev_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TNMSLogInCfg::set_has_dev_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TNMSLogInCfg::clear_has_dev_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TNMSLogInCfg::clear_dev_name() {
  if (dev_name_ != &::google::protobuf::internal::kEmptyString) {
    dev_name_->clear();
  }
  clear_has_dev_name();
}
inline const ::std::string& TNMSLogInCfg::dev_name() const {
  return *dev_name_;
}
inline void TNMSLogInCfg::set_dev_name(const ::std::string& value) {
  set_has_dev_name();
  if (dev_name_ == &::google::protobuf::internal::kEmptyString) {
    dev_name_ = new ::std::string;
  }
  dev_name_->assign(value);
}
inline void TNMSLogInCfg::set_dev_name(const char* value) {
  set_has_dev_name();
  if (dev_name_ == &::google::protobuf::internal::kEmptyString) {
    dev_name_ = new ::std::string;
  }
  dev_name_->assign(value);
}
inline void TNMSLogInCfg::set_dev_name(const char* value, size_t size) {
  set_has_dev_name();
  if (dev_name_ == &::google::protobuf::internal::kEmptyString) {
    dev_name_ = new ::std::string;
  }
  dev_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSLogInCfg::mutable_dev_name() {
  set_has_dev_name();
  if (dev_name_ == &::google::protobuf::internal::kEmptyString) {
    dev_name_ = new ::std::string;
  }
  return dev_name_;
}
inline ::std::string* TNMSLogInCfg::release_dev_name() {
  clear_has_dev_name();
  if (dev_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dev_name_;
    dev_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSLogInCfg::set_allocated_dev_name(::std::string* dev_name) {
  if (dev_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dev_name_;
  }
  if (dev_name) {
    set_has_dev_name();
    dev_name_ = dev_name;
  } else {
    clear_has_dev_name();
    dev_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string oem = 8;
inline bool TNMSLogInCfg::has_oem() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TNMSLogInCfg::set_has_oem() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TNMSLogInCfg::clear_has_oem() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TNMSLogInCfg::clear_oem() {
  if (oem_ != &::google::protobuf::internal::kEmptyString) {
    oem_->clear();
  }
  clear_has_oem();
}
inline const ::std::string& TNMSLogInCfg::oem() const {
  return *oem_;
}
inline void TNMSLogInCfg::set_oem(const ::std::string& value) {
  set_has_oem();
  if (oem_ == &::google::protobuf::internal::kEmptyString) {
    oem_ = new ::std::string;
  }
  oem_->assign(value);
}
inline void TNMSLogInCfg::set_oem(const char* value) {
  set_has_oem();
  if (oem_ == &::google::protobuf::internal::kEmptyString) {
    oem_ = new ::std::string;
  }
  oem_->assign(value);
}
inline void TNMSLogInCfg::set_oem(const char* value, size_t size) {
  set_has_oem();
  if (oem_ == &::google::protobuf::internal::kEmptyString) {
    oem_ = new ::std::string;
  }
  oem_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TNMSLogInCfg::mutable_oem() {
  set_has_oem();
  if (oem_ == &::google::protobuf::internal::kEmptyString) {
    oem_ = new ::std::string;
  }
  return oem_;
}
inline ::std::string* TNMSLogInCfg::release_oem() {
  clear_has_oem();
  if (oem_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oem_;
    oem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TNMSLogInCfg::set_allocated_oem(::std::string* oem) {
  if (oem_ != &::google::protobuf::internal::kEmptyString) {
    delete oem_;
  }
  if (oem) {
    set_has_oem();
    oem_ = oem;
  } else {
    clear_has_oem();
    oem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .mt.TNMSClientHWInfo hw_info = 9;
inline bool TNMSLogInCfg::has_hw_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TNMSLogInCfg::set_has_hw_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TNMSLogInCfg::clear_has_hw_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TNMSLogInCfg::clear_hw_info() {
  if (hw_info_ != NULL) hw_info_->::mt::TNMSClientHWInfo::Clear();
  clear_has_hw_info();
}
inline const ::mt::TNMSClientHWInfo& TNMSLogInCfg::hw_info() const {
  return hw_info_ != NULL ? *hw_info_ : *default_instance_->hw_info_;
}
inline ::mt::TNMSClientHWInfo* TNMSLogInCfg::mutable_hw_info() {
  set_has_hw_info();
  if (hw_info_ == NULL) hw_info_ = new ::mt::TNMSClientHWInfo;
  return hw_info_;
}
inline ::mt::TNMSClientHWInfo* TNMSLogInCfg::release_hw_info() {
  clear_has_hw_info();
  ::mt::TNMSClientHWInfo* temp = hw_info_;
  hw_info_ = NULL;
  return temp;
}
inline void TNMSLogInCfg::set_allocated_hw_info(::mt::TNMSClientHWInfo* hw_info) {
  delete hw_info_;
  hw_info_ = hw_info;
  if (hw_info) {
    set_has_hw_info();
  } else {
    clear_has_hw_info();
  }
}

// optional .mt.TMtAPSSvrAddr aps_addr = 10;
inline bool TNMSLogInCfg::has_aps_addr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TNMSLogInCfg::set_has_aps_addr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TNMSLogInCfg::clear_has_aps_addr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TNMSLogInCfg::clear_aps_addr() {
  if (aps_addr_ != NULL) aps_addr_->::mt::TMtAPSSvrAddr::Clear();
  clear_has_aps_addr();
}
inline const ::mt::TMtAPSSvrAddr& TNMSLogInCfg::aps_addr() const {
  return aps_addr_ != NULL ? *aps_addr_ : *default_instance_->aps_addr_;
}
inline ::mt::TMtAPSSvrAddr* TNMSLogInCfg::mutable_aps_addr() {
  set_has_aps_addr();
  if (aps_addr_ == NULL) aps_addr_ = new ::mt::TMtAPSSvrAddr;
  return aps_addr_;
}
inline ::mt::TMtAPSSvrAddr* TNMSLogInCfg::release_aps_addr() {
  clear_has_aps_addr();
  ::mt::TMtAPSSvrAddr* temp = aps_addr_;
  aps_addr_ = NULL;
  return temp;
}
inline void TNMSLogInCfg::set_allocated_aps_addr(::mt::TMtAPSSvrAddr* aps_addr) {
  delete aps_addr_;
  aps_addr_ = aps_addr;
  if (aps_addr) {
    set_has_aps_addr();
  } else {
    clear_has_aps_addr();
  }
}

// -------------------------------------------------------------------

// TServerTypes

// repeated .mt.EmServerType svr_type = 1;
inline int TServerTypes::svr_type_size() const {
  return svr_type_.size();
}
inline void TServerTypes::clear_svr_type() {
  svr_type_.Clear();
}
inline ::mt::EmServerType TServerTypes::svr_type(int index) const {
  return static_cast< ::mt::EmServerType >(svr_type_.Get(index));
}
inline void TServerTypes::set_svr_type(int index, ::mt::EmServerType value) {
  assert(::mt::EmServerType_IsValid(value));
  svr_type_.Set(index, value);
}
inline void TServerTypes::add_svr_type(::mt::EmServerType value) {
  assert(::mt::EmServerType_IsValid(value));
  svr_type_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
TServerTypes::svr_type() const {
  return svr_type_;
}
inline ::google::protobuf::RepeatedField<int>*
TServerTypes::mutable_svr_type() {
  return &svr_type_;
}

// -------------------------------------------------------------------

// TServerInfo

// optional .mt.EmServerType svr_type = 1;
inline bool TServerInfo::has_svr_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TServerInfo::set_has_svr_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TServerInfo::clear_has_svr_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TServerInfo::clear_svr_type() {
  svr_type_ = 0;
  clear_has_svr_type();
}
inline ::mt::EmServerType TServerInfo::svr_type() const {
  return static_cast< ::mt::EmServerType >(svr_type_);
}
inline void TServerInfo::set_svr_type(::mt::EmServerType value) {
  assert(::mt::EmServerType_IsValid(value));
  set_has_svr_type();
  svr_type_ = value;
}

// optional string svr_ip = 2;
inline bool TServerInfo::has_svr_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TServerInfo::set_has_svr_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TServerInfo::clear_has_svr_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TServerInfo::clear_svr_ip() {
  if (svr_ip_ != &::google::protobuf::internal::kEmptyString) {
    svr_ip_->clear();
  }
  clear_has_svr_ip();
}
inline const ::std::string& TServerInfo::svr_ip() const {
  return *svr_ip_;
}
inline void TServerInfo::set_svr_ip(const ::std::string& value) {
  set_has_svr_ip();
  if (svr_ip_ == &::google::protobuf::internal::kEmptyString) {
    svr_ip_ = new ::std::string;
  }
  svr_ip_->assign(value);
}
inline void TServerInfo::set_svr_ip(const char* value) {
  set_has_svr_ip();
  if (svr_ip_ == &::google::protobuf::internal::kEmptyString) {
    svr_ip_ = new ::std::string;
  }
  svr_ip_->assign(value);
}
inline void TServerInfo::set_svr_ip(const char* value, size_t size) {
  set_has_svr_ip();
  if (svr_ip_ == &::google::protobuf::internal::kEmptyString) {
    svr_ip_ = new ::std::string;
  }
  svr_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TServerInfo::mutable_svr_ip() {
  set_has_svr_ip();
  if (svr_ip_ == &::google::protobuf::internal::kEmptyString) {
    svr_ip_ = new ::std::string;
  }
  return svr_ip_;
}
inline ::std::string* TServerInfo::release_svr_ip() {
  clear_has_svr_ip();
  if (svr_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = svr_ip_;
    svr_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TServerInfo::set_allocated_svr_ip(::std::string* svr_ip) {
  if (svr_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete svr_ip_;
  }
  if (svr_ip) {
    set_has_svr_ip();
    svr_ip_ = svr_ip;
  } else {
    clear_has_svr_ip();
    svr_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_svr_con = 3;
inline bool TServerInfo::has_is_svr_con() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TServerInfo::set_has_is_svr_con() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TServerInfo::clear_has_is_svr_con() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TServerInfo::clear_is_svr_con() {
  is_svr_con_ = false;
  clear_has_is_svr_con();
}
inline bool TServerInfo::is_svr_con() const {
  return is_svr_con_;
}
inline void TServerInfo::set_is_svr_con(bool value) {
  set_has_is_svr_con();
  is_svr_con_ = value;
}

// -------------------------------------------------------------------

// TServerInfos

// repeated .mt.TServerInfo svr_infos = 1;
inline int TServerInfos::svr_infos_size() const {
  return svr_infos_.size();
}
inline void TServerInfos::clear_svr_infos() {
  svr_infos_.Clear();
}
inline const ::mt::TServerInfo& TServerInfos::svr_infos(int index) const {
  return svr_infos_.Get(index);
}
inline ::mt::TServerInfo* TServerInfos::mutable_svr_infos(int index) {
  return svr_infos_.Mutable(index);
}
inline ::mt::TServerInfo* TServerInfos::add_svr_infos() {
  return svr_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TServerInfo >&
TServerInfos::svr_infos() const {
  return svr_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TServerInfo >*
TServerInfos::mutable_svr_infos() {
  return &svr_infos_;
}

// -------------------------------------------------------------------

// TNMSLogInResult

// optional bool login_ok = 1;
inline bool TNMSLogInResult::has_login_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TNMSLogInResult::set_has_login_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TNMSLogInResult::clear_has_login_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TNMSLogInResult::clear_login_ok() {
  login_ok_ = false;
  clear_has_login_ok();
}
inline bool TNMSLogInResult::login_ok() const {
  return login_ok_;
}
inline void TNMSLogInResult::set_login_ok(bool value) {
  set_has_login_ok();
  login_ok_ = value;
}

// optional .mt.EmNmsLoginResult reason = 2;
inline bool TNMSLogInResult::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TNMSLogInResult::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TNMSLogInResult::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TNMSLogInResult::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::mt::EmNmsLoginResult TNMSLogInResult::reason() const {
  return static_cast< ::mt::EmNmsLoginResult >(reason_);
}
inline void TNMSLogInResult::set_reason(::mt::EmNmsLoginResult value) {
  assert(::mt::EmNmsLoginResult_IsValid(value));
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// TAlarmTrap

// optional uint32 alarm_code = 1;
inline bool TAlarmTrap::has_alarm_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAlarmTrap::set_has_alarm_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAlarmTrap::clear_has_alarm_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAlarmTrap::clear_alarm_code() {
  alarm_code_ = 0u;
  clear_has_alarm_code();
}
inline ::google::protobuf::uint32 TAlarmTrap::alarm_code() const {
  return alarm_code_;
}
inline void TAlarmTrap::set_alarm_code(::google::protobuf::uint32 value) {
  set_has_alarm_code();
  alarm_code_ = value;
}

// optional bool alarm_state = 2;
inline bool TAlarmTrap::has_alarm_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAlarmTrap::set_has_alarm_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAlarmTrap::clear_has_alarm_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAlarmTrap::clear_alarm_state() {
  alarm_state_ = false;
  clear_has_alarm_state();
}
inline bool TAlarmTrap::alarm_state() const {
  return alarm_state_;
}
inline void TAlarmTrap::set_alarm_state(bool value) {
  set_has_alarm_state();
  alarm_state_ = value;
}

// -------------------------------------------------------------------

// TExceptionFileReportData

// optional string exception_time = 1;
inline bool TExceptionFileReportData::has_exception_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TExceptionFileReportData::set_has_exception_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TExceptionFileReportData::clear_has_exception_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TExceptionFileReportData::clear_exception_time() {
  if (exception_time_ != &::google::protobuf::internal::kEmptyString) {
    exception_time_->clear();
  }
  clear_has_exception_time();
}
inline const ::std::string& TExceptionFileReportData::exception_time() const {
  return *exception_time_;
}
inline void TExceptionFileReportData::set_exception_time(const ::std::string& value) {
  set_has_exception_time();
  if (exception_time_ == &::google::protobuf::internal::kEmptyString) {
    exception_time_ = new ::std::string;
  }
  exception_time_->assign(value);
}
inline void TExceptionFileReportData::set_exception_time(const char* value) {
  set_has_exception_time();
  if (exception_time_ == &::google::protobuf::internal::kEmptyString) {
    exception_time_ = new ::std::string;
  }
  exception_time_->assign(value);
}
inline void TExceptionFileReportData::set_exception_time(const char* value, size_t size) {
  set_has_exception_time();
  if (exception_time_ == &::google::protobuf::internal::kEmptyString) {
    exception_time_ = new ::std::string;
  }
  exception_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TExceptionFileReportData::mutable_exception_time() {
  set_has_exception_time();
  if (exception_time_ == &::google::protobuf::internal::kEmptyString) {
    exception_time_ = new ::std::string;
  }
  return exception_time_;
}
inline ::std::string* TExceptionFileReportData::release_exception_time() {
  clear_has_exception_time();
  if (exception_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = exception_time_;
    exception_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TExceptionFileReportData::set_allocated_exception_time(::std::string* exception_time) {
  if (exception_time_ != &::google::protobuf::internal::kEmptyString) {
    delete exception_time_;
  }
  if (exception_time) {
    set_has_exception_time();
    exception_time_ = exception_time;
  } else {
    clear_has_exception_time();
    exception_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string exception_ver = 2;
inline bool TExceptionFileReportData::has_exception_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TExceptionFileReportData::set_has_exception_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TExceptionFileReportData::clear_has_exception_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TExceptionFileReportData::clear_exception_ver() {
  if (exception_ver_ != &::google::protobuf::internal::kEmptyString) {
    exception_ver_->clear();
  }
  clear_has_exception_ver();
}
inline const ::std::string& TExceptionFileReportData::exception_ver() const {
  return *exception_ver_;
}
inline void TExceptionFileReportData::set_exception_ver(const ::std::string& value) {
  set_has_exception_ver();
  if (exception_ver_ == &::google::protobuf::internal::kEmptyString) {
    exception_ver_ = new ::std::string;
  }
  exception_ver_->assign(value);
}
inline void TExceptionFileReportData::set_exception_ver(const char* value) {
  set_has_exception_ver();
  if (exception_ver_ == &::google::protobuf::internal::kEmptyString) {
    exception_ver_ = new ::std::string;
  }
  exception_ver_->assign(value);
}
inline void TExceptionFileReportData::set_exception_ver(const char* value, size_t size) {
  set_has_exception_ver();
  if (exception_ver_ == &::google::protobuf::internal::kEmptyString) {
    exception_ver_ = new ::std::string;
  }
  exception_ver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TExceptionFileReportData::mutable_exception_ver() {
  set_has_exception_ver();
  if (exception_ver_ == &::google::protobuf::internal::kEmptyString) {
    exception_ver_ = new ::std::string;
  }
  return exception_ver_;
}
inline ::std::string* TExceptionFileReportData::release_exception_ver() {
  clear_has_exception_ver();
  if (exception_ver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = exception_ver_;
    exception_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TExceptionFileReportData::set_allocated_exception_ver(::std::string* exception_ver) {
  if (exception_ver_ != &::google::protobuf::internal::kEmptyString) {
    delete exception_ver_;
  }
  if (exception_ver) {
    set_has_exception_ver();
    exception_ver_ = exception_ver;
  } else {
    clear_has_exception_ver();
    exception_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string exception_log = 3;
inline bool TExceptionFileReportData::has_exception_log() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TExceptionFileReportData::set_has_exception_log() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TExceptionFileReportData::clear_has_exception_log() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TExceptionFileReportData::clear_exception_log() {
  if (exception_log_ != &::google::protobuf::internal::kEmptyString) {
    exception_log_->clear();
  }
  clear_has_exception_log();
}
inline const ::std::string& TExceptionFileReportData::exception_log() const {
  return *exception_log_;
}
inline void TExceptionFileReportData::set_exception_log(const ::std::string& value) {
  set_has_exception_log();
  if (exception_log_ == &::google::protobuf::internal::kEmptyString) {
    exception_log_ = new ::std::string;
  }
  exception_log_->assign(value);
}
inline void TExceptionFileReportData::set_exception_log(const char* value) {
  set_has_exception_log();
  if (exception_log_ == &::google::protobuf::internal::kEmptyString) {
    exception_log_ = new ::std::string;
  }
  exception_log_->assign(value);
}
inline void TExceptionFileReportData::set_exception_log(const char* value, size_t size) {
  set_has_exception_log();
  if (exception_log_ == &::google::protobuf::internal::kEmptyString) {
    exception_log_ = new ::std::string;
  }
  exception_log_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TExceptionFileReportData::mutable_exception_log() {
  set_has_exception_log();
  if (exception_log_ == &::google::protobuf::internal::kEmptyString) {
    exception_log_ = new ::std::string;
  }
  return exception_log_;
}
inline ::std::string* TExceptionFileReportData::release_exception_log() {
  clear_has_exception_log();
  if (exception_log_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = exception_log_;
    exception_log_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TExceptionFileReportData::set_allocated_exception_log(::std::string* exception_log) {
  if (exception_log_ != &::google::protobuf::internal::kEmptyString) {
    delete exception_log_;
  }
  if (exception_log) {
    set_has_exception_log();
    exception_log_ = exception_log;
  } else {
    clear_has_exception_log();
    exception_log_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TAgentConfStatus

// optional .mt.EmMtCallState conf_status = 1;
inline bool TAgentConfStatus::has_conf_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAgentConfStatus::set_has_conf_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAgentConfStatus::clear_has_conf_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAgentConfStatus::clear_conf_status() {
  conf_status_ = 0;
  clear_has_conf_status();
}
inline ::mt::EmMtCallState TAgentConfStatus::conf_status() const {
  return static_cast< ::mt::EmMtCallState >(conf_status_);
}
inline void TAgentConfStatus::set_conf_status(::mt::EmMtCallState value) {
  assert(::mt::EmMtCallState_IsValid(value));
  set_has_conf_status();
  conf_status_ = value;
}

// optional string mt_e164 = 2;
inline bool TAgentConfStatus::has_mt_e164() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAgentConfStatus::set_has_mt_e164() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAgentConfStatus::clear_has_mt_e164() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAgentConfStatus::clear_mt_e164() {
  if (mt_e164_ != &::google::protobuf::internal::kEmptyString) {
    mt_e164_->clear();
  }
  clear_has_mt_e164();
}
inline const ::std::string& TAgentConfStatus::mt_e164() const {
  return *mt_e164_;
}
inline void TAgentConfStatus::set_mt_e164(const ::std::string& value) {
  set_has_mt_e164();
  if (mt_e164_ == &::google::protobuf::internal::kEmptyString) {
    mt_e164_ = new ::std::string;
  }
  mt_e164_->assign(value);
}
inline void TAgentConfStatus::set_mt_e164(const char* value) {
  set_has_mt_e164();
  if (mt_e164_ == &::google::protobuf::internal::kEmptyString) {
    mt_e164_ = new ::std::string;
  }
  mt_e164_->assign(value);
}
inline void TAgentConfStatus::set_mt_e164(const char* value, size_t size) {
  set_has_mt_e164();
  if (mt_e164_ == &::google::protobuf::internal::kEmptyString) {
    mt_e164_ = new ::std::string;
  }
  mt_e164_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TAgentConfStatus::mutable_mt_e164() {
  set_has_mt_e164();
  if (mt_e164_ == &::google::protobuf::internal::kEmptyString) {
    mt_e164_ = new ::std::string;
  }
  return mt_e164_;
}
inline ::std::string* TAgentConfStatus::release_mt_e164() {
  clear_has_mt_e164();
  if (mt_e164_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mt_e164_;
    mt_e164_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TAgentConfStatus::set_allocated_mt_e164(::std::string* mt_e164) {
  if (mt_e164_ != &::google::protobuf::internal::kEmptyString) {
    delete mt_e164_;
  }
  if (mt_e164) {
    set_has_mt_e164();
    mt_e164_ = mt_e164;
  } else {
    clear_has_mt_e164();
    mt_e164_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string conf_e164 = 3;
inline bool TAgentConfStatus::has_conf_e164() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAgentConfStatus::set_has_conf_e164() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAgentConfStatus::clear_has_conf_e164() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAgentConfStatus::clear_conf_e164() {
  if (conf_e164_ != &::google::protobuf::internal::kEmptyString) {
    conf_e164_->clear();
  }
  clear_has_conf_e164();
}
inline const ::std::string& TAgentConfStatus::conf_e164() const {
  return *conf_e164_;
}
inline void TAgentConfStatus::set_conf_e164(const ::std::string& value) {
  set_has_conf_e164();
  if (conf_e164_ == &::google::protobuf::internal::kEmptyString) {
    conf_e164_ = new ::std::string;
  }
  conf_e164_->assign(value);
}
inline void TAgentConfStatus::set_conf_e164(const char* value) {
  set_has_conf_e164();
  if (conf_e164_ == &::google::protobuf::internal::kEmptyString) {
    conf_e164_ = new ::std::string;
  }
  conf_e164_->assign(value);
}
inline void TAgentConfStatus::set_conf_e164(const char* value, size_t size) {
  set_has_conf_e164();
  if (conf_e164_ == &::google::protobuf::internal::kEmptyString) {
    conf_e164_ = new ::std::string;
  }
  conf_e164_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TAgentConfStatus::mutable_conf_e164() {
  set_has_conf_e164();
  if (conf_e164_ == &::google::protobuf::internal::kEmptyString) {
    conf_e164_ = new ::std::string;
  }
  return conf_e164_;
}
inline ::std::string* TAgentConfStatus::release_conf_e164() {
  clear_has_conf_e164();
  if (conf_e164_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = conf_e164_;
    conf_e164_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TAgentConfStatus::set_allocated_conf_e164(::std::string* conf_e164) {
  if (conf_e164_ != &::google::protobuf::internal::kEmptyString) {
    delete conf_e164_;
  }
  if (conf_e164) {
    set_has_conf_e164();
    conf_e164_ = conf_e164;
  } else {
    clear_has_conf_e164();
    conf_e164_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 bitrate = 4;
inline bool TAgentConfStatus::has_bitrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAgentConfStatus::set_has_bitrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAgentConfStatus::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAgentConfStatus::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 TAgentConfStatus::bitrate() const {
  return bitrate_;
}
inline void TAgentConfStatus::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
}

// -------------------------------------------------------------------

// TAgentAudEncStatistic

// optional uint32 index = 1;
inline bool TAgentAudEncStatistic::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAgentAudEncStatistic::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAgentAudEncStatistic::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAgentAudEncStatistic::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TAgentAudEncStatistic::index() const {
  return index_;
}
inline void TAgentAudEncStatistic::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional uint32 bitrate = 2;
inline bool TAgentAudEncStatistic::has_bitrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAgentAudEncStatistic::set_has_bitrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAgentAudEncStatistic::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAgentAudEncStatistic::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 TAgentAudEncStatistic::bitrate() const {
  return bitrate_;
}
inline void TAgentAudEncStatistic::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
}

// optional uint32 format = 3;
inline bool TAgentAudEncStatistic::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAgentAudEncStatistic::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAgentAudEncStatistic::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAgentAudEncStatistic::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 TAgentAudEncStatistic::format() const {
  return format_;
}
inline void TAgentAudEncStatistic::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
}

// -------------------------------------------------------------------

// TAgentAudDecStatistic

// optional uint32 index = 1;
inline bool TAgentAudDecStatistic::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAgentAudDecStatistic::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAgentAudDecStatistic::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAgentAudDecStatistic::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TAgentAudDecStatistic::index() const {
  return index_;
}
inline void TAgentAudDecStatistic::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional uint32 pkts_lose = 2;
inline bool TAgentAudDecStatistic::has_pkts_lose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAgentAudDecStatistic::set_has_pkts_lose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAgentAudDecStatistic::clear_has_pkts_lose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAgentAudDecStatistic::clear_pkts_lose() {
  pkts_lose_ = 0u;
  clear_has_pkts_lose();
}
inline ::google::protobuf::uint32 TAgentAudDecStatistic::pkts_lose() const {
  return pkts_lose_;
}
inline void TAgentAudDecStatistic::set_pkts_lose(::google::protobuf::uint32 value) {
  set_has_pkts_lose();
  pkts_lose_ = value;
}

// optional uint32 pkts_loserate = 3;
inline bool TAgentAudDecStatistic::has_pkts_loserate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAgentAudDecStatistic::set_has_pkts_loserate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAgentAudDecStatistic::clear_has_pkts_loserate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAgentAudDecStatistic::clear_pkts_loserate() {
  pkts_loserate_ = 0u;
  clear_has_pkts_loserate();
}
inline ::google::protobuf::uint32 TAgentAudDecStatistic::pkts_loserate() const {
  return pkts_loserate_;
}
inline void TAgentAudDecStatistic::set_pkts_loserate(::google::protobuf::uint32 value) {
  set_has_pkts_loserate();
  pkts_loserate_ = value;
}

// optional uint32 bitrate = 4;
inline bool TAgentAudDecStatistic::has_bitrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAgentAudDecStatistic::set_has_bitrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAgentAudDecStatistic::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAgentAudDecStatistic::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 TAgentAudDecStatistic::bitrate() const {
  return bitrate_;
}
inline void TAgentAudDecStatistic::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
}

// optional uint32 format = 5;
inline bool TAgentAudDecStatistic::has_format() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAgentAudDecStatistic::set_has_format() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAgentAudDecStatistic::clear_has_format() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAgentAudDecStatistic::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 TAgentAudDecStatistic::format() const {
  return format_;
}
inline void TAgentAudDecStatistic::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
}

// -------------------------------------------------------------------

// TAgentVidEncStatistic

// optional uint32 index = 1;
inline bool TAgentVidEncStatistic::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAgentVidEncStatistic::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAgentVidEncStatistic::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAgentVidEncStatistic::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TAgentVidEncStatistic::index() const {
  return index_;
}
inline void TAgentVidEncStatistic::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional bool video_resource_exist = 2;
inline bool TAgentVidEncStatistic::has_video_resource_exist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAgentVidEncStatistic::set_has_video_resource_exist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAgentVidEncStatistic::clear_has_video_resource_exist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAgentVidEncStatistic::clear_video_resource_exist() {
  video_resource_exist_ = false;
  clear_has_video_resource_exist();
}
inline bool TAgentVidEncStatistic::video_resource_exist() const {
  return video_resource_exist_;
}
inline void TAgentVidEncStatistic::set_video_resource_exist(bool value) {
  set_has_video_resource_exist();
  video_resource_exist_ = value;
}

// optional uint32 framerate = 3;
inline bool TAgentVidEncStatistic::has_framerate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAgentVidEncStatistic::set_has_framerate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAgentVidEncStatistic::clear_has_framerate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAgentVidEncStatistic::clear_framerate() {
  framerate_ = 0u;
  clear_has_framerate();
}
inline ::google::protobuf::uint32 TAgentVidEncStatistic::framerate() const {
  return framerate_;
}
inline void TAgentVidEncStatistic::set_framerate(::google::protobuf::uint32 value) {
  set_has_framerate();
  framerate_ = value;
}

// optional uint32 bitrate = 4;
inline bool TAgentVidEncStatistic::has_bitrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAgentVidEncStatistic::set_has_bitrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAgentVidEncStatistic::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAgentVidEncStatistic::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 TAgentVidEncStatistic::bitrate() const {
  return bitrate_;
}
inline void TAgentVidEncStatistic::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
}

// optional uint32 format = 5;
inline bool TAgentVidEncStatistic::has_format() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAgentVidEncStatistic::set_has_format() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAgentVidEncStatistic::clear_has_format() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAgentVidEncStatistic::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 TAgentVidEncStatistic::format() const {
  return format_;
}
inline void TAgentVidEncStatistic::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
}

// optional uint32 resolution = 6;
inline bool TAgentVidEncStatistic::has_resolution() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAgentVidEncStatistic::set_has_resolution() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAgentVidEncStatistic::clear_has_resolution() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAgentVidEncStatistic::clear_resolution() {
  resolution_ = 0u;
  clear_has_resolution();
}
inline ::google::protobuf::uint32 TAgentVidEncStatistic::resolution() const {
  return resolution_;
}
inline void TAgentVidEncStatistic::set_resolution(::google::protobuf::uint32 value) {
  set_has_resolution();
  resolution_ = value;
}

// -------------------------------------------------------------------

// TAgentVidDecStatistic

// optional uint32 index = 1;
inline bool TAgentVidDecStatistic::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAgentVidDecStatistic::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAgentVidDecStatistic::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAgentVidDecStatistic::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::index() const {
  return index_;
}
inline void TAgentVidDecStatistic::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional uint32 framerate = 2;
inline bool TAgentVidDecStatistic::has_framerate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAgentVidDecStatistic::set_has_framerate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAgentVidDecStatistic::clear_has_framerate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAgentVidDecStatistic::clear_framerate() {
  framerate_ = 0u;
  clear_has_framerate();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::framerate() const {
  return framerate_;
}
inline void TAgentVidDecStatistic::set_framerate(::google::protobuf::uint32 value) {
  set_has_framerate();
  framerate_ = value;
}

// optional uint32 pkts_lose = 3;
inline bool TAgentVidDecStatistic::has_pkts_lose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAgentVidDecStatistic::set_has_pkts_lose() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAgentVidDecStatistic::clear_has_pkts_lose() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAgentVidDecStatistic::clear_pkts_lose() {
  pkts_lose_ = 0u;
  clear_has_pkts_lose();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::pkts_lose() const {
  return pkts_lose_;
}
inline void TAgentVidDecStatistic::set_pkts_lose(::google::protobuf::uint32 value) {
  set_has_pkts_lose();
  pkts_lose_ = value;
}

// optional uint32 pkts_loserate = 4;
inline bool TAgentVidDecStatistic::has_pkts_loserate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAgentVidDecStatistic::set_has_pkts_loserate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAgentVidDecStatistic::clear_has_pkts_loserate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAgentVidDecStatistic::clear_pkts_loserate() {
  pkts_loserate_ = 0u;
  clear_has_pkts_loserate();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::pkts_loserate() const {
  return pkts_loserate_;
}
inline void TAgentVidDecStatistic::set_pkts_loserate(::google::protobuf::uint32 value) {
  set_has_pkts_loserate();
  pkts_loserate_ = value;
}

// optional uint32 bitrate = 5;
inline bool TAgentVidDecStatistic::has_bitrate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAgentVidDecStatistic::set_has_bitrate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAgentVidDecStatistic::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAgentVidDecStatistic::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::bitrate() const {
  return bitrate_;
}
inline void TAgentVidDecStatistic::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
}

// optional uint32 format = 6;
inline bool TAgentVidDecStatistic::has_format() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAgentVidDecStatistic::set_has_format() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAgentVidDecStatistic::clear_has_format() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAgentVidDecStatistic::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::format() const {
  return format_;
}
inline void TAgentVidDecStatistic::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
}

// optional uint32 resolution = 7;
inline bool TAgentVidDecStatistic::has_resolution() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAgentVidDecStatistic::set_has_resolution() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAgentVidDecStatistic::clear_has_resolution() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAgentVidDecStatistic::clear_resolution() {
  resolution_ = 0u;
  clear_has_resolution();
}
inline ::google::protobuf::uint32 TAgentVidDecStatistic::resolution() const {
  return resolution_;
}
inline void TAgentVidDecStatistic::set_resolution(::google::protobuf::uint32 value) {
  set_has_resolution();
  resolution_ = value;
}

// -------------------------------------------------------------------

// TAgentCodecStatistic

// repeated .mt.TAgentAudEncStatistic audenc_statics = 1;
inline int TAgentCodecStatistic::audenc_statics_size() const {
  return audenc_statics_.size();
}
inline void TAgentCodecStatistic::clear_audenc_statics() {
  audenc_statics_.Clear();
}
inline const ::mt::TAgentAudEncStatistic& TAgentCodecStatistic::audenc_statics(int index) const {
  return audenc_statics_.Get(index);
}
inline ::mt::TAgentAudEncStatistic* TAgentCodecStatistic::mutable_audenc_statics(int index) {
  return audenc_statics_.Mutable(index);
}
inline ::mt::TAgentAudEncStatistic* TAgentCodecStatistic::add_audenc_statics() {
  return audenc_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudEncStatistic >&
TAgentCodecStatistic::audenc_statics() const {
  return audenc_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudEncStatistic >*
TAgentCodecStatistic::mutable_audenc_statics() {
  return &audenc_statics_;
}

// repeated .mt.TAgentAudDecStatistic auddec_statics = 2;
inline int TAgentCodecStatistic::auddec_statics_size() const {
  return auddec_statics_.size();
}
inline void TAgentCodecStatistic::clear_auddec_statics() {
  auddec_statics_.Clear();
}
inline const ::mt::TAgentAudDecStatistic& TAgentCodecStatistic::auddec_statics(int index) const {
  return auddec_statics_.Get(index);
}
inline ::mt::TAgentAudDecStatistic* TAgentCodecStatistic::mutable_auddec_statics(int index) {
  return auddec_statics_.Mutable(index);
}
inline ::mt::TAgentAudDecStatistic* TAgentCodecStatistic::add_auddec_statics() {
  return auddec_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudDecStatistic >&
TAgentCodecStatistic::auddec_statics() const {
  return auddec_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentAudDecStatistic >*
TAgentCodecStatistic::mutable_auddec_statics() {
  return &auddec_statics_;
}

// repeated .mt.TAgentVidEncStatistic pri_videnc_statics = 3;
inline int TAgentCodecStatistic::pri_videnc_statics_size() const {
  return pri_videnc_statics_.size();
}
inline void TAgentCodecStatistic::clear_pri_videnc_statics() {
  pri_videnc_statics_.Clear();
}
inline const ::mt::TAgentVidEncStatistic& TAgentCodecStatistic::pri_videnc_statics(int index) const {
  return pri_videnc_statics_.Get(index);
}
inline ::mt::TAgentVidEncStatistic* TAgentCodecStatistic::mutable_pri_videnc_statics(int index) {
  return pri_videnc_statics_.Mutable(index);
}
inline ::mt::TAgentVidEncStatistic* TAgentCodecStatistic::add_pri_videnc_statics() {
  return pri_videnc_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >&
TAgentCodecStatistic::pri_videnc_statics() const {
  return pri_videnc_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >*
TAgentCodecStatistic::mutable_pri_videnc_statics() {
  return &pri_videnc_statics_;
}

// repeated .mt.TAgentVidDecStatistic pri_viddec_statics = 4;
inline int TAgentCodecStatistic::pri_viddec_statics_size() const {
  return pri_viddec_statics_.size();
}
inline void TAgentCodecStatistic::clear_pri_viddec_statics() {
  pri_viddec_statics_.Clear();
}
inline const ::mt::TAgentVidDecStatistic& TAgentCodecStatistic::pri_viddec_statics(int index) const {
  return pri_viddec_statics_.Get(index);
}
inline ::mt::TAgentVidDecStatistic* TAgentCodecStatistic::mutable_pri_viddec_statics(int index) {
  return pri_viddec_statics_.Mutable(index);
}
inline ::mt::TAgentVidDecStatistic* TAgentCodecStatistic::add_pri_viddec_statics() {
  return pri_viddec_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >&
TAgentCodecStatistic::pri_viddec_statics() const {
  return pri_viddec_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >*
TAgentCodecStatistic::mutable_pri_viddec_statics() {
  return &pri_viddec_statics_;
}

// repeated .mt.TAgentVidEncStatistic ass_videnc_statics = 5;
inline int TAgentCodecStatistic::ass_videnc_statics_size() const {
  return ass_videnc_statics_.size();
}
inline void TAgentCodecStatistic::clear_ass_videnc_statics() {
  ass_videnc_statics_.Clear();
}
inline const ::mt::TAgentVidEncStatistic& TAgentCodecStatistic::ass_videnc_statics(int index) const {
  return ass_videnc_statics_.Get(index);
}
inline ::mt::TAgentVidEncStatistic* TAgentCodecStatistic::mutable_ass_videnc_statics(int index) {
  return ass_videnc_statics_.Mutable(index);
}
inline ::mt::TAgentVidEncStatistic* TAgentCodecStatistic::add_ass_videnc_statics() {
  return ass_videnc_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >&
TAgentCodecStatistic::ass_videnc_statics() const {
  return ass_videnc_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidEncStatistic >*
TAgentCodecStatistic::mutable_ass_videnc_statics() {
  return &ass_videnc_statics_;
}

// repeated .mt.TAgentVidDecStatistic ass_viddec_statics = 6;
inline int TAgentCodecStatistic::ass_viddec_statics_size() const {
  return ass_viddec_statics_.size();
}
inline void TAgentCodecStatistic::clear_ass_viddec_statics() {
  ass_viddec_statics_.Clear();
}
inline const ::mt::TAgentVidDecStatistic& TAgentCodecStatistic::ass_viddec_statics(int index) const {
  return ass_viddec_statics_.Get(index);
}
inline ::mt::TAgentVidDecStatistic* TAgentCodecStatistic::mutable_ass_viddec_statics(int index) {
  return ass_viddec_statics_.Mutable(index);
}
inline ::mt::TAgentVidDecStatistic* TAgentCodecStatistic::add_ass_viddec_statics() {
  return ass_viddec_statics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >&
TAgentCodecStatistic::ass_viddec_statics() const {
  return ass_viddec_statics_;
}
inline ::google::protobuf::RepeatedPtrField< ::mt::TAgentVidDecStatistic >*
TAgentCodecStatistic::mutable_ass_viddec_statics() {
  return &ass_viddec_statics_;
}

// -------------------------------------------------------------------

// TMtPfmInfo

// optional uint32 cpu_userate = 1;
inline bool TMtPfmInfo::has_cpu_userate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMtPfmInfo::set_has_cpu_userate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMtPfmInfo::clear_has_cpu_userate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMtPfmInfo::clear_cpu_userate() {
  cpu_userate_ = 0u;
  clear_has_cpu_userate();
}
inline ::google::protobuf::uint32 TMtPfmInfo::cpu_userate() const {
  return cpu_userate_;
}
inline void TMtPfmInfo::set_cpu_userate(::google::protobuf::uint32 value) {
  set_has_cpu_userate();
  cpu_userate_ = value;
}

// optional uint32 disk_userate = 2;
inline bool TMtPfmInfo::has_disk_userate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMtPfmInfo::set_has_disk_userate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMtPfmInfo::clear_has_disk_userate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMtPfmInfo::clear_disk_userate() {
  disk_userate_ = 0u;
  clear_has_disk_userate();
}
inline ::google::protobuf::uint32 TMtPfmInfo::disk_userate() const {
  return disk_userate_;
}
inline void TMtPfmInfo::set_disk_userate(::google::protobuf::uint32 value) {
  set_has_disk_userate();
  disk_userate_ = value;
}

// optional uint32 mem_userate = 3;
inline bool TMtPfmInfo::has_mem_userate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TMtPfmInfo::set_has_mem_userate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TMtPfmInfo::clear_has_mem_userate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TMtPfmInfo::clear_mem_userate() {
  mem_userate_ = 0u;
  clear_has_mem_userate();
}
inline ::google::protobuf::uint32 TMtPfmInfo::mem_userate() const {
  return mem_userate_;
}
inline void TMtPfmInfo::set_mem_userate(::google::protobuf::uint32 value) {
  set_has_mem_userate();
  mem_userate_ = value;
}

// -------------------------------------------------------------------

// TMTAgentPackFileState

// optional .mt.EmAgentPackFileState emPackState = 1;
inline bool TMTAgentPackFileState::has_empackstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMTAgentPackFileState::set_has_empackstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMTAgentPackFileState::clear_has_empackstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMTAgentPackFileState::clear_empackstate() {
  empackstate_ = 0;
  clear_has_empackstate();
}
inline ::mt::EmAgentPackFileState TMTAgentPackFileState::empackstate() const {
  return static_cast< ::mt::EmAgentPackFileState >(empackstate_);
}
inline void TMTAgentPackFileState::set_empackstate(::mt::EmAgentPackFileState value) {
  assert(::mt::EmAgentPackFileState_IsValid(value));
  set_has_empackstate();
  empackstate_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mt

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_structagent_2eproto__INCLUDED
