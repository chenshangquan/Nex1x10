#ifndef _MTBLLSYSCTRLMSG_H_
#define _MTBLLSYSCTRLMSG_H_

#include "mtmsgid.h"

#if !defined(_MESSAGE_HELP_)
enum EmBLLMtSysCtrlMsg
{
    EV_BLL_BGN(MTSYSCTRL) = EVSEG_BLL_SYSCTRL_BGN,
#endif

	/**********************************************************************************
	* < 绑定子系统（可一次绑定多个）>
	* ----------------------------------------------------------
	* 参数：TMutiTServiceInfo：多个TServiceInfo信息
	* ----------------------------------------------------------
	* 其中TServiceInfo的结构包括：
	* uint32 index：						索引号
	* uint32 mtaid：						每个子系统代表的MTAID号
	* string path：						子系统库的完整路径
	* string sysalias：					子系统别名
	* EmMtSysStartMod startmod：			子系统启动方式（静态库加载/动态库加载/进程加载）
	* string srtfuncname：				启动函数名称
	* string endfuncname：				结束函数名称
	* EmMtSysSrvState srvstate：			子系统状态（空闲/是否绑定/运行/停止/异常）
	* EmMtSysKeepLiveState srvklstate：	子系统存活状态（准备就绪/存活/异常）
	* uint32 time：						子系统心跳检测频率
	* uint32 timestamp：					用于检测心跳的时间戳
	* uint32 dllhandler：				加载动态库创建的句柄，用于销毁
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
    MESSAGE(Ev_MT_BLL_SrvBind_Cmd)
	BODY(mt::TMutiTServiceInfo, MutiTServiceInfo)


	/**********************************************************************************
	* < 解除绑定子系统（可一次解绑多个）>
	* ----------------------------------------------------------
	* 参数：TMutiStr：多个string信息
	* string：		子系统绑定的别名，即TServiceInfo中的sysalias
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvUnBind_Cmd)
	BODY(mt::TMultiStr, Alias)


	/**********************************************************************************
	* < 启动子系统（一次只可启动一个）>
	* ----------------------------------------------------------
	* 参数：TString：	子系统绑定的别名，即TServiceInfo中的sysalias
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvStart_Cmd)
	BODY(mt::TString, Alias)


	/**********************************************************************************
	* < 启动子系统的结果上报 >
	* ----------------------------------------------------------
	* 参数：TBOOL32：			是否启动成功
	*       TSrvKeepLiveInfo：	若成功，则保存了当前子系统的一些信息。
	* ----------------------------------------------------------
	* 其中TSrvKeepLiveInfo的结构包含：
	* string sysalias：			子系统绑定的别名，即TServiceInfo中的sysalias
	* uint32 mtaid：				子系统绑定的MTAID号
	* uint32 time：				子系统的心跳频率
	* ----------------------------------------------------------
	* 发送方向：各个子系统 -> mtsysctrl -> mtsdk（看界面需要，是否需要发送到mtsdk）
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvStartResult_Ntf)
	BODY(mt::TBOOL32, SrvStartRlt)
	BODY(mt::TSrvKeepLiveInfo, SrvKeepLiveInfo)


	/**********************************************************************************
	* < 结束子系统（一次只可结束一个）>
	* ----------------------------------------------------------
	* 参数：TString：	子系统绑定的别名，即TServiceInfo中的sysalias
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvEnd_Cmd)
	BODY(mt::TString, Alias)


	/**********************************************************************************
	* < 结束子系统的结果上报>
	* ----------------------------------------------------------
	* 参数：TBOOL32：			是否启动成功
	* 参数：TU32：				子系统绑定的Mtaid，即TServiceInfo中的Mtaid
	* ----------------------------------------------------------
	* 发送方向：各个子系统 -> mtsysctrl -> mtsdk（看界面需要，是否需要发送到mtsdk）
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvEndtResult_Ntf)
	BODY(mt::TBOOL32, SrvEndRlt)
	BODY(mt::TU32, Mtaid)


	/**********************************************************************************
	* < 子系统心跳刷新>
	* ----------------------------------------------------------
	* 参数：	TU32：				MtAid号
	* ----------------------------------------------------------
	* 发送方向：各个子系统 -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvKeepAlive_Ntf)  


	/**********************************************************************************
	* < 获取默认映射表内容 >
	* ----------------------------------------------------------
	* 参数：						无
	* ----------------------------------------------------------
	* 发送方向：暂时未定
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_GetDataShareSrvCmd)	


	/**********************************************************************************
	* < 添加默认映射表绑定的子系统（可一次增加多个）>
	* ----------------------------------------------------------
	* 参数：TMutiTServiceDefInfo：多个TServiceDefInfo信息
	* ----------------------------------------------------------
	* 其中TServiceDefInfo的结构包括：
	* uint32 index：						索引号
	* string path：						子系统库的完整路径
	* string sysalias：					子系统别名
	* EmMtSysStartMod startmod：			子系统启动方式（静态库加载/动态库加载/进程加载）
	* string srtfuncname：				启动函数名称
	* string endfuncname：				结束函数名称
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvAddSrvDefListCmd)
	BODY(mt::TMutiTServiceDefInfo, tMutiTServiceDefInfo)


	/**********************************************************************************
	* < 修改默认映射表绑定的子系统（可一次修改多个，根据别名/路径来判别修改项）>
	* ----------------------------------------------------------
	* 参数：TMutiTServiceDefInfo：多个TServiceDefInfo信息
	* ----------------------------------------------------------
	* 其中TServiceDefInfo的结构包括：
	* uint32 index：						索引号
	* string path：						子系统库的完整路径
	* string sysalias：					子系统别名
	* EmMtSysStartMod startmod：			子系统启动方式（静态库加载/动态库加载/进程加载）
	* string srtfuncname：				启动函数名称
	* string endfuncname：				结束函数名称
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvModifySrvDefListCmd)
	BODY(mt::TMutiTServiceDefInfo, tMutiTServiceDefInfo)


	/**********************************************************************************
	* < 删除默认映射表绑定的子系统（一次只可删除一项）>
	* ----------------------------------------------------------
	* 参数：TString：	子系统绑定的别名，即TServiceDefInfo中的sysalias
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtsysctrl
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_SrvDelSrvDefListCmd)
	BODY(mt::TString, MutiAlias)

	/**********************************************************************************
	* < 注册一个需要检测的模块>
	* ----------------------------------------------------------
	* 参数：TServiceInfo：	
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtservice
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_ThreadDetectRegCmd)
	BODY(mt::TServiceInfo, tServiceInfo)

	/**********************************************************************************
	* < 更新一个已注册模块的信息>
	* ----------------------------------------------------------
	* 参数：TServiceInfo：	
	* ----------------------------------------------------------
	* 发送方向：mtsdk -> mtservice
	* ******************************************************************************** */ 
	MESSAGE(Ev_MT_BLL_ThreadDetectUpdateCmd)
	BODY(mt::TU32, dwAppId)


 #if !defined(_MESSAGE_HELP_)
     EV_BLL_END(MTSYSCTRL) = EVSEG_BLL_SYSCTRL_END
};
#endif

#define Is_BLL_MtSysCtrl_Msg(m) ((m) >= EV_BLL_BGN(MTSYSCTRL) && (m) <= EV_BLL_END(MTSYSCTRL))

#endif