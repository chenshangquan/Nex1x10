// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structnet.proto

package com.kedacom.mt.netmanage.protobuf;

public final class NetManagePB {
  private NetManagePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TEthnetWorkModeListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmEthnetWorkMode card1_workmode = 1;
    /**
     * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
     *
     * <pre>
     *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    boolean hasCard1Workmode();
    /**
     * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
     *
     * <pre>
     *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard1Workmode();

    // optional .mt.EmEthnetWorkMode card2_workmode = 2;
    /**
     * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
     *
     * <pre>
     *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    boolean hasCard2Workmode();
    /**
     * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
     *
     * <pre>
     *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard2Workmode();
  }
  /**
   * Protobuf type {@code mt.TEthnetWorkModeList}
   *
   * <pre>
   ** Ethnet 以太网模式列表
   * </pre>
   */
  public static final class TEthnetWorkModeList extends
      com.google.protobuf.GeneratedMessage
      implements TEthnetWorkModeListOrBuilder {
    // Use TEthnetWorkModeList.newBuilder() to construct.
    private TEthnetWorkModeList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TEthnetWorkModeList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TEthnetWorkModeList defaultInstance;
    public static TEthnetWorkModeList getDefaultInstance() {
      return defaultInstance;
    }

    public TEthnetWorkModeList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TEthnetWorkModeList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                card1Workmode_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                card2Workmode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetWorkModeList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetWorkModeList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.Builder.class);
    }

    public static com.google.protobuf.Parser<TEthnetWorkModeList> PARSER =
        new com.google.protobuf.AbstractParser<TEthnetWorkModeList>() {
      public TEthnetWorkModeList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEthnetWorkModeList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TEthnetWorkModeList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmEthnetWorkMode card1_workmode = 1;
    public static final int CARD1_WORKMODE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode card1Workmode_;
    /**
     * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
     *
     * <pre>
     *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    public boolean hasCard1Workmode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
     *
     * <pre>
     *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard1Workmode() {
      return card1Workmode_;
    }

    // optional .mt.EmEthnetWorkMode card2_workmode = 2;
    public static final int CARD2_WORKMODE_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode card2Workmode_;
    /**
     * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
     *
     * <pre>
     *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    public boolean hasCard2Workmode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
     *
     * <pre>
     *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard2Workmode() {
      return card2Workmode_;
    }

    private void initFields() {
      card1Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
      card2Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, card1Workmode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, card2Workmode_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, card1Workmode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, card2Workmode_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TEthnetWorkModeList}
     *
     * <pre>
     ** Ethnet 以太网模式列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetWorkModeList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetWorkModeList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card1Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
        bitField0_ = (bitField0_ & ~0x00000001);
        card2Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetWorkModeList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card1Workmode_ = card1Workmode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.card2Workmode_ = card2Workmode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList.getDefaultInstance()) return this;
        if (other.hasCard1Workmode()) {
          setCard1Workmode(other.getCard1Workmode());
        }
        if (other.hasCard2Workmode()) {
          setCard2Workmode(other.getCard2Workmode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetWorkModeList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmEthnetWorkMode card1_workmode = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode card1Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
      /**
       * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
       *
       * <pre>
       *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public boolean hasCard1Workmode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
       *
       * <pre>
       *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard1Workmode() {
        return card1Workmode_;
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
       *
       * <pre>
       *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public Builder setCard1Workmode(com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        card1Workmode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card1_workmode = 1;</code>
       *
       * <pre>
       *(网卡1模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public Builder clearCard1Workmode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card1Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
        onChanged();
        return this;
      }

      // optional .mt.EmEthnetWorkMode card2_workmode = 2;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode card2Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
      /**
       * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
       *
       * <pre>
       *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public boolean hasCard2Workmode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
       *
       * <pre>
       *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode getCard2Workmode() {
        return card2Workmode_;
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
       *
       * <pre>
       *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public Builder setCard2Workmode(com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        card2Workmode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmEthnetWorkMode card2_workmode = 2;</code>
       *
       * <pre>
       *(网卡2模式) 0-自动, 1-10M全双工 2-10M半双工,3-100M全双工 4-100M半双工,5-1000M全双工 6-1000M半双工
       * </pre>
       */
      public Builder clearCard2Workmode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        card2Workmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmEthnetWorkMode.emEthModeAuto;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TEthnetWorkModeList)
    }

    static {
      defaultInstance = new TEthnetWorkModeList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TEthnetWorkModeList)
  }

  public interface TEthnetInterfaceParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ip = 1;
    /**
     * <code>optional uint32 ip = 1;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 1;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 2;
    /**
     * <code>optional uint32 mask = 2;</code>
     *
     * <pre>
     *子网掩码  (网络序)  
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 2;</code>
     *
     * <pre>
     *子网掩码  (网络序)  
     * </pre>
     */
    int getMask();

    // optional string mac = 3;
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    boolean hasMac();
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    java.lang.String getMac();
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacBytes();
  }
  /**
   * Protobuf type {@code mt.TEthnetInterfaceParam}
   *
   * <pre>
   ** 单个ethernet 接口信息
   * </pre>
   */
  public static final class TEthnetInterfaceParam extends
      com.google.protobuf.GeneratedMessage
      implements TEthnetInterfaceParamOrBuilder {
    // Use TEthnetInterfaceParam.newBuilder() to construct.
    private TEthnetInterfaceParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TEthnetInterfaceParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TEthnetInterfaceParam defaultInstance;
    public static TEthnetInterfaceParam getDefaultInstance() {
      return defaultInstance;
    }

    public TEthnetInterfaceParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TEthnetInterfaceParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ip_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mask_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              mac_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TEthnetInterfaceParam> PARSER =
        new com.google.protobuf.AbstractParser<TEthnetInterfaceParam>() {
      public TEthnetInterfaceParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEthnetInterfaceParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TEthnetInterfaceParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ip = 1;
    public static final int IP_FIELD_NUMBER = 1;
    private int ip_;
    /**
     * <code>optional uint32 ip = 1;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ip = 1;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 2;
    public static final int MASK_FIELD_NUMBER = 2;
    private int mask_;
    /**
     * <code>optional uint32 mask = 2;</code>
     *
     * <pre>
     *子网掩码  (网络序)  
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 mask = 2;</code>
     *
     * <pre>
     *子网掩码  (网络序)  
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional string mac = 3;
    public static final int MAC_FIELD_NUMBER = 3;
    private java.lang.Object mac_;
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mac = 3;</code>
     *
     * <pre>
     *MAC地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      ip_ = 0;
      mask_ = 0;
      mac_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ip_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, mask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMacBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ip_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, mask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMacBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TEthnetInterfaceParam}
     *
     * <pre>
     ** 单个ethernet 接口信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParam_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mac_ = mac_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.getDefaultInstance()) return this;
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000004;
          mac_ = other.mac_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 ip = 1;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 1;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ip = 1;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 1;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000001;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 1;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 2;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 2;</code>
       *
       * <pre>
       *子网掩码  (网络序)  
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 mask = 2;</code>
       *
       * <pre>
       *子网掩码  (网络序)  
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 2;</code>
       *
       * <pre>
       *子网掩码  (网络序)  
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000002;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 2;</code>
       *
       * <pre>
       *子网掩码  (网络序)  
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional string mac = 3;
      private java.lang.Object mac_ = "";
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public Builder setMac(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac = 3;</code>
       *
       * <pre>
       *MAC地址
       * </pre>
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mac_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TEthnetInterfaceParam)
    }

    static {
      defaultInstance = new TEthnetInterfaceParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TEthnetInterfaceParam)
  }

  public interface TEthnetInterfaceParamListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mt.TEthnetInterfaceParam paramList = 1;
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> 
        getParamListList();
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam getParamList(int index);
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    int getParamListCount();
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder> 
        getParamListOrBuilderList();
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder getParamListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TEthnetInterfaceParamList}
   *
   * <pre>
   ** 多个ethernet 接口信息
   * </pre>
   */
  public static final class TEthnetInterfaceParamList extends
      com.google.protobuf.GeneratedMessage
      implements TEthnetInterfaceParamListOrBuilder {
    // Use TEthnetInterfaceParamList.newBuilder() to construct.
    private TEthnetInterfaceParamList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TEthnetInterfaceParamList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TEthnetInterfaceParamList defaultInstance;
    public static TEthnetInterfaceParamList getDefaultInstance() {
      return defaultInstance;
    }

    public TEthnetInterfaceParamList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TEthnetInterfaceParamList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                paramList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              paramList_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          paramList_ = java.util.Collections.unmodifiableList(paramList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParamList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParamList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.Builder.class);
    }

    public static com.google.protobuf.Parser<TEthnetInterfaceParamList> PARSER =
        new com.google.protobuf.AbstractParser<TEthnetInterfaceParamList>() {
      public TEthnetInterfaceParamList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEthnetInterfaceParamList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TEthnetInterfaceParamList> getParserForType() {
      return PARSER;
    }

    // repeated .mt.TEthnetInterfaceParam paramList = 1;
    public static final int PARAMLIST_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> paramList_;
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> getParamListList() {
      return paramList_;
    }
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder> 
        getParamListOrBuilderList() {
      return paramList_;
    }
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    public int getParamListCount() {
      return paramList_.size();
    }
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam getParamList(int index) {
      return paramList_.get(index);
    }
    /**
     * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
     *
     * <pre>
     *一组ethernet配置信息
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder getParamListOrBuilder(
        int index) {
      return paramList_.get(index);
    }

    private void initFields() {
      paramList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < paramList_.size(); i++) {
        output.writeMessage(1, paramList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < paramList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, paramList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TEthnetInterfaceParamList}
     *
     * <pre>
     ** 多个ethernet 接口信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParamList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParamList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParamListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (paramListBuilder_ == null) {
          paramList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          paramListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TEthnetInterfaceParamList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList(this);
        int from_bitField0_ = bitField0_;
        if (paramListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            paramList_ = java.util.Collections.unmodifiableList(paramList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.paramList_ = paramList_;
        } else {
          result.paramList_ = paramListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList.getDefaultInstance()) return this;
        if (paramListBuilder_ == null) {
          if (!other.paramList_.isEmpty()) {
            if (paramList_.isEmpty()) {
              paramList_ = other.paramList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParamListIsMutable();
              paramList_.addAll(other.paramList_);
            }
            onChanged();
          }
        } else {
          if (!other.paramList_.isEmpty()) {
            if (paramListBuilder_.isEmpty()) {
              paramListBuilder_.dispose();
              paramListBuilder_ = null;
              paramList_ = other.paramList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              paramListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParamListFieldBuilder() : null;
            } else {
              paramListBuilder_.addAllMessages(other.paramList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mt.TEthnetInterfaceParam paramList = 1;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> paramList_ =
        java.util.Collections.emptyList();
      private void ensureParamListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          paramList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam>(paramList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder> paramListBuilder_;

      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> getParamListList() {
        if (paramListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paramList_);
        } else {
          return paramListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public int getParamListCount() {
        if (paramListBuilder_ == null) {
          return paramList_.size();
        } else {
          return paramListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam getParamList(int index) {
        if (paramListBuilder_ == null) {
          return paramList_.get(index);
        } else {
          return paramListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder setParamList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam value) {
        if (paramListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamListIsMutable();
          paramList_.set(index, value);
          onChanged();
        } else {
          paramListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder setParamList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder builderForValue) {
        if (paramListBuilder_ == null) {
          ensureParamListIsMutable();
          paramList_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder addParamList(com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam value) {
        if (paramListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamListIsMutable();
          paramList_.add(value);
          onChanged();
        } else {
          paramListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder addParamList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam value) {
        if (paramListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamListIsMutable();
          paramList_.add(index, value);
          onChanged();
        } else {
          paramListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder addParamList(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder builderForValue) {
        if (paramListBuilder_ == null) {
          ensureParamListIsMutable();
          paramList_.add(builderForValue.build());
          onChanged();
        } else {
          paramListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder addParamList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder builderForValue) {
        if (paramListBuilder_ == null) {
          ensureParamListIsMutable();
          paramList_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder addAllParamList(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam> values) {
        if (paramListBuilder_ == null) {
          ensureParamListIsMutable();
          super.addAll(values, paramList_);
          onChanged();
        } else {
          paramListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder clearParamList() {
        if (paramListBuilder_ == null) {
          paramList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          paramListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public Builder removeParamList(int index) {
        if (paramListBuilder_ == null) {
          ensureParamListIsMutable();
          paramList_.remove(index);
          onChanged();
        } else {
          paramListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder getParamListBuilder(
          int index) {
        return getParamListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder getParamListOrBuilder(
          int index) {
        if (paramListBuilder_ == null) {
          return paramList_.get(index);  } else {
          return paramListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder> 
           getParamListOrBuilderList() {
        if (paramListBuilder_ != null) {
          return paramListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paramList_);
        }
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder addParamListBuilder() {
        return getParamListFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder addParamListBuilder(
          int index) {
        return getParamListFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TEthnetInterfaceParam paramList = 1;</code>
       *
       * <pre>
       *一组ethernet配置信息
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder> 
           getParamListBuilderList() {
        return getParamListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder> 
          getParamListFieldBuilder() {
        if (paramListBuilder_ == null) {
          paramListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParam.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TEthnetInterfaceParamOrBuilder>(
                  paramList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          paramList_ = null;
        }
        return paramListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TEthnetInterfaceParamList)
    }

    static {
      defaultInstance = new TEthnetInterfaceParamList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TEthnetInterfaceParamList)
  }

  public interface TDNSParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated uint32 dnsList = 1;
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    java.util.List<java.lang.Integer> getDnsListList();
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    int getDnsListCount();
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    int getDnsList(int index);

    // optional bool auto = 2;
    /**
     * <code>optional bool auto = 2;</code>
     *
     * <pre>
     *是否自动获取 true:自动 false:手动
     * </pre>
     */
    boolean hasAuto();
    /**
     * <code>optional bool auto = 2;</code>
     *
     * <pre>
     *是否自动获取 true:自动 false:手动
     * </pre>
     */
    boolean getAuto();
  }
  /**
   * Protobuf type {@code mt.TDNSParam}
   *
   * <pre>
   ** ethernet DNS信息
   * </pre>
   */
  public static final class TDNSParam extends
      com.google.protobuf.GeneratedMessage
      implements TDNSParamOrBuilder {
    // Use TDNSParam.newBuilder() to construct.
    private TDNSParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TDNSParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TDNSParam defaultInstance;
    public static TDNSParam getDefaultInstance() {
      return defaultInstance;
    }

    public TDNSParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TDNSParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dnsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              dnsList_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dnsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dnsList_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              auto_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dnsList_ = java.util.Collections.unmodifiableList(dnsList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TDNSParam> PARSER =
        new com.google.protobuf.AbstractParser<TDNSParam>() {
      public TDNSParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TDNSParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TDNSParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated uint32 dnsList = 1;
    public static final int DNSLIST_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> dnsList_;
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDnsListList() {
      return dnsList_;
    }
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    public int getDnsListCount() {
      return dnsList_.size();
    }
    /**
     * <code>repeated uint32 dnsList = 1;</code>
     *
     * <pre>
     *一组DNS IP信息配置信息
     * </pre>
     */
    public int getDnsList(int index) {
      return dnsList_.get(index);
    }

    // optional bool auto = 2;
    public static final int AUTO_FIELD_NUMBER = 2;
    private boolean auto_;
    /**
     * <code>optional bool auto = 2;</code>
     *
     * <pre>
     *是否自动获取 true:自动 false:手动
     * </pre>
     */
    public boolean hasAuto() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool auto = 2;</code>
     *
     * <pre>
     *是否自动获取 true:自动 false:手动
     * </pre>
     */
    public boolean getAuto() {
      return auto_;
    }

    private void initFields() {
      dnsList_ = java.util.Collections.emptyList();
      auto_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dnsList_.size(); i++) {
        output.writeUInt32(1, dnsList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, auto_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dnsList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dnsList_.get(i));
        }
        size += dataSize;
        size += 1 * getDnsListList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, auto_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TDNSParam}
     *
     * <pre>
     ** ethernet DNS信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dnsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        auto_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSParam_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dnsList_ = java.util.Collections.unmodifiableList(dnsList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dnsList_ = dnsList_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.auto_ = auto_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam.getDefaultInstance()) return this;
        if (!other.dnsList_.isEmpty()) {
          if (dnsList_.isEmpty()) {
            dnsList_ = other.dnsList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDnsListIsMutable();
            dnsList_.addAll(other.dnsList_);
          }
          onChanged();
        }
        if (other.hasAuto()) {
          setAuto(other.getAuto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated uint32 dnsList = 1;
      private java.util.List<java.lang.Integer> dnsList_ = java.util.Collections.emptyList();
      private void ensureDnsListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dnsList_ = new java.util.ArrayList<java.lang.Integer>(dnsList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDnsListList() {
        return java.util.Collections.unmodifiableList(dnsList_);
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public int getDnsListCount() {
        return dnsList_.size();
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public int getDnsList(int index) {
        return dnsList_.get(index);
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public Builder setDnsList(
          int index, int value) {
        ensureDnsListIsMutable();
        dnsList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public Builder addDnsList(int value) {
        ensureDnsListIsMutable();
        dnsList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public Builder addAllDnsList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDnsListIsMutable();
        super.addAll(values, dnsList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dnsList = 1;</code>
       *
       * <pre>
       *一组DNS IP信息配置信息
       * </pre>
       */
      public Builder clearDnsList() {
        dnsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional bool auto = 2;
      private boolean auto_ ;
      /**
       * <code>optional bool auto = 2;</code>
       *
       * <pre>
       *是否自动获取 true:自动 false:手动
       * </pre>
       */
      public boolean hasAuto() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool auto = 2;</code>
       *
       * <pre>
       *是否自动获取 true:自动 false:手动
       * </pre>
       */
      public boolean getAuto() {
        return auto_;
      }
      /**
       * <code>optional bool auto = 2;</code>
       *
       * <pre>
       *是否自动获取 true:自动 false:手动
       * </pre>
       */
      public Builder setAuto(boolean value) {
        bitField0_ |= 0x00000002;
        auto_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool auto = 2;</code>
       *
       * <pre>
       *是否自动获取 true:自动 false:手动
       * </pre>
       */
      public Builder clearAuto() {
        bitField0_ = (bitField0_ & ~0x00000002);
        auto_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TDNSParam)
    }

    static {
      defaultInstance = new TDNSParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TDNSParam)
  }

  public interface TDHCPLeaseInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ethernetid = 1;
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *以太网接口
     * </pre>
     */
    boolean hasEthernetid();
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *以太网接口
     * </pre>
     */
    int getEthernetid();

    // optional uint32 ip = 2;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 3;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码
     * </pre>
     */
    int getMask();

    // optional uint32 gateway = 4;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *网关
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *网关
     * </pre>
     */
    int getGateway();

    // optional uint32 duration = 5;
    /**
     * <code>optional uint32 duration = 5;</code>
     *
     * <pre>
     *到期时间
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional uint32 duration = 5;</code>
     *
     * <pre>
     *到期时间
     * </pre>
     */
    int getDuration();

    // optional uint32 dnsnum = 6;
    /**
     * <code>optional uint32 dnsnum = 6;</code>
     *
     * <pre>
     *dns数量
     * </pre>
     */
    boolean hasDnsnum();
    /**
     * <code>optional uint32 dnsnum = 6;</code>
     *
     * <pre>
     *dns数量
     * </pre>
     */
    int getDnsnum();

    // repeated uint32 dns_server_list = 7;
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    java.util.List<java.lang.Integer> getDnsServerListList();
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    int getDnsServerListCount();
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    int getDnsServerList(int index);
  }
  /**
   * Protobuf type {@code mt.TDHCPLeaseInfo}
   *
   * <pre>
   ** ethernet DHCP租约信息
   * </pre>
   */
  public static final class TDHCPLeaseInfo extends
      com.google.protobuf.GeneratedMessage
      implements TDHCPLeaseInfoOrBuilder {
    // Use TDHCPLeaseInfo.newBuilder() to construct.
    private TDHCPLeaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TDHCPLeaseInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TDHCPLeaseInfo defaultInstance;
    public static TDHCPLeaseInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TDHCPLeaseInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TDHCPLeaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ethernetid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ip_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mask_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gateway_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              duration_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dnsnum_ = input.readUInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                dnsServerList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              dnsServerList_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                dnsServerList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                dnsServerList_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          dnsServerList_ = java.util.Collections.unmodifiableList(dnsServerList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPLeaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPLeaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TDHCPLeaseInfo> PARSER =
        new com.google.protobuf.AbstractParser<TDHCPLeaseInfo>() {
      public TDHCPLeaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TDHCPLeaseInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TDHCPLeaseInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ethernetid = 1;
    public static final int ETHERNETID_FIELD_NUMBER = 1;
    private int ethernetid_;
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *以太网接口
     * </pre>
     */
    public boolean hasEthernetid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *以太网接口
     * </pre>
     */
    public int getEthernetid() {
      return ethernetid_;
    }

    // optional uint32 ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private int ip_;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 3;
    public static final int MASK_FIELD_NUMBER = 3;
    private int mask_;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional uint32 gateway = 4;
    public static final int GATEWAY_FIELD_NUMBER = 4;
    private int gateway_;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *网关
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *网关
     * </pre>
     */
    public int getGateway() {
      return gateway_;
    }

    // optional uint32 duration = 5;
    public static final int DURATION_FIELD_NUMBER = 5;
    private int duration_;
    /**
     * <code>optional uint32 duration = 5;</code>
     *
     * <pre>
     *到期时间
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 duration = 5;</code>
     *
     * <pre>
     *到期时间
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    // optional uint32 dnsnum = 6;
    public static final int DNSNUM_FIELD_NUMBER = 6;
    private int dnsnum_;
    /**
     * <code>optional uint32 dnsnum = 6;</code>
     *
     * <pre>
     *dns数量
     * </pre>
     */
    public boolean hasDnsnum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 dnsnum = 6;</code>
     *
     * <pre>
     *dns数量
     * </pre>
     */
    public int getDnsnum() {
      return dnsnum_;
    }

    // repeated uint32 dns_server_list = 7;
    public static final int DNS_SERVER_LIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> dnsServerList_;
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDnsServerListList() {
      return dnsServerList_;
    }
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    public int getDnsServerListCount() {
      return dnsServerList_.size();
    }
    /**
     * <code>repeated uint32 dns_server_list = 7;</code>
     *
     * <pre>
     *dns列表 
     * </pre>
     */
    public int getDnsServerList(int index) {
      return dnsServerList_.get(index);
    }

    private void initFields() {
      ethernetid_ = 0;
      ip_ = 0;
      mask_ = 0;
      gateway_ = 0;
      duration_ = 0;
      dnsnum_ = 0;
      dnsServerList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ethernetid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, dnsnum_);
      }
      for (int i = 0; i < dnsServerList_.size(); i++) {
        output.writeUInt32(7, dnsServerList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ethernetid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, dnsnum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dnsServerList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dnsServerList_.get(i));
        }
        size += dataSize;
        size += 1 * getDnsServerListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TDHCPLeaseInfo}
     *
     * <pre>
     ** ethernet DHCP租约信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPLeaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPLeaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ethernetid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dnsnum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        dnsServerList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPLeaseInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ethernetid_ = ethernetid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dnsnum_ = dnsnum_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          dnsServerList_ = java.util.Collections.unmodifiableList(dnsServerList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.dnsServerList_ = dnsServerList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo.getDefaultInstance()) return this;
        if (other.hasEthernetid()) {
          setEthernetid(other.getEthernetid());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasDnsnum()) {
          setDnsnum(other.getDnsnum());
        }
        if (!other.dnsServerList_.isEmpty()) {
          if (dnsServerList_.isEmpty()) {
            dnsServerList_ = other.dnsServerList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureDnsServerListIsMutable();
            dnsServerList_.addAll(other.dnsServerList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPLeaseInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 ethernetid = 1;
      private int ethernetid_ ;
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *以太网接口
       * </pre>
       */
      public boolean hasEthernetid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *以太网接口
       * </pre>
       */
      public int getEthernetid() {
        return ethernetid_;
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *以太网接口
       * </pre>
       */
      public Builder setEthernetid(int value) {
        bitField0_ |= 0x00000001;
        ethernetid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *以太网接口
       * </pre>
       */
      public Builder clearEthernetid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ethernetid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ip = 2;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 3;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000004;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway = 4;
      private int gateway_ ;
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *网关
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *网关
       * </pre>
       */
      public int getGateway() {
        return gateway_;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *网关
       * </pre>
       */
      public Builder setGateway(int value) {
        bitField0_ |= 0x00000008;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *网关
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gateway_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 duration = 5;
      private int duration_ ;
      /**
       * <code>optional uint32 duration = 5;</code>
       *
       * <pre>
       *到期时间
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 duration = 5;</code>
       *
       * <pre>
       *到期时间
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint32 duration = 5;</code>
       *
       * <pre>
       *到期时间
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000010;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 duration = 5;</code>
       *
       * <pre>
       *到期时间
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dnsnum = 6;
      private int dnsnum_ ;
      /**
       * <code>optional uint32 dnsnum = 6;</code>
       *
       * <pre>
       *dns数量
       * </pre>
       */
      public boolean hasDnsnum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 dnsnum = 6;</code>
       *
       * <pre>
       *dns数量
       * </pre>
       */
      public int getDnsnum() {
        return dnsnum_;
      }
      /**
       * <code>optional uint32 dnsnum = 6;</code>
       *
       * <pre>
       *dns数量
       * </pre>
       */
      public Builder setDnsnum(int value) {
        bitField0_ |= 0x00000020;
        dnsnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dnsnum = 6;</code>
       *
       * <pre>
       *dns数量
       * </pre>
       */
      public Builder clearDnsnum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dnsnum_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 dns_server_list = 7;
      private java.util.List<java.lang.Integer> dnsServerList_ = java.util.Collections.emptyList();
      private void ensureDnsServerListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          dnsServerList_ = new java.util.ArrayList<java.lang.Integer>(dnsServerList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDnsServerListList() {
        return java.util.Collections.unmodifiableList(dnsServerList_);
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public int getDnsServerListCount() {
        return dnsServerList_.size();
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public int getDnsServerList(int index) {
        return dnsServerList_.get(index);
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public Builder setDnsServerList(
          int index, int value) {
        ensureDnsServerListIsMutable();
        dnsServerList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public Builder addDnsServerList(int value) {
        ensureDnsServerListIsMutable();
        dnsServerList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public Builder addAllDnsServerList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDnsServerListIsMutable();
        super.addAll(values, dnsServerList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dns_server_list = 7;</code>
       *
       * <pre>
       *dns列表 
       * </pre>
       */
      public Builder clearDnsServerList() {
        dnsServerList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TDHCPLeaseInfo)
    }

    static {
      defaultInstance = new TDHCPLeaseInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TDHCPLeaseInfo)
  }

  public interface TDHCPStateInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 state = 1;
    /**
     * <code>optional int32 state = 1;</code>
     *
     * <pre>
     *接口是否正在使用dhcp配置地址信息 
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional int32 state = 1;</code>
     *
     * <pre>
     *接口是否正在使用dhcp配置地址信息 
     * </pre>
     */
    int getState();
  }
  /**
   * Protobuf type {@code mt.TDHCPStateInfo}
   *
   * <pre>
   ** ethernet DHCP 状态信息
   * </pre>
   */
  public static final class TDHCPStateInfo extends
      com.google.protobuf.GeneratedMessage
      implements TDHCPStateInfoOrBuilder {
    // Use TDHCPStateInfo.newBuilder() to construct.
    private TDHCPStateInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TDHCPStateInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TDHCPStateInfo defaultInstance;
    public static TDHCPStateInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TDHCPStateInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TDHCPStateInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              state_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPStateInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPStateInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TDHCPStateInfo> PARSER =
        new com.google.protobuf.AbstractParser<TDHCPStateInfo>() {
      public TDHCPStateInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TDHCPStateInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TDHCPStateInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>optional int32 state = 1;</code>
     *
     * <pre>
     *接口是否正在使用dhcp配置地址信息 
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 state = 1;</code>
     *
     * <pre>
     *接口是否正在使用dhcp配置地址信息 
     * </pre>
     */
    public int getState() {
      return state_;
    }

    private void initFields() {
      state_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, state_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TDHCPStateInfo}
     *
     * <pre>
     ** ethernet DHCP 状态信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPStateInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPStateInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDHCPStateInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TDHCPStateInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 state = 1;
      private int state_ ;
      /**
       * <code>optional int32 state = 1;</code>
       *
       * <pre>
       *接口是否正在使用dhcp配置地址信息 
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 state = 1;</code>
       *
       * <pre>
       *接口是否正在使用dhcp配置地址信息 
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional int32 state = 1;</code>
       *
       * <pre>
       *接口是否正在使用dhcp配置地址信息 
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 state = 1;</code>
       *
       * <pre>
       *接口是否正在使用dhcp配置地址信息 
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TDHCPStateInfo)
    }

    static {
      defaultInstance = new TDHCPStateInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TDHCPStateInfo)
  }

  public interface TPPPoEConnectParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ethernetid = 1;
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *PPPOE服务需要绑定的以太网的ID号（从0开始）
     * </pre>
     */
    boolean hasEthernetid();
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *PPPOE服务需要绑定的以太网的ID号（从0开始）
     * </pre>
     */
    int getEthernetid();

    // optional string username = 2;
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    boolean hasUsername();
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    java.lang.String getUsername();
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    // optional string password = 3;
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    // optional string servername = 4;
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    boolean hasServername();
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    java.lang.String getServername();
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    com.google.protobuf.ByteString
        getServernameBytes();

    // optional bool autodial = 5;
    /**
     * <code>optional bool autodial = 5;</code>
     *
     * <pre>
     *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
     * </pre>
     */
    boolean hasAutodial();
    /**
     * <code>optional bool autodial = 5;</code>
     *
     * <pre>
     *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
     * </pre>
     */
    boolean getAutodial();

    // optional bool def_route_enable = 6;
    /**
     * <code>optional bool def_route_enable = 6;</code>
     *
     * <pre>
     *是否允许将对端的地址设为默认网关，默认不设为网关 
     * </pre>
     */
    boolean hasDefRouteEnable();
    /**
     * <code>optional bool def_route_enable = 6;</code>
     *
     * <pre>
     *是否允许将对端的地址设为默认网关，默认不设为网关 
     * </pre>
     */
    boolean getDefRouteEnable();

    // optional bool in_debug = 7;
    /**
     * <code>optional bool in_debug = 7;</code>
     *
     * <pre>
     *是否以debug模式运行pppoe，默认不运行在debug模式
     * </pre>
     */
    boolean hasInDebug();
    /**
     * <code>optional bool in_debug = 7;</code>
     *
     * <pre>
     *是否以debug模式运行pppoe，默认不运行在debug模式
     * </pre>
     */
    boolean getInDebug();

    // optional uint32 autodial_interval = 8;
    /**
     * <code>optional uint32 autodial_interval = 8;</code>
     *
     * <pre>
     *断链后再次自动拨号需要等带的时间（允许设置成0s）
     * </pre>
     */
    boolean hasAutodialInterval();
    /**
     * <code>optional uint32 autodial_interval = 8;</code>
     *
     * <pre>
     *断链后再次自动拨号需要等带的时间（允许设置成0s）
     * </pre>
     */
    int getAutodialInterval();

    // optional uint32 dial_retrytimes = 9;
    /**
     * <code>optional uint32 dial_retrytimes = 9;</code>
     *
     * <pre>
     *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
     * </pre>
     */
    boolean hasDialRetrytimes();
    /**
     * <code>optional uint32 dial_retrytimes = 9;</code>
     *
     * <pre>
     *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
     * </pre>
     */
    int getDialRetrytimes();

    // optional uint32 lcpecho_sendInterval = 10;
    /**
     * <code>optional uint32 lcpecho_sendInterval = 10;</code>
     *
     * <pre>
     *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
     * </pre>
     */
    boolean hasLcpechoSendInterval();
    /**
     * <code>optional uint32 lcpecho_sendInterval = 10;</code>
     *
     * <pre>
     *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
     * </pre>
     */
    int getLcpechoSendInterval();

    // optional uint32 lcpecho_retrytimes = 11;
    /**
     * <code>optional uint32 lcpecho_retrytimes = 11;</code>
     *
     * <pre>
     *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
     * </pre>
     */
    boolean hasLcpechoRetrytimes();
    /**
     * <code>optional uint32 lcpecho_retrytimes = 11;</code>
     *
     * <pre>
     *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
     * </pre>
     */
    int getLcpechoRetrytimes();
  }
  /**
   * Protobuf type {@code mt.TPPPoEConnectParam}
   *
   * <pre>
   ** PPPoE拨号参数 
   * </pre>
   */
  public static final class TPPPoEConnectParam extends
      com.google.protobuf.GeneratedMessage
      implements TPPPoEConnectParamOrBuilder {
    // Use TPPPoEConnectParam.newBuilder() to construct.
    private TPPPoEConnectParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPPPoEConnectParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPPPoEConnectParam defaultInstance;
    public static TPPPoEConnectParam getDefaultInstance() {
      return defaultInstance;
    }

    public TPPPoEConnectParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPPPoEConnectParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ethernetid_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              username_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              password_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              servername_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              autodial_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              defRouteEnable_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              inDebug_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              autodialInterval_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              dialRetrytimes_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              lcpechoSendInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              lcpechoRetrytimes_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEConnectParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEConnectParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TPPPoEConnectParam> PARSER =
        new com.google.protobuf.AbstractParser<TPPPoEConnectParam>() {
      public TPPPoEConnectParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPPPoEConnectParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPPPoEConnectParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ethernetid = 1;
    public static final int ETHERNETID_FIELD_NUMBER = 1;
    private int ethernetid_;
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *PPPOE服务需要绑定的以太网的ID号（从0开始）
     * </pre>
     */
    public boolean hasEthernetid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ethernetid = 1;</code>
     *
     * <pre>
     *PPPOE服务需要绑定的以太网的ID号（从0开始）
     * </pre>
     */
    public int getEthernetid() {
      return ethernetid_;
    }

    // optional string username = 2;
    public static final int USERNAME_FIELD_NUMBER = 2;
    private java.lang.Object username_;
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string username = 2;</code>
     *
     * <pre>
     *拨号时使用的用户名,必填项
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 3;</code>
     *
     * <pre>
     *拨号时使用的密码,必填项 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string servername = 4;
    public static final int SERVERNAME_FIELD_NUMBER = 4;
    private java.lang.Object servername_;
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    public boolean hasServername() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    public java.lang.String getServername() {
      java.lang.Object ref = servername_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          servername_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string servername = 4;</code>
     *
     * <pre>
     *指定拨号服务商的名字,可以不填
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServernameBytes() {
      java.lang.Object ref = servername_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servername_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool autodial = 5;
    public static final int AUTODIAL_FIELD_NUMBER = 5;
    private boolean autodial_;
    /**
     * <code>optional bool autodial = 5;</code>
     *
     * <pre>
     *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
     * </pre>
     */
    public boolean hasAutodial() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool autodial = 5;</code>
     *
     * <pre>
     *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
     * </pre>
     */
    public boolean getAutodial() {
      return autodial_;
    }

    // optional bool def_route_enable = 6;
    public static final int DEF_ROUTE_ENABLE_FIELD_NUMBER = 6;
    private boolean defRouteEnable_;
    /**
     * <code>optional bool def_route_enable = 6;</code>
     *
     * <pre>
     *是否允许将对端的地址设为默认网关，默认不设为网关 
     * </pre>
     */
    public boolean hasDefRouteEnable() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool def_route_enable = 6;</code>
     *
     * <pre>
     *是否允许将对端的地址设为默认网关，默认不设为网关 
     * </pre>
     */
    public boolean getDefRouteEnable() {
      return defRouteEnable_;
    }

    // optional bool in_debug = 7;
    public static final int IN_DEBUG_FIELD_NUMBER = 7;
    private boolean inDebug_;
    /**
     * <code>optional bool in_debug = 7;</code>
     *
     * <pre>
     *是否以debug模式运行pppoe，默认不运行在debug模式
     * </pre>
     */
    public boolean hasInDebug() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool in_debug = 7;</code>
     *
     * <pre>
     *是否以debug模式运行pppoe，默认不运行在debug模式
     * </pre>
     */
    public boolean getInDebug() {
      return inDebug_;
    }

    // optional uint32 autodial_interval = 8;
    public static final int AUTODIAL_INTERVAL_FIELD_NUMBER = 8;
    private int autodialInterval_;
    /**
     * <code>optional uint32 autodial_interval = 8;</code>
     *
     * <pre>
     *断链后再次自动拨号需要等带的时间（允许设置成0s）
     * </pre>
     */
    public boolean hasAutodialInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 autodial_interval = 8;</code>
     *
     * <pre>
     *断链后再次自动拨号需要等带的时间（允许设置成0s）
     * </pre>
     */
    public int getAutodialInterval() {
      return autodialInterval_;
    }

    // optional uint32 dial_retrytimes = 9;
    public static final int DIAL_RETRYTIMES_FIELD_NUMBER = 9;
    private int dialRetrytimes_;
    /**
     * <code>optional uint32 dial_retrytimes = 9;</code>
     *
     * <pre>
     *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
     * </pre>
     */
    public boolean hasDialRetrytimes() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 dial_retrytimes = 9;</code>
     *
     * <pre>
     *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
     * </pre>
     */
    public int getDialRetrytimes() {
      return dialRetrytimes_;
    }

    // optional uint32 lcpecho_sendInterval = 10;
    public static final int LCPECHO_SENDINTERVAL_FIELD_NUMBER = 10;
    private int lcpechoSendInterval_;
    /**
     * <code>optional uint32 lcpecho_sendInterval = 10;</code>
     *
     * <pre>
     *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
     * </pre>
     */
    public boolean hasLcpechoSendInterval() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 lcpecho_sendInterval = 10;</code>
     *
     * <pre>
     *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
     * </pre>
     */
    public int getLcpechoSendInterval() {
      return lcpechoSendInterval_;
    }

    // optional uint32 lcpecho_retrytimes = 11;
    public static final int LCPECHO_RETRYTIMES_FIELD_NUMBER = 11;
    private int lcpechoRetrytimes_;
    /**
     * <code>optional uint32 lcpecho_retrytimes = 11;</code>
     *
     * <pre>
     *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
     * </pre>
     */
    public boolean hasLcpechoRetrytimes() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 lcpecho_retrytimes = 11;</code>
     *
     * <pre>
     *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
     * </pre>
     */
    public int getLcpechoRetrytimes() {
      return lcpechoRetrytimes_;
    }

    private void initFields() {
      ethernetid_ = 0;
      username_ = "";
      password_ = "";
      servername_ = "";
      autodial_ = false;
      defRouteEnable_ = false;
      inDebug_ = false;
      autodialInterval_ = 0;
      dialRetrytimes_ = 0;
      lcpechoSendInterval_ = 0;
      lcpechoRetrytimes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ethernetid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getServernameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, autodial_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, defRouteEnable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, inDebug_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, autodialInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, dialRetrytimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, lcpechoSendInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, lcpechoRetrytimes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ethernetid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getServernameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, autodial_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, defRouteEnable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, inDebug_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, autodialInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, dialRetrytimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, lcpechoSendInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, lcpechoRetrytimes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPPPoEConnectParam}
     *
     * <pre>
     ** PPPoE拨号参数 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEConnectParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEConnectParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ethernetid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        servername_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        autodial_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        defRouteEnable_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        inDebug_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        autodialInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        dialRetrytimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        lcpechoSendInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        lcpechoRetrytimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEConnectParam_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ethernetid_ = ethernetid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.username_ = username_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.servername_ = servername_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.autodial_ = autodial_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.defRouteEnable_ = defRouteEnable_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.inDebug_ = inDebug_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.autodialInterval_ = autodialInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.dialRetrytimes_ = dialRetrytimes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lcpechoSendInterval_ = lcpechoSendInterval_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lcpechoRetrytimes_ = lcpechoRetrytimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam.getDefaultInstance()) return this;
        if (other.hasEthernetid()) {
          setEthernetid(other.getEthernetid());
        }
        if (other.hasUsername()) {
          bitField0_ |= 0x00000002;
          username_ = other.username_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000004;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasServername()) {
          bitField0_ |= 0x00000008;
          servername_ = other.servername_;
          onChanged();
        }
        if (other.hasAutodial()) {
          setAutodial(other.getAutodial());
        }
        if (other.hasDefRouteEnable()) {
          setDefRouteEnable(other.getDefRouteEnable());
        }
        if (other.hasInDebug()) {
          setInDebug(other.getInDebug());
        }
        if (other.hasAutodialInterval()) {
          setAutodialInterval(other.getAutodialInterval());
        }
        if (other.hasDialRetrytimes()) {
          setDialRetrytimes(other.getDialRetrytimes());
        }
        if (other.hasLcpechoSendInterval()) {
          setLcpechoSendInterval(other.getLcpechoSendInterval());
        }
        if (other.hasLcpechoRetrytimes()) {
          setLcpechoRetrytimes(other.getLcpechoRetrytimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEConnectParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 ethernetid = 1;
      private int ethernetid_ ;
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *PPPOE服务需要绑定的以太网的ID号（从0开始）
       * </pre>
       */
      public boolean hasEthernetid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *PPPOE服务需要绑定的以太网的ID号（从0开始）
       * </pre>
       */
      public int getEthernetid() {
        return ethernetid_;
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *PPPOE服务需要绑定的以太网的ID号（从0开始）
       * </pre>
       */
      public Builder setEthernetid(int value) {
        bitField0_ |= 0x00000001;
        ethernetid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ethernetid = 1;</code>
       *
       * <pre>
       *PPPOE服务需要绑定的以太网的ID号（从0开始）
       * </pre>
       */
      public Builder clearEthernetid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ethernetid_ = 0;
        onChanged();
        return this;
      }

      // optional string username = 2;
      private java.lang.Object username_ = "";
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000002);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 2;</code>
       *
       * <pre>
       *拨号时使用的用户名,必填项
       * </pre>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        username_ = value;
        onChanged();
        return this;
      }

      // optional string password = 3;
      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       *
       * <pre>
       *拨号时使用的密码,必填项 
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }

      // optional string servername = 4;
      private java.lang.Object servername_ = "";
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public boolean hasServername() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public java.lang.String getServername() {
        java.lang.Object ref = servername_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          servername_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServernameBytes() {
        java.lang.Object ref = servername_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          servername_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public Builder setServername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        servername_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public Builder clearServername() {
        bitField0_ = (bitField0_ & ~0x00000008);
        servername_ = getDefaultInstance().getServername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string servername = 4;</code>
       *
       * <pre>
       *指定拨号服务商的名字,可以不填
       * </pre>
       */
      public Builder setServernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        servername_ = value;
        onChanged();
        return this;
      }

      // optional bool autodial = 5;
      private boolean autodial_ ;
      /**
       * <code>optional bool autodial = 5;</code>
       *
       * <pre>
       *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
       * </pre>
       */
      public boolean hasAutodial() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool autodial = 5;</code>
       *
       * <pre>
       *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
       * </pre>
       */
      public boolean getAutodial() {
        return autodial_;
      }
      /**
       * <code>optional bool autodial = 5;</code>
       *
       * <pre>
       *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
       * </pre>
       */
      public Builder setAutodial(boolean value) {
        bitField0_ |= 0x00000010;
        autodial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool autodial = 5;</code>
       *
       * <pre>
       *是否允许断链后自动拨号,默认不自动拨号,只有启用自动拨号后，重播次数和重拨时间才有意义。否则无效
       * </pre>
       */
      public Builder clearAutodial() {
        bitField0_ = (bitField0_ & ~0x00000010);
        autodial_ = false;
        onChanged();
        return this;
      }

      // optional bool def_route_enable = 6;
      private boolean defRouteEnable_ ;
      /**
       * <code>optional bool def_route_enable = 6;</code>
       *
       * <pre>
       *是否允许将对端的地址设为默认网关，默认不设为网关 
       * </pre>
       */
      public boolean hasDefRouteEnable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool def_route_enable = 6;</code>
       *
       * <pre>
       *是否允许将对端的地址设为默认网关，默认不设为网关 
       * </pre>
       */
      public boolean getDefRouteEnable() {
        return defRouteEnable_;
      }
      /**
       * <code>optional bool def_route_enable = 6;</code>
       *
       * <pre>
       *是否允许将对端的地址设为默认网关，默认不设为网关 
       * </pre>
       */
      public Builder setDefRouteEnable(boolean value) {
        bitField0_ |= 0x00000020;
        defRouteEnable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool def_route_enable = 6;</code>
       *
       * <pre>
       *是否允许将对端的地址设为默认网关，默认不设为网关 
       * </pre>
       */
      public Builder clearDefRouteEnable() {
        bitField0_ = (bitField0_ & ~0x00000020);
        defRouteEnable_ = false;
        onChanged();
        return this;
      }

      // optional bool in_debug = 7;
      private boolean inDebug_ ;
      /**
       * <code>optional bool in_debug = 7;</code>
       *
       * <pre>
       *是否以debug模式运行pppoe，默认不运行在debug模式
       * </pre>
       */
      public boolean hasInDebug() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool in_debug = 7;</code>
       *
       * <pre>
       *是否以debug模式运行pppoe，默认不运行在debug模式
       * </pre>
       */
      public boolean getInDebug() {
        return inDebug_;
      }
      /**
       * <code>optional bool in_debug = 7;</code>
       *
       * <pre>
       *是否以debug模式运行pppoe，默认不运行在debug模式
       * </pre>
       */
      public Builder setInDebug(boolean value) {
        bitField0_ |= 0x00000040;
        inDebug_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool in_debug = 7;</code>
       *
       * <pre>
       *是否以debug模式运行pppoe，默认不运行在debug模式
       * </pre>
       */
      public Builder clearInDebug() {
        bitField0_ = (bitField0_ & ~0x00000040);
        inDebug_ = false;
        onChanged();
        return this;
      }

      // optional uint32 autodial_interval = 8;
      private int autodialInterval_ ;
      /**
       * <code>optional uint32 autodial_interval = 8;</code>
       *
       * <pre>
       *断链后再次自动拨号需要等带的时间（允许设置成0s）
       * </pre>
       */
      public boolean hasAutodialInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 autodial_interval = 8;</code>
       *
       * <pre>
       *断链后再次自动拨号需要等带的时间（允许设置成0s）
       * </pre>
       */
      public int getAutodialInterval() {
        return autodialInterval_;
      }
      /**
       * <code>optional uint32 autodial_interval = 8;</code>
       *
       * <pre>
       *断链后再次自动拨号需要等带的时间（允许设置成0s）
       * </pre>
       */
      public Builder setAutodialInterval(int value) {
        bitField0_ |= 0x00000080;
        autodialInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 autodial_interval = 8;</code>
       *
       * <pre>
       *断链后再次自动拨号需要等带的时间（允许设置成0s）
       * </pre>
       */
      public Builder clearAutodialInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        autodialInterval_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dial_retrytimes = 9;
      private int dialRetrytimes_ ;
      /**
       * <code>optional uint32 dial_retrytimes = 9;</code>
       *
       * <pre>
       *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
       * </pre>
       */
      public boolean hasDialRetrytimes() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 dial_retrytimes = 9;</code>
       *
       * <pre>
       *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
       * </pre>
       */
      public int getDialRetrytimes() {
        return dialRetrytimes_;
      }
      /**
       * <code>optional uint32 dial_retrytimes = 9;</code>
       *
       * <pre>
       *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
       * </pre>
       */
      public Builder setDialRetrytimes(int value) {
        bitField0_ |= 0x00000100;
        dialRetrytimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dial_retrytimes = 9;</code>
       *
       * <pre>
       *拨号尝试的次数，如果达到该次数还没有响应则拨号失败,默认为10，为0则无限制拨号
       * </pre>
       */
      public Builder clearDialRetrytimes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dialRetrytimes_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 lcpecho_sendInterval = 10;
      private int lcpechoSendInterval_ ;
      /**
       * <code>optional uint32 lcpecho_sendInterval = 10;</code>
       *
       * <pre>
       *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
       * </pre>
       */
      public boolean hasLcpechoSendInterval() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 lcpecho_sendInterval = 10;</code>
       *
       * <pre>
       *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
       * </pre>
       */
      public int getLcpechoSendInterval() {
        return lcpechoSendInterval_;
      }
      /**
       * <code>optional uint32 lcpecho_sendInterval = 10;</code>
       *
       * <pre>
       *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
       * </pre>
       */
      public Builder setLcpechoSendInterval(int value) {
        bitField0_ |= 0x00000200;
        lcpechoSendInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lcpecho_sendInterval = 10;</code>
       *
       * <pre>
       *链接建立后，发送LCP-ECHO包的时间间隔,默认设置为20
       * </pre>
       */
      public Builder clearLcpechoSendInterval() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lcpechoSendInterval_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 lcpecho_retrytimes = 11;
      private int lcpechoRetrytimes_ ;
      /**
       * <code>optional uint32 lcpecho_retrytimes = 11;</code>
       *
       * <pre>
       *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
       * </pre>
       */
      public boolean hasLcpechoRetrytimes() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 lcpecho_retrytimes = 11;</code>
       *
       * <pre>
       *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
       * </pre>
       */
      public int getLcpechoRetrytimes() {
        return lcpechoRetrytimes_;
      }
      /**
       * <code>optional uint32 lcpecho_retrytimes = 11;</code>
       *
       * <pre>
       *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
       * </pre>
       */
      public Builder setLcpechoRetrytimes(int value) {
        bitField0_ |= 0x00000400;
        lcpechoRetrytimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lcpecho_retrytimes = 11;</code>
       *
       * <pre>
       *发送几次LCP-ECHO包没有得到相应则认为链接断开,默认设置为3
       * </pre>
       */
      public Builder clearLcpechoRetrytimes() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lcpechoRetrytimes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPPPoEConnectParam)
    }

    static {
      defaultInstance = new TPPPoEConnectParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPPPoEConnectParam)
  }

  public interface TPPPoEStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmPPPoELinkState pppoe_running = 1;
    /**
     * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
     *
     * <pre>
     *PPPoE连接状态
     * </pre>
     */
    boolean hasPppoeRunning();
    /**
     * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
     *
     * <pre>
     *PPPoE连接状态
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState getPppoeRunning();

    // optional string servername = 2;
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    boolean hasServername();
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    java.lang.String getServername();
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getServernameBytes();

    // optional uint32 localip = 3;
    /**
     * <code>optional uint32 localip = 3;</code>
     *
     * <pre>
     *本机IP地址,网络序;
     * </pre>
     */
    boolean hasLocalip();
    /**
     * <code>optional uint32 localip = 3;</code>
     *
     * <pre>
     *本机IP地址,网络序;
     * </pre>
     */
    int getLocalip();

    // optional uint32 peerip = 4;
    /**
     * <code>optional uint32 peerip = 4;</code>
     *
     * <pre>
     *对端IP地址,网络序
     * </pre>
     */
    boolean hasPeerip();
    /**
     * <code>optional uint32 peerip = 4;</code>
     *
     * <pre>
     *对端IP地址,网络序
     * </pre>
     */
    int getPeerip();

    // optional uint32 mDnsServer1 = 5;
    /**
     * <code>optional uint32 mDnsServer1 = 5;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    boolean hasMDnsServer1();
    /**
     * <code>optional uint32 mDnsServer1 = 5;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    int getMDnsServer1();

    // optional uint32 mDnsServer2 = 6;
    /**
     * <code>optional uint32 mDnsServer2 = 6;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    boolean hasMDnsServer2();
    /**
     * <code>optional uint32 mDnsServer2 = 6;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    int getMDnsServer2();

    // optional .mt.EmPPPoELinkErrReason emReason = 7;
    /**
     * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
     *
     * <pre>
     *原因
     * </pre>
     */
    boolean hasEmReason();
    /**
     * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
     *
     * <pre>
     *原因
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason getEmReason();
  }
  /**
   * Protobuf type {@code mt.TPPPoEState}
   *
   * <pre>
   ** PPPoE状态信息 
   * </pre>
   */
  public static final class TPPPoEState extends
      com.google.protobuf.GeneratedMessage
      implements TPPPoEStateOrBuilder {
    // Use TPPPoEState.newBuilder() to construct.
    private TPPPoEState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPPPoEState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPPPoEState defaultInstance;
    public static TPPPoEState getDefaultInstance() {
      return defaultInstance;
    }

    public TPPPoEState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPPPoEState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                pppoeRunning_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              servername_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              localip_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              peerip_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mDnsServer1_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              mDnsServer2_ = input.readUInt32();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                emReason_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.Builder.class);
    }

    public static com.google.protobuf.Parser<TPPPoEState> PARSER =
        new com.google.protobuf.AbstractParser<TPPPoEState>() {
      public TPPPoEState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPPPoEState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPPPoEState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmPPPoELinkState pppoe_running = 1;
    public static final int PPPOE_RUNNING_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState pppoeRunning_;
    /**
     * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
     *
     * <pre>
     *PPPoE连接状态
     * </pre>
     */
    public boolean hasPppoeRunning() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
     *
     * <pre>
     *PPPoE连接状态
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState getPppoeRunning() {
      return pppoeRunning_;
    }

    // optional string servername = 2;
    public static final int SERVERNAME_FIELD_NUMBER = 2;
    private java.lang.Object servername_;
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    public boolean hasServername() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    public java.lang.String getServername() {
      java.lang.Object ref = servername_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          servername_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string servername = 2;</code>
     *
     * <pre>
     *ISP Server的名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServernameBytes() {
      java.lang.Object ref = servername_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servername_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 localip = 3;
    public static final int LOCALIP_FIELD_NUMBER = 3;
    private int localip_;
    /**
     * <code>optional uint32 localip = 3;</code>
     *
     * <pre>
     *本机IP地址,网络序;
     * </pre>
     */
    public boolean hasLocalip() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 localip = 3;</code>
     *
     * <pre>
     *本机IP地址,网络序;
     * </pre>
     */
    public int getLocalip() {
      return localip_;
    }

    // optional uint32 peerip = 4;
    public static final int PEERIP_FIELD_NUMBER = 4;
    private int peerip_;
    /**
     * <code>optional uint32 peerip = 4;</code>
     *
     * <pre>
     *对端IP地址,网络序
     * </pre>
     */
    public boolean hasPeerip() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 peerip = 4;</code>
     *
     * <pre>
     *对端IP地址,网络序
     * </pre>
     */
    public int getPeerip() {
      return peerip_;
    }

    // optional uint32 mDnsServer1 = 5;
    public static final int MDNSSERVER1_FIELD_NUMBER = 5;
    private int mDnsServer1_;
    /**
     * <code>optional uint32 mDnsServer1 = 5;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    public boolean hasMDnsServer1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 mDnsServer1 = 5;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    public int getMDnsServer1() {
      return mDnsServer1_;
    }

    // optional uint32 mDnsServer2 = 6;
    public static final int MDNSSERVER2_FIELD_NUMBER = 6;
    private int mDnsServer2_;
    /**
     * <code>optional uint32 mDnsServer2 = 6;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    public boolean hasMDnsServer2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 mDnsServer2 = 6;</code>
     *
     * <pre>
     *DNS Server1,网络序
     * </pre>
     */
    public int getMDnsServer2() {
      return mDnsServer2_;
    }

    // optional .mt.EmPPPoELinkErrReason emReason = 7;
    public static final int EMREASON_FIELD_NUMBER = 7;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason emReason_;
    /**
     * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
     *
     * <pre>
     *原因
     * </pre>
     */
    public boolean hasEmReason() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
     *
     * <pre>
     *原因
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason getEmReason() {
      return emReason_;
    }

    private void initFields() {
      pppoeRunning_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState.emPPPoELinkStateIdle;
      servername_ = "";
      localip_ = 0;
      peerip_ = 0;
      mDnsServer1_ = 0;
      mDnsServer2_ = 0;
      emReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason.emPPPoELinkErrReason_None;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, pppoeRunning_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getServernameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, localip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, peerip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, mDnsServer1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, mDnsServer2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, emReason_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, pppoeRunning_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getServernameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, localip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, peerip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, mDnsServer1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, mDnsServer2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, emReason_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPPPoEState}
     *
     * <pre>
     ** PPPoE状态信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pppoeRunning_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState.emPPPoELinkStateIdle;
        bitField0_ = (bitField0_ & ~0x00000001);
        servername_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        localip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        peerip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mDnsServer1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mDnsServer2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        emReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason.emPPPoELinkErrReason_None;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEState_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pppoeRunning_ = pppoeRunning_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.servername_ = servername_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.localip_ = localip_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.peerip_ = peerip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mDnsServer1_ = mDnsServer1_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mDnsServer2_ = mDnsServer2_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.emReason_ = emReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState.getDefaultInstance()) return this;
        if (other.hasPppoeRunning()) {
          setPppoeRunning(other.getPppoeRunning());
        }
        if (other.hasServername()) {
          bitField0_ |= 0x00000002;
          servername_ = other.servername_;
          onChanged();
        }
        if (other.hasLocalip()) {
          setLocalip(other.getLocalip());
        }
        if (other.hasPeerip()) {
          setPeerip(other.getPeerip());
        }
        if (other.hasMDnsServer1()) {
          setMDnsServer1(other.getMDnsServer1());
        }
        if (other.hasMDnsServer2()) {
          setMDnsServer2(other.getMDnsServer2());
        }
        if (other.hasEmReason()) {
          setEmReason(other.getEmReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmPPPoELinkState pppoe_running = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState pppoeRunning_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState.emPPPoELinkStateIdle;
      /**
       * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
       *
       * <pre>
       *PPPoE连接状态
       * </pre>
       */
      public boolean hasPppoeRunning() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
       *
       * <pre>
       *PPPoE连接状态
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState getPppoeRunning() {
        return pppoeRunning_;
      }
      /**
       * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
       *
       * <pre>
       *PPPoE连接状态
       * </pre>
       */
      public Builder setPppoeRunning(com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        pppoeRunning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmPPPoELinkState pppoe_running = 1;</code>
       *
       * <pre>
       *PPPoE连接状态
       * </pre>
       */
      public Builder clearPppoeRunning() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pppoeRunning_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkState.emPPPoELinkStateIdle;
        onChanged();
        return this;
      }

      // optional string servername = 2;
      private java.lang.Object servername_ = "";
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public boolean hasServername() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public java.lang.String getServername() {
        java.lang.Object ref = servername_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          servername_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServernameBytes() {
        java.lang.Object ref = servername_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          servername_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public Builder setServername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        servername_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public Builder clearServername() {
        bitField0_ = (bitField0_ & ~0x00000002);
        servername_ = getDefaultInstance().getServername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string servername = 2;</code>
       *
       * <pre>
       *ISP Server的名字
       * </pre>
       */
      public Builder setServernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        servername_ = value;
        onChanged();
        return this;
      }

      // optional uint32 localip = 3;
      private int localip_ ;
      /**
       * <code>optional uint32 localip = 3;</code>
       *
       * <pre>
       *本机IP地址,网络序;
       * </pre>
       */
      public boolean hasLocalip() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 localip = 3;</code>
       *
       * <pre>
       *本机IP地址,网络序;
       * </pre>
       */
      public int getLocalip() {
        return localip_;
      }
      /**
       * <code>optional uint32 localip = 3;</code>
       *
       * <pre>
       *本机IP地址,网络序;
       * </pre>
       */
      public Builder setLocalip(int value) {
        bitField0_ |= 0x00000004;
        localip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 localip = 3;</code>
       *
       * <pre>
       *本机IP地址,网络序;
       * </pre>
       */
      public Builder clearLocalip() {
        bitField0_ = (bitField0_ & ~0x00000004);
        localip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 peerip = 4;
      private int peerip_ ;
      /**
       * <code>optional uint32 peerip = 4;</code>
       *
       * <pre>
       *对端IP地址,网络序
       * </pre>
       */
      public boolean hasPeerip() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 peerip = 4;</code>
       *
       * <pre>
       *对端IP地址,网络序
       * </pre>
       */
      public int getPeerip() {
        return peerip_;
      }
      /**
       * <code>optional uint32 peerip = 4;</code>
       *
       * <pre>
       *对端IP地址,网络序
       * </pre>
       */
      public Builder setPeerip(int value) {
        bitField0_ |= 0x00000008;
        peerip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 peerip = 4;</code>
       *
       * <pre>
       *对端IP地址,网络序
       * </pre>
       */
      public Builder clearPeerip() {
        bitField0_ = (bitField0_ & ~0x00000008);
        peerip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mDnsServer1 = 5;
      private int mDnsServer1_ ;
      /**
       * <code>optional uint32 mDnsServer1 = 5;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public boolean hasMDnsServer1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 mDnsServer1 = 5;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public int getMDnsServer1() {
        return mDnsServer1_;
      }
      /**
       * <code>optional uint32 mDnsServer1 = 5;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public Builder setMDnsServer1(int value) {
        bitField0_ |= 0x00000010;
        mDnsServer1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mDnsServer1 = 5;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public Builder clearMDnsServer1() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mDnsServer1_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mDnsServer2 = 6;
      private int mDnsServer2_ ;
      /**
       * <code>optional uint32 mDnsServer2 = 6;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public boolean hasMDnsServer2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 mDnsServer2 = 6;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public int getMDnsServer2() {
        return mDnsServer2_;
      }
      /**
       * <code>optional uint32 mDnsServer2 = 6;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public Builder setMDnsServer2(int value) {
        bitField0_ |= 0x00000020;
        mDnsServer2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mDnsServer2 = 6;</code>
       *
       * <pre>
       *DNS Server1,网络序
       * </pre>
       */
      public Builder clearMDnsServer2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mDnsServer2_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmPPPoELinkErrReason emReason = 7;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason emReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason.emPPPoELinkErrReason_None;
      /**
       * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
       *
       * <pre>
       *原因
       * </pre>
       */
      public boolean hasEmReason() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
       *
       * <pre>
       *原因
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason getEmReason() {
        return emReason_;
      }
      /**
       * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
       *
       * <pre>
       *原因
       * </pre>
       */
      public Builder setEmReason(com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        emReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmPPPoELinkErrReason emReason = 7;</code>
       *
       * <pre>
       *原因
       * </pre>
       */
      public Builder clearEmReason() {
        bitField0_ = (bitField0_ & ~0x00000040);
        emReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPPPoELinkErrReason.emPPPoELinkErrReason_None;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPPPoEState)
    }

    static {
      defaultInstance = new TPPPoEState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPPPoEState)
  }

  public interface TPPPoEStatisOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 link_keeptime = 1;
    /**
     * <code>optional uint32 link_keeptime = 1;</code>
     *
     * <pre>
     *链路建立的时间
     * </pre>
     */
    boolean hasLinkKeeptime();
    /**
     * <code>optional uint32 link_keeptime = 1;</code>
     *
     * <pre>
     *链路建立的时间
     * </pre>
     */
    int getLinkKeeptime();

    // optional uint32 link_downtimes = 2;
    /**
     * <code>optional uint32 link_downtimes = 2;</code>
     *
     * <pre>
     *链路断链的次数统计
     * </pre>
     */
    boolean hasLinkDowntimes();
    /**
     * <code>optional uint32 link_downtimes = 2;</code>
     *
     * <pre>
     *链路断链的次数统计
     * </pre>
     */
    int getLinkDowntimes();

    // optional uint32 num_pkgsent = 3;
    /**
     * <code>optional uint32 num_pkgsent = 3;</code>
     *
     * <pre>
     *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
     * </pre>
     */
    boolean hasNumPkgsent();
    /**
     * <code>optional uint32 num_pkgsent = 3;</code>
     *
     * <pre>
     *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
     * </pre>
     */
    int getNumPkgsent();

    // optional uint32 num_pkgrecved = 4;
    /**
     * <code>optional uint32 num_pkgrecved = 4;</code>
     *
     * <pre>
     *总共接收的数据包数
     * </pre>
     */
    boolean hasNumPkgrecved();
    /**
     * <code>optional uint32 num_pkgrecved = 4;</code>
     *
     * <pre>
     *总共接收的数据包数
     * </pre>
     */
    int getNumPkgrecved();

    // optional uint32 num_bytessent = 5;
    /**
     * <code>optional uint32 num_bytessent = 5;</code>
     *
     * <pre>
     *总共发送的字节数
     * </pre>
     */
    boolean hasNumBytessent();
    /**
     * <code>optional uint32 num_bytessent = 5;</code>
     *
     * <pre>
     *总共发送的字节数
     * </pre>
     */
    int getNumBytessent();

    // optional uint32 num_bytesrecved = 6;
    /**
     * <code>optional uint32 num_bytesrecved = 6;</code>
     *
     * <pre>
     *总共接收的字节数
     * </pre>
     */
    boolean hasNumBytesrecved();
    /**
     * <code>optional uint32 num_bytesrecved = 6;</code>
     *
     * <pre>
     *总共接收的字节数
     * </pre>
     */
    int getNumBytesrecved();
  }
  /**
   * Protobuf type {@code mt.TPPPoEStatis}
   *
   * <pre>
   ** PPPoE统计信息 
   * </pre>
   */
  public static final class TPPPoEStatis extends
      com.google.protobuf.GeneratedMessage
      implements TPPPoEStatisOrBuilder {
    // Use TPPPoEStatis.newBuilder() to construct.
    private TPPPoEStatis(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPPPoEStatis(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPPPoEStatis defaultInstance;
    public static TPPPoEStatis getDefaultInstance() {
      return defaultInstance;
    }

    public TPPPoEStatis getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPPPoEStatis(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              linkKeeptime_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              linkDowntimes_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              numPkgsent_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              numPkgrecved_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              numBytessent_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              numBytesrecved_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEStatis_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEStatis_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.Builder.class);
    }

    public static com.google.protobuf.Parser<TPPPoEStatis> PARSER =
        new com.google.protobuf.AbstractParser<TPPPoEStatis>() {
      public TPPPoEStatis parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPPPoEStatis(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPPPoEStatis> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 link_keeptime = 1;
    public static final int LINK_KEEPTIME_FIELD_NUMBER = 1;
    private int linkKeeptime_;
    /**
     * <code>optional uint32 link_keeptime = 1;</code>
     *
     * <pre>
     *链路建立的时间
     * </pre>
     */
    public boolean hasLinkKeeptime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 link_keeptime = 1;</code>
     *
     * <pre>
     *链路建立的时间
     * </pre>
     */
    public int getLinkKeeptime() {
      return linkKeeptime_;
    }

    // optional uint32 link_downtimes = 2;
    public static final int LINK_DOWNTIMES_FIELD_NUMBER = 2;
    private int linkDowntimes_;
    /**
     * <code>optional uint32 link_downtimes = 2;</code>
     *
     * <pre>
     *链路断链的次数统计
     * </pre>
     */
    public boolean hasLinkDowntimes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 link_downtimes = 2;</code>
     *
     * <pre>
     *链路断链的次数统计
     * </pre>
     */
    public int getLinkDowntimes() {
      return linkDowntimes_;
    }

    // optional uint32 num_pkgsent = 3;
    public static final int NUM_PKGSENT_FIELD_NUMBER = 3;
    private int numPkgsent_;
    /**
     * <code>optional uint32 num_pkgsent = 3;</code>
     *
     * <pre>
     *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
     * </pre>
     */
    public boolean hasNumPkgsent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 num_pkgsent = 3;</code>
     *
     * <pre>
     *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
     * </pre>
     */
    public int getNumPkgsent() {
      return numPkgsent_;
    }

    // optional uint32 num_pkgrecved = 4;
    public static final int NUM_PKGRECVED_FIELD_NUMBER = 4;
    private int numPkgrecved_;
    /**
     * <code>optional uint32 num_pkgrecved = 4;</code>
     *
     * <pre>
     *总共接收的数据包数
     * </pre>
     */
    public boolean hasNumPkgrecved() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 num_pkgrecved = 4;</code>
     *
     * <pre>
     *总共接收的数据包数
     * </pre>
     */
    public int getNumPkgrecved() {
      return numPkgrecved_;
    }

    // optional uint32 num_bytessent = 5;
    public static final int NUM_BYTESSENT_FIELD_NUMBER = 5;
    private int numBytessent_;
    /**
     * <code>optional uint32 num_bytessent = 5;</code>
     *
     * <pre>
     *总共发送的字节数
     * </pre>
     */
    public boolean hasNumBytessent() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 num_bytessent = 5;</code>
     *
     * <pre>
     *总共发送的字节数
     * </pre>
     */
    public int getNumBytessent() {
      return numBytessent_;
    }

    // optional uint32 num_bytesrecved = 6;
    public static final int NUM_BYTESRECVED_FIELD_NUMBER = 6;
    private int numBytesrecved_;
    /**
     * <code>optional uint32 num_bytesrecved = 6;</code>
     *
     * <pre>
     *总共接收的字节数
     * </pre>
     */
    public boolean hasNumBytesrecved() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 num_bytesrecved = 6;</code>
     *
     * <pre>
     *总共接收的字节数
     * </pre>
     */
    public int getNumBytesrecved() {
      return numBytesrecved_;
    }

    private void initFields() {
      linkKeeptime_ = 0;
      linkDowntimes_ = 0;
      numPkgsent_ = 0;
      numPkgrecved_ = 0;
      numBytessent_ = 0;
      numBytesrecved_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, linkKeeptime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, linkDowntimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, numPkgsent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, numPkgrecved_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, numBytessent_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, numBytesrecved_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, linkKeeptime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, linkDowntimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numPkgsent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, numPkgrecved_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, numBytessent_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, numBytesrecved_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPPPoEStatis}
     *
     * <pre>
     ** PPPoE统计信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatisOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEStatis_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEStatis_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        linkKeeptime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        linkDowntimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        numPkgsent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        numPkgrecved_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        numBytessent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        numBytesrecved_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEStatis_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.linkKeeptime_ = linkKeeptime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.linkDowntimes_ = linkDowntimes_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.numPkgsent_ = numPkgsent_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.numPkgrecved_ = numPkgrecved_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.numBytessent_ = numBytessent_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.numBytesrecved_ = numBytesrecved_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis.getDefaultInstance()) return this;
        if (other.hasLinkKeeptime()) {
          setLinkKeeptime(other.getLinkKeeptime());
        }
        if (other.hasLinkDowntimes()) {
          setLinkDowntimes(other.getLinkDowntimes());
        }
        if (other.hasNumPkgsent()) {
          setNumPkgsent(other.getNumPkgsent());
        }
        if (other.hasNumPkgrecved()) {
          setNumPkgrecved(other.getNumPkgrecved());
        }
        if (other.hasNumBytessent()) {
          setNumBytessent(other.getNumBytessent());
        }
        if (other.hasNumBytesrecved()) {
          setNumBytesrecved(other.getNumBytesrecved());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEStatis) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 link_keeptime = 1;
      private int linkKeeptime_ ;
      /**
       * <code>optional uint32 link_keeptime = 1;</code>
       *
       * <pre>
       *链路建立的时间
       * </pre>
       */
      public boolean hasLinkKeeptime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 link_keeptime = 1;</code>
       *
       * <pre>
       *链路建立的时间
       * </pre>
       */
      public int getLinkKeeptime() {
        return linkKeeptime_;
      }
      /**
       * <code>optional uint32 link_keeptime = 1;</code>
       *
       * <pre>
       *链路建立的时间
       * </pre>
       */
      public Builder setLinkKeeptime(int value) {
        bitField0_ |= 0x00000001;
        linkKeeptime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 link_keeptime = 1;</code>
       *
       * <pre>
       *链路建立的时间
       * </pre>
       */
      public Builder clearLinkKeeptime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        linkKeeptime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 link_downtimes = 2;
      private int linkDowntimes_ ;
      /**
       * <code>optional uint32 link_downtimes = 2;</code>
       *
       * <pre>
       *链路断链的次数统计
       * </pre>
       */
      public boolean hasLinkDowntimes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 link_downtimes = 2;</code>
       *
       * <pre>
       *链路断链的次数统计
       * </pre>
       */
      public int getLinkDowntimes() {
        return linkDowntimes_;
      }
      /**
       * <code>optional uint32 link_downtimes = 2;</code>
       *
       * <pre>
       *链路断链的次数统计
       * </pre>
       */
      public Builder setLinkDowntimes(int value) {
        bitField0_ |= 0x00000002;
        linkDowntimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 link_downtimes = 2;</code>
       *
       * <pre>
       *链路断链的次数统计
       * </pre>
       */
      public Builder clearLinkDowntimes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        linkDowntimes_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 num_pkgsent = 3;
      private int numPkgsent_ ;
      /**
       * <code>optional uint32 num_pkgsent = 3;</code>
       *
       * <pre>
       *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
       * </pre>
       */
      public boolean hasNumPkgsent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 num_pkgsent = 3;</code>
       *
       * <pre>
       *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
       * </pre>
       */
      public int getNumPkgsent() {
        return numPkgsent_;
      }
      /**
       * <code>optional uint32 num_pkgsent = 3;</code>
       *
       * <pre>
       *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
       * </pre>
       */
      public Builder setNumPkgsent(int value) {
        bitField0_ |= 0x00000004;
        numPkgsent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_pkgsent = 3;</code>
       *
       * <pre>
       *总共发送的数据包数--包括各类协议包以及上层业务程序的数据包/
       * </pre>
       */
      public Builder clearNumPkgsent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numPkgsent_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 num_pkgrecved = 4;
      private int numPkgrecved_ ;
      /**
       * <code>optional uint32 num_pkgrecved = 4;</code>
       *
       * <pre>
       *总共接收的数据包数
       * </pre>
       */
      public boolean hasNumPkgrecved() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 num_pkgrecved = 4;</code>
       *
       * <pre>
       *总共接收的数据包数
       * </pre>
       */
      public int getNumPkgrecved() {
        return numPkgrecved_;
      }
      /**
       * <code>optional uint32 num_pkgrecved = 4;</code>
       *
       * <pre>
       *总共接收的数据包数
       * </pre>
       */
      public Builder setNumPkgrecved(int value) {
        bitField0_ |= 0x00000008;
        numPkgrecved_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_pkgrecved = 4;</code>
       *
       * <pre>
       *总共接收的数据包数
       * </pre>
       */
      public Builder clearNumPkgrecved() {
        bitField0_ = (bitField0_ & ~0x00000008);
        numPkgrecved_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 num_bytessent = 5;
      private int numBytessent_ ;
      /**
       * <code>optional uint32 num_bytessent = 5;</code>
       *
       * <pre>
       *总共发送的字节数
       * </pre>
       */
      public boolean hasNumBytessent() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 num_bytessent = 5;</code>
       *
       * <pre>
       *总共发送的字节数
       * </pre>
       */
      public int getNumBytessent() {
        return numBytessent_;
      }
      /**
       * <code>optional uint32 num_bytessent = 5;</code>
       *
       * <pre>
       *总共发送的字节数
       * </pre>
       */
      public Builder setNumBytessent(int value) {
        bitField0_ |= 0x00000010;
        numBytessent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_bytessent = 5;</code>
       *
       * <pre>
       *总共发送的字节数
       * </pre>
       */
      public Builder clearNumBytessent() {
        bitField0_ = (bitField0_ & ~0x00000010);
        numBytessent_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 num_bytesrecved = 6;
      private int numBytesrecved_ ;
      /**
       * <code>optional uint32 num_bytesrecved = 6;</code>
       *
       * <pre>
       *总共接收的字节数
       * </pre>
       */
      public boolean hasNumBytesrecved() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 num_bytesrecved = 6;</code>
       *
       * <pre>
       *总共接收的字节数
       * </pre>
       */
      public int getNumBytesrecved() {
        return numBytesrecved_;
      }
      /**
       * <code>optional uint32 num_bytesrecved = 6;</code>
       *
       * <pre>
       *总共接收的字节数
       * </pre>
       */
      public Builder setNumBytesrecved(int value) {
        bitField0_ |= 0x00000020;
        numBytesrecved_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_bytesrecved = 6;</code>
       *
       * <pre>
       *总共接收的字节数
       * </pre>
       */
      public Builder clearNumBytesrecved() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numBytesrecved_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPPPoEStatis)
    }

    static {
      defaultInstance = new TPPPoEStatis(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPPPoEStatis)
  }

  public interface TPPPoEVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string version = 1;
    /**
     * <code>optional string version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional string version = 1;</code>
     */
    java.lang.String getVersion();
    /**
     * <code>optional string version = 1;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code mt.TPPPoEVersion}
   *
   * <pre>
   ** PPPoE版本信息 
   * </pre>
   */
  public static final class TPPPoEVersion extends
      com.google.protobuf.GeneratedMessage
      implements TPPPoEVersionOrBuilder {
    // Use TPPPoEVersion.newBuilder() to construct.
    private TPPPoEVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPPPoEVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPPPoEVersion defaultInstance;
    public static TPPPoEVersion getDefaultInstance() {
      return defaultInstance;
    }

    public TPPPoEVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPPPoEVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              version_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<TPPPoEVersion> PARSER =
        new com.google.protobuf.AbstractParser<TPPPoEVersion>() {
      public TPPPoEVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPPPoEVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPPPoEVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private java.lang.Object version_;
    /**
     * <code>optional string version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string version = 1;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      version_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPPPoEVersion}
     *
     * <pre>
     ** PPPoE版本信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPPPoEVersion_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          bitField0_ |= 0x00000001;
          version_ = other.version_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPPPoEVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string version = 1;
      private java.lang.Object version_ = "";
      /**
       * <code>optional string version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string version = 1;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string version = 1;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string version = 1;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPPPoEVersion)
    }

    static {
      defaultInstance = new TPPPoEVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPPPoEVersion)
  }

  public interface TE1SerialInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 used_flag = 1;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    boolean hasUsedFlag();
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    int getUsedFlag();

    // optional uint32 serialid = 2;
    /**
     * <code>optional uint32 serialid = 2;</code>
     *
     * <pre>
     *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
     * </pre>
     */
    boolean hasSerialid();
    /**
     * <code>optional uint32 serialid = 2;</code>
     *
     * <pre>
     *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
     * </pre>
     */
    int getSerialid();

    // optional uint32 e1id = 3;
    /**
     * <code>optional uint32 e1id = 3;</code>
     *
     * <pre>
     *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
     * </pre>
     */
    boolean hasE1Id();
    /**
     * <code>optional uint32 e1id = 3;</code>
     *
     * <pre>
     *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
     * </pre>
     */
    int getE1Id();

    // optional uint32 e1_ts_mask = 4;
    /**
     * <code>optional uint32 e1_ts_mask = 4;</code>
     *
     * <pre>
     *E1时隙分配说明,详见下
     * </pre>
     */
    boolean hasE1TsMask();
    /**
     * <code>optional uint32 e1_ts_mask = 4;</code>
     *
     * <pre>
     *E1时隙分配说明,详见下
     * </pre>
     */
    int getE1TsMask();

    // optional uint32 e1chan_groupid = 5;
    /**
     * <code>optional uint32 e1chan_groupid = 5;</code>
     *
     * <pre>
     *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
     * </pre>
     */
    boolean hasE1ChanGroupid();
    /**
     * <code>optional uint32 e1chan_groupid = 5;</code>
     *
     * <pre>
     *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
     * </pre>
     */
    int getE1ChanGroupid();

    // optional uint32 protocol_type = 6;
    /**
     * <code>optional uint32 protocol_type = 6;</code>
     *
     * <pre>
     *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
     * </pre>
     */
    boolean hasProtocolType();
    /**
     * <code>optional uint32 protocol_type = 6;</code>
     *
     * <pre>
     *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
     * </pre>
     */
    int getProtocolType();

    // optional uint32 echo_interval = 7;
    /**
     * <code>optional uint32 echo_interval = 7;</code>
     *
     * <pre>
     *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
     * </pre>
     */
    boolean hasEchoInterval();
    /**
     * <code>optional uint32 echo_interval = 7;</code>
     *
     * <pre>
     *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
     * </pre>
     */
    int getEchoInterval();

    // optional uint32 echo_maxretry = 8;
    /**
     * <code>optional uint32 echo_maxretry = 8;</code>
     *
     * <pre>
     *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
     * </pre>
     */
    boolean hasEchoMaxretry();
    /**
     * <code>optional uint32 echo_maxretry = 8;</code>
     *
     * <pre>
     *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
     * </pre>
     */
    int getEchoMaxretry();
  }
  /**
   * Protobuf type {@code mt.TE1SerialInfo}
   *
   * <pre>
   ** E1 Serial信息 
   * </pre>
   */
  public static final class TE1SerialInfo extends
      com.google.protobuf.GeneratedMessage
      implements TE1SerialInfoOrBuilder {
    // Use TE1SerialInfo.newBuilder() to construct.
    private TE1SerialInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TE1SerialInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TE1SerialInfo defaultInstance;
    public static TE1SerialInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TE1SerialInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TE1SerialInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              usedFlag_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serialid_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              e1Id_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              e1TsMask_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              e1ChanGroupid_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              protocolType_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              echoInterval_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              echoMaxretry_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SerialInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SerialInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TE1SerialInfo> PARSER =
        new com.google.protobuf.AbstractParser<TE1SerialInfo>() {
      public TE1SerialInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TE1SerialInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TE1SerialInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 used_flag = 1;
    public static final int USED_FLAG_FIELD_NUMBER = 1;
    private int usedFlag_;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public boolean hasUsedFlag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public int getUsedFlag() {
      return usedFlag_;
    }

    // optional uint32 serialid = 2;
    public static final int SERIALID_FIELD_NUMBER = 2;
    private int serialid_;
    /**
     * <code>optional uint32 serialid = 2;</code>
     *
     * <pre>
     *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
     * </pre>
     */
    public boolean hasSerialid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 serialid = 2;</code>
     *
     * <pre>
     *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
     * </pre>
     */
    public int getSerialid() {
      return serialid_;
    }

    // optional uint32 e1id = 3;
    public static final int E1ID_FIELD_NUMBER = 3;
    private int e1Id_;
    /**
     * <code>optional uint32 e1id = 3;</code>
     *
     * <pre>
     *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
     * </pre>
     */
    public boolean hasE1Id() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 e1id = 3;</code>
     *
     * <pre>
     *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
     * </pre>
     */
    public int getE1Id() {
      return e1Id_;
    }

    // optional uint32 e1_ts_mask = 4;
    public static final int E1_TS_MASK_FIELD_NUMBER = 4;
    private int e1TsMask_;
    /**
     * <code>optional uint32 e1_ts_mask = 4;</code>
     *
     * <pre>
     *E1时隙分配说明,详见下
     * </pre>
     */
    public boolean hasE1TsMask() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 e1_ts_mask = 4;</code>
     *
     * <pre>
     *E1时隙分配说明,详见下
     * </pre>
     */
    public int getE1TsMask() {
      return e1TsMask_;
    }

    // optional uint32 e1chan_groupid = 5;
    public static final int E1CHAN_GROUPID_FIELD_NUMBER = 5;
    private int e1ChanGroupid_;
    /**
     * <code>optional uint32 e1chan_groupid = 5;</code>
     *
     * <pre>
     *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
     * </pre>
     */
    public boolean hasE1ChanGroupid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 e1chan_groupid = 5;</code>
     *
     * <pre>
     *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
     * </pre>
     */
    public int getE1ChanGroupid() {
      return e1ChanGroupid_;
    }

    // optional uint32 protocol_type = 6;
    public static final int PROTOCOL_TYPE_FIELD_NUMBER = 6;
    private int protocolType_;
    /**
     * <code>optional uint32 protocol_type = 6;</code>
     *
     * <pre>
     *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
     * </pre>
     */
    public boolean hasProtocolType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 protocol_type = 6;</code>
     *
     * <pre>
     *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
     * </pre>
     */
    public int getProtocolType() {
      return protocolType_;
    }

    // optional uint32 echo_interval = 7;
    public static final int ECHO_INTERVAL_FIELD_NUMBER = 7;
    private int echoInterval_;
    /**
     * <code>optional uint32 echo_interval = 7;</code>
     *
     * <pre>
     *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
     * </pre>
     */
    public boolean hasEchoInterval() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 echo_interval = 7;</code>
     *
     * <pre>
     *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
     * </pre>
     */
    public int getEchoInterval() {
      return echoInterval_;
    }

    // optional uint32 echo_maxretry = 8;
    public static final int ECHO_MAXRETRY_FIELD_NUMBER = 8;
    private int echoMaxretry_;
    /**
     * <code>optional uint32 echo_maxretry = 8;</code>
     *
     * <pre>
     *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
     * </pre>
     */
    public boolean hasEchoMaxretry() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 echo_maxretry = 8;</code>
     *
     * <pre>
     *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
     * </pre>
     */
    public int getEchoMaxretry() {
      return echoMaxretry_;
    }

    private void initFields() {
      usedFlag_ = 0;
      serialid_ = 0;
      e1Id_ = 0;
      e1TsMask_ = 0;
      e1ChanGroupid_ = 0;
      protocolType_ = 0;
      echoInterval_ = 0;
      echoMaxretry_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, serialid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, e1Id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, e1TsMask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, e1ChanGroupid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, protocolType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, echoInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, echoMaxretry_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, serialid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, e1Id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, e1TsMask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, e1ChanGroupid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, protocolType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, echoInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, echoMaxretry_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TE1SerialInfo}
     *
     * <pre>
     ** E1 Serial信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SerialInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SerialInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usedFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serialid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        e1Id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        e1TsMask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        e1ChanGroupid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        protocolType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        echoInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        echoMaxretry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SerialInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedFlag_ = usedFlag_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serialid_ = serialid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.e1Id_ = e1Id_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.e1TsMask_ = e1TsMask_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.e1ChanGroupid_ = e1ChanGroupid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.protocolType_ = protocolType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.echoInterval_ = echoInterval_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.echoMaxretry_ = echoMaxretry_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance()) return this;
        if (other.hasUsedFlag()) {
          setUsedFlag(other.getUsedFlag());
        }
        if (other.hasSerialid()) {
          setSerialid(other.getSerialid());
        }
        if (other.hasE1Id()) {
          setE1Id(other.getE1Id());
        }
        if (other.hasE1TsMask()) {
          setE1TsMask(other.getE1TsMask());
        }
        if (other.hasE1ChanGroupid()) {
          setE1ChanGroupid(other.getE1ChanGroupid());
        }
        if (other.hasProtocolType()) {
          setProtocolType(other.getProtocolType());
        }
        if (other.hasEchoInterval()) {
          setEchoInterval(other.getEchoInterval());
        }
        if (other.hasEchoMaxretry()) {
          setEchoMaxretry(other.getEchoMaxretry());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 used_flag = 1;
      private int usedFlag_ ;
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public boolean hasUsedFlag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public int getUsedFlag() {
        return usedFlag_;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder setUsedFlag(int value) {
        bitField0_ |= 0x00000001;
        usedFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前serial同步接口使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder clearUsedFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usedFlag_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 serialid = 2;
      private int serialid_ ;
      /**
       * <code>optional uint32 serialid = 2;</code>
       *
       * <pre>
       *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
       * </pre>
       */
      public boolean hasSerialid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 serialid = 2;</code>
       *
       * <pre>
       *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
       * </pre>
       */
      public int getSerialid() {
        return serialid_;
      }
      /**
       * <code>optional uint32 serialid = 2;</code>
       *
       * <pre>
       *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
       * </pre>
       */
      public Builder setSerialid(int value) {
        bitField0_ |= 0x00000002;
        serialid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 serialid = 2;</code>
       *
       * <pre>
       *serial同步接口编号，e1链路从16开始，有效范围16~62,不可冲突
       * </pre>
       */
      public Builder clearSerialid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serialid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 e1id = 3;
      private int e1Id_ ;
      /**
       * <code>optional uint32 e1id = 3;</code>
       *
       * <pre>
       *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
       * </pre>
       */
      public boolean hasE1Id() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 e1id = 3;</code>
       *
       * <pre>
       *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
       * </pre>
       */
      public int getE1Id() {
        return e1Id_;
      }
      /**
       * <code>optional uint32 e1id = 3;</code>
       *
       * <pre>
       *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
       * </pre>
       */
      public Builder setE1Id(int value) {
        bitField0_ |= 0x00000004;
        e1Id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 e1id = 3;</code>
       *
       * <pre>
       *该serial同步接口对应的e1编号，可配置范围0~E1_MAXNUM - 1 E1_MAXNUM取决于相应硬件支持的e1个数.
       * </pre>
       */
      public Builder clearE1Id() {
        bitField0_ = (bitField0_ & ~0x00000004);
        e1Id_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 e1_ts_mask = 4;
      private int e1TsMask_ ;
      /**
       * <code>optional uint32 e1_ts_mask = 4;</code>
       *
       * <pre>
       *E1时隙分配说明,详见下
       * </pre>
       */
      public boolean hasE1TsMask() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 e1_ts_mask = 4;</code>
       *
       * <pre>
       *E1时隙分配说明,详见下
       * </pre>
       */
      public int getE1TsMask() {
        return e1TsMask_;
      }
      /**
       * <code>optional uint32 e1_ts_mask = 4;</code>
       *
       * <pre>
       *E1时隙分配说明,详见下
       * </pre>
       */
      public Builder setE1TsMask(int value) {
        bitField0_ |= 0x00000008;
        e1TsMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 e1_ts_mask = 4;</code>
       *
       * <pre>
       *E1时隙分配说明,详见下
       * </pre>
       */
      public Builder clearE1TsMask() {
        bitField0_ = (bitField0_ & ~0x00000008);
        e1TsMask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 e1chan_groupid = 5;
      private int e1ChanGroupid_ ;
      /**
       * <code>optional uint32 e1chan_groupid = 5;</code>
       *
       * <pre>
       *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
       * </pre>
       */
      public boolean hasE1ChanGroupid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 e1chan_groupid = 5;</code>
       *
       * <pre>
       *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
       * </pre>
       */
      public int getE1ChanGroupid() {
        return e1ChanGroupid_;
      }
      /**
       * <code>optional uint32 e1chan_groupid = 5;</code>
       *
       * <pre>
       *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
       * </pre>
       */
      public Builder setE1ChanGroupid(int value) {
        bitField0_ |= 0x00000010;
        e1ChanGroupid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 e1chan_groupid = 5;</code>
       *
       * <pre>
       *E1时隙分配所在的编组号，可配置范围0~7; 如果不拆分一个E1使用的话填0;如果拆分的话必须对每个时隙段进行依次编号
       * </pre>
       */
      public Builder clearE1ChanGroupid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        e1ChanGroupid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 protocol_type = 6;
      private int protocolType_ ;
      /**
       * <code>optional uint32 protocol_type = 6;</code>
       *
       * <pre>
       *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
       * </pre>
       */
      public boolean hasProtocolType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 protocol_type = 6;</code>
       *
       * <pre>
       *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
       * </pre>
       */
      public int getProtocolType() {
        return protocolType_;
      }
      /**
       * <code>optional uint32 protocol_type = 6;</code>
       *
       * <pre>
       *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
       * </pre>
       */
      public Builder setProtocolType(int value) {
        bitField0_ |= 0x00000020;
        protocolType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 protocol_type = 6;</code>
       *
       * <pre>
       *接口协议封装类型, 如果是单E1连接可以指定PPP/HDLC，如果是多E1捆绑连接必须是PPP协议
       * </pre>
       */
      public Builder clearProtocolType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        protocolType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 echo_interval = 7;
      private int echoInterval_ ;
      /**
       * <code>optional uint32 echo_interval = 7;</code>
       *
       * <pre>
       *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
       * </pre>
       */
      public boolean hasEchoInterval() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 echo_interval = 7;</code>
       *
       * <pre>
       *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
       * </pre>
       */
      public int getEchoInterval() {
        return echoInterval_;
      }
      /**
       * <code>optional uint32 echo_interval = 7;</code>
       *
       * <pre>
       *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
       * </pre>
       */
      public Builder setEchoInterval(int value) {
        bitField0_ |= 0x00000040;
        echoInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 echo_interval = 7;</code>
       *
       * <pre>
       *对应serial同步接口的echo请求时间间隔，秒为单位，有效范围0-256，填默认值2即可
       * </pre>
       */
      public Builder clearEchoInterval() {
        bitField0_ = (bitField0_ & ~0x00000040);
        echoInterval_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 echo_maxretry = 8;
      private int echoMaxretry_ ;
      /**
       * <code>optional uint32 echo_maxretry = 8;</code>
       *
       * <pre>
       *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
       * </pre>
       */
      public boolean hasEchoMaxretry() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 echo_maxretry = 8;</code>
       *
       * <pre>
       *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
       * </pre>
       */
      public int getEchoMaxretry() {
        return echoMaxretry_;
      }
      /**
       * <code>optional uint32 echo_maxretry = 8;</code>
       *
       * <pre>
       *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
       * </pre>
       */
      public Builder setEchoMaxretry(int value) {
        bitField0_ |= 0x00000080;
        echoMaxretry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 echo_maxretry = 8;</code>
       *
       * <pre>
       *对应serial同步接口的echo最大重发次数，有效范围0-256，填默认值5即可
       * </pre>
       */
      public Builder clearEchoMaxretry() {
        bitField0_ = (bitField0_ & ~0x00000080);
        echoMaxretry_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TE1SerialInfo)
    }

    static {
      defaultInstance = new TE1SerialInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TE1SerialInfo)
  }

  public interface TE1SingleChainInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 used_flag = 1;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    boolean hasUsedFlag();
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    int getUsedFlag();

    // optional uint32 ip = 2;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 3;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序
     * </pre>
     */
    int getMask();

    // optional .mt.TE1SerialInfo serialinfo = 4;
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    boolean hasSerialinfo();
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfo();
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfoOrBuilder();
  }
  /**
   * Protobuf type {@code mt.TE1SingleChainInfo}
   *
   * <pre>
   ** E1单通道信息 
   * </pre>
   */
  public static final class TE1SingleChainInfo extends
      com.google.protobuf.GeneratedMessage
      implements TE1SingleChainInfoOrBuilder {
    // Use TE1SingleChainInfo.newBuilder() to construct.
    private TE1SingleChainInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TE1SingleChainInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TE1SingleChainInfo defaultInstance;
    public static TE1SingleChainInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TE1SingleChainInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TE1SingleChainInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              usedFlag_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ip_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mask_ = input.readUInt32();
              break;
            }
            case 34: {
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = serialinfo_.toBuilder();
              }
              serialinfo_ = input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serialinfo_);
                serialinfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SingleChainInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SingleChainInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TE1SingleChainInfo> PARSER =
        new com.google.protobuf.AbstractParser<TE1SingleChainInfo>() {
      public TE1SingleChainInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TE1SingleChainInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TE1SingleChainInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 used_flag = 1;
    public static final int USED_FLAG_FIELD_NUMBER = 1;
    private int usedFlag_;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public boolean hasUsedFlag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public int getUsedFlag() {
      return usedFlag_;
    }

    // optional uint32 ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private int ip_;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 3;
    public static final int MASK_FIELD_NUMBER = 3;
    private int mask_;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional .mt.TE1SerialInfo serialinfo = 4;
    public static final int SERIALINFO_FIELD_NUMBER = 4;
    private com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo serialinfo_;
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    public boolean hasSerialinfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfo() {
      return serialinfo_;
    }
    /**
     * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
     *
     * <pre>
     *相应serial同步接口链路参数/
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfoOrBuilder() {
      return serialinfo_;
    }

    private void initFields() {
      usedFlag_ = 0;
      ip_ = 0;
      mask_ = 0;
      serialinfo_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, serialinfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, serialinfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TE1SingleChainInfo}
     *
     * <pre>
     ** E1单通道信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SingleChainInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SingleChainInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSerialinfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usedFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (serialinfoBuilder_ == null) {
          serialinfo_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance();
        } else {
          serialinfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1SingleChainInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedFlag_ = usedFlag_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (serialinfoBuilder_ == null) {
          result.serialinfo_ = serialinfo_;
        } else {
          result.serialinfo_ = serialinfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo.getDefaultInstance()) return this;
        if (other.hasUsedFlag()) {
          setUsedFlag(other.getUsedFlag());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasSerialinfo()) {
          mergeSerialinfo(other.getSerialinfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SingleChainInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 used_flag = 1;
      private int usedFlag_ ;
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public boolean hasUsedFlag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public int getUsedFlag() {
        return usedFlag_;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder setUsedFlag(int value) {
        bitField0_ |= 0x00000001;
        usedFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1单链路连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder clearUsedFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usedFlag_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ip = 2;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 3;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000004;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.TE1SerialInfo serialinfo = 4;
      private com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo serialinfo_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> serialinfoBuilder_;
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public boolean hasSerialinfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfo() {
        if (serialinfoBuilder_ == null) {
          return serialinfo_;
        } else {
          return serialinfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public Builder setSerialinfo(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo value) {
        if (serialinfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serialinfo_ = value;
          onChanged();
        } else {
          serialinfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public Builder setSerialinfo(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder builderForValue) {
        if (serialinfoBuilder_ == null) {
          serialinfo_ = builderForValue.build();
          onChanged();
        } else {
          serialinfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public Builder mergeSerialinfo(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo value) {
        if (serialinfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              serialinfo_ != com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance()) {
            serialinfo_ =
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.newBuilder(serialinfo_).mergeFrom(value).buildPartial();
          } else {
            serialinfo_ = value;
          }
          onChanged();
        } else {
          serialinfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public Builder clearSerialinfo() {
        if (serialinfoBuilder_ == null) {
          serialinfo_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance();
          onChanged();
        } else {
          serialinfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder getSerialinfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSerialinfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfoOrBuilder() {
        if (serialinfoBuilder_ != null) {
          return serialinfoBuilder_.getMessageOrBuilder();
        } else {
          return serialinfo_;
        }
      }
      /**
       * <code>optional .mt.TE1SerialInfo serialinfo = 4;</code>
       *
       * <pre>
       *相应serial同步接口链路参数/
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> 
          getSerialinfoFieldBuilder() {
        if (serialinfoBuilder_ == null) {
          serialinfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder>(
                  serialinfo_,
                  getParentForChildren(),
                  isClean());
          serialinfo_ = null;
        }
        return serialinfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TE1SingleChainInfo)
    }

    static {
      defaultInstance = new TE1SingleChainInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TE1SingleChainInfo)
  }

  public interface TE1MultiChainInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 used_flag = 1;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    boolean hasUsedFlag();
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    int getUsedFlag();

    // optional uint32 ip = 2;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 3;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序 
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序 
     * </pre>
     */
    int getMask();

    // optional uint32 auth_type = 4;
    /**
     * <code>optional uint32 auth_type = 4;</code>
     *
     * <pre>
     *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
     * </pre>
     */
    boolean hasAuthType();
    /**
     * <code>optional uint32 auth_type = 4;</code>
     *
     * <pre>
     *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
     * </pre>
     */
    int getAuthType();

    // optional uint32 frag_minpackage_len = 5;
    /**
     * <code>optional uint32 frag_minpackage_len = 5;</code>
     *
     * <pre>
     *最小分片包长，字节为单位，范围20~1500，默认填20
     * </pre>
     */
    boolean hasFragMinpackageLen();
    /**
     * <code>optional uint32 frag_minpackage_len = 5;</code>
     *
     * <pre>
     *最小分片包长，字节为单位，范围20~1500，默认填20
     * </pre>
     */
    int getFragMinpackageLen();

    // optional string svr_usrname = 6;
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    boolean hasSvrUsrname();
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    java.lang.String getSvrUsrname();
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    com.google.protobuf.ByteString
        getSvrUsrnameBytes();

    // optional string svr_usrpwd = 7;
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    boolean hasSvrUsrpwd();
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    java.lang.String getSvrUsrpwd();
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    com.google.protobuf.ByteString
        getSvrUsrpwdBytes();

    // optional string sent_usrname = 8;
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    boolean hasSentUsrname();
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    java.lang.String getSentUsrname();
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    com.google.protobuf.ByteString
        getSentUsrnameBytes();

    // optional string sent_usrpwd = 9;
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    boolean hasSentUsrpwd();
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    java.lang.String getSentUsrpwd();
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    com.google.protobuf.ByteString
        getSentUsrpwdBytes();

    // repeated .mt.TE1SerialInfo serialinfolist = 10;
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> 
        getSerialinfolistList();
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfolist(int index);
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    int getSerialinfolistCount();
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> 
        getSerialinfolistOrBuilderList();
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfolistOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TE1MultiChainInfo}
   *
   * <pre>
   ** E1多通道信息 
   * </pre>
   */
  public static final class TE1MultiChainInfo extends
      com.google.protobuf.GeneratedMessage
      implements TE1MultiChainInfoOrBuilder {
    // Use TE1MultiChainInfo.newBuilder() to construct.
    private TE1MultiChainInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TE1MultiChainInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TE1MultiChainInfo defaultInstance;
    public static TE1MultiChainInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TE1MultiChainInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TE1MultiChainInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              usedFlag_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ip_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mask_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              authType_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fragMinpackageLen_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              svrUsrname_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              svrUsrpwd_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              sentUsrname_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              sentUsrpwd_ = input.readBytes();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                serialinfolist_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo>();
                mutable_bitField0_ |= 0x00000200;
              }
              serialinfolist_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          serialinfolist_ = java.util.Collections.unmodifiableList(serialinfolist_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1MultiChainInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1MultiChainInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TE1MultiChainInfo> PARSER =
        new com.google.protobuf.AbstractParser<TE1MultiChainInfo>() {
      public TE1MultiChainInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TE1MultiChainInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TE1MultiChainInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 used_flag = 1;
    public static final int USED_FLAG_FIELD_NUMBER = 1;
    private int usedFlag_;
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public boolean hasUsedFlag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 used_flag = 1;</code>
     *
     * <pre>
     *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
     * </pre>
     */
    public int getUsedFlag() {
      return usedFlag_;
    }

    // optional uint32 ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private int ip_;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *ip地址，网络序
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 3;
    public static final int MASK_FIELD_NUMBER = 3;
    private int mask_;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序 
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *掩码，网络序 
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional uint32 auth_type = 4;
    public static final int AUTH_TYPE_FIELD_NUMBER = 4;
    private int authType_;
    /**
     * <code>optional uint32 auth_type = 4;</code>
     *
     * <pre>
     *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
     * </pre>
     */
    public boolean hasAuthType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 auth_type = 4;</code>
     *
     * <pre>
     *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
     * </pre>
     */
    public int getAuthType() {
      return authType_;
    }

    // optional uint32 frag_minpackage_len = 5;
    public static final int FRAG_MINPACKAGE_LEN_FIELD_NUMBER = 5;
    private int fragMinpackageLen_;
    /**
     * <code>optional uint32 frag_minpackage_len = 5;</code>
     *
     * <pre>
     *最小分片包长，字节为单位，范围20~1500，默认填20
     * </pre>
     */
    public boolean hasFragMinpackageLen() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 frag_minpackage_len = 5;</code>
     *
     * <pre>
     *最小分片包长，字节为单位，范围20~1500，默认填20
     * </pre>
     */
    public int getFragMinpackageLen() {
      return fragMinpackageLen_;
    }

    // optional string svr_usrname = 6;
    public static final int SVR_USRNAME_FIELD_NUMBER = 6;
    private java.lang.Object svrUsrname_;
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    public boolean hasSvrUsrname() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    public java.lang.String getSvrUsrname() {
      java.lang.Object ref = svrUsrname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          svrUsrname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string svr_usrname = 6;</code>
     *
     * <pre>
     *服务端用户名称，用来验证对端的数据
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSvrUsrnameBytes() {
      java.lang.Object ref = svrUsrname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        svrUsrname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string svr_usrpwd = 7;
    public static final int SVR_USRPWD_FIELD_NUMBER = 7;
    private java.lang.Object svrUsrpwd_;
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    public boolean hasSvrUsrpwd() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    public java.lang.String getSvrUsrpwd() {
      java.lang.Object ref = svrUsrpwd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          svrUsrpwd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string svr_usrpwd = 7;</code>
     *
     * <pre>
     *服务端用户密码，用来验证对端的数据 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSvrUsrpwdBytes() {
      java.lang.Object ref = svrUsrpwd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        svrUsrpwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string sent_usrname = 8;
    public static final int SENT_USRNAME_FIELD_NUMBER = 8;
    private java.lang.Object sentUsrname_;
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    public boolean hasSentUsrname() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    public java.lang.String getSentUsrname() {
      java.lang.Object ref = sentUsrname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sentUsrname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sent_usrname = 8;</code>
     *
     * <pre>
     *客户端用户名称，用来被对端验证
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSentUsrnameBytes() {
      java.lang.Object ref = sentUsrname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sentUsrname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string sent_usrpwd = 9;
    public static final int SENT_USRPWD_FIELD_NUMBER = 9;
    private java.lang.Object sentUsrpwd_;
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    public boolean hasSentUsrpwd() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    public java.lang.String getSentUsrpwd() {
      java.lang.Object ref = sentUsrpwd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sentUsrpwd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sent_usrpwd = 9;</code>
     *
     * <pre>
     *客户端用户密码，用来被对端验证
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSentUsrpwdBytes() {
      java.lang.Object ref = sentUsrpwd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sentUsrpwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .mt.TE1SerialInfo serialinfolist = 10;
    public static final int SERIALINFOLIST_FIELD_NUMBER = 10;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> serialinfolist_;
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> getSerialinfolistList() {
      return serialinfolist_;
    }
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> 
        getSerialinfolistOrBuilderList() {
      return serialinfolist_;
    }
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    public int getSerialinfolistCount() {
      return serialinfolist_.size();
    }
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfolist(int index) {
      return serialinfolist_.get(index);
    }
    /**
     * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
     *
     * <pre>
     *每个被捆绑的serial同步接口链路参数
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfolistOrBuilder(
        int index) {
      return serialinfolist_.get(index);
    }

    private void initFields() {
      usedFlag_ = 0;
      ip_ = 0;
      mask_ = 0;
      authType_ = 0;
      fragMinpackageLen_ = 0;
      svrUsrname_ = "";
      svrUsrpwd_ = "";
      sentUsrname_ = "";
      sentUsrpwd_ = "";
      serialinfolist_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, authType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, fragMinpackageLen_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSvrUsrnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getSvrUsrpwdBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getSentUsrnameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getSentUsrpwdBytes());
      }
      for (int i = 0; i < serialinfolist_.size(); i++) {
        output.writeMessage(10, serialinfolist_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, usedFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, authType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, fragMinpackageLen_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSvrUsrnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getSvrUsrpwdBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSentUsrnameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getSentUsrpwdBytes());
      }
      for (int i = 0; i < serialinfolist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, serialinfolist_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TE1MultiChainInfo}
     *
     * <pre>
     ** E1多通道信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1MultiChainInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1MultiChainInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSerialinfolistFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usedFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        authType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fragMinpackageLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        svrUsrname_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        svrUsrpwd_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        sentUsrname_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        sentUsrpwd_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        if (serialinfolistBuilder_ == null) {
          serialinfolist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          serialinfolistBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1MultiChainInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedFlag_ = usedFlag_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.authType_ = authType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fragMinpackageLen_ = fragMinpackageLen_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.svrUsrname_ = svrUsrname_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.svrUsrpwd_ = svrUsrpwd_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sentUsrname_ = sentUsrname_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sentUsrpwd_ = sentUsrpwd_;
        if (serialinfolistBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            serialinfolist_ = java.util.Collections.unmodifiableList(serialinfolist_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.serialinfolist_ = serialinfolist_;
        } else {
          result.serialinfolist_ = serialinfolistBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo.getDefaultInstance()) return this;
        if (other.hasUsedFlag()) {
          setUsedFlag(other.getUsedFlag());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasAuthType()) {
          setAuthType(other.getAuthType());
        }
        if (other.hasFragMinpackageLen()) {
          setFragMinpackageLen(other.getFragMinpackageLen());
        }
        if (other.hasSvrUsrname()) {
          bitField0_ |= 0x00000020;
          svrUsrname_ = other.svrUsrname_;
          onChanged();
        }
        if (other.hasSvrUsrpwd()) {
          bitField0_ |= 0x00000040;
          svrUsrpwd_ = other.svrUsrpwd_;
          onChanged();
        }
        if (other.hasSentUsrname()) {
          bitField0_ |= 0x00000080;
          sentUsrname_ = other.sentUsrname_;
          onChanged();
        }
        if (other.hasSentUsrpwd()) {
          bitField0_ |= 0x00000100;
          sentUsrpwd_ = other.sentUsrpwd_;
          onChanged();
        }
        if (serialinfolistBuilder_ == null) {
          if (!other.serialinfolist_.isEmpty()) {
            if (serialinfolist_.isEmpty()) {
              serialinfolist_ = other.serialinfolist_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureSerialinfolistIsMutable();
              serialinfolist_.addAll(other.serialinfolist_);
            }
            onChanged();
          }
        } else {
          if (!other.serialinfolist_.isEmpty()) {
            if (serialinfolistBuilder_.isEmpty()) {
              serialinfolistBuilder_.dispose();
              serialinfolistBuilder_ = null;
              serialinfolist_ = other.serialinfolist_;
              bitField0_ = (bitField0_ & ~0x00000200);
              serialinfolistBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSerialinfolistFieldBuilder() : null;
            } else {
              serialinfolistBuilder_.addAllMessages(other.serialinfolist_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1MultiChainInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 used_flag = 1;
      private int usedFlag_ ;
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public boolean hasUsedFlag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public int getUsedFlag() {
        return usedFlag_;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder setUsedFlag(int value) {
        bitField0_ |= 0x00000001;
        usedFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 used_flag = 1;</code>
       *
       * <pre>
       *当前E1多链路捆绑连接通道使用标志,置1使用，下面参数有效；0不使用，下面参数无效
       * </pre>
       */
      public Builder clearUsedFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usedFlag_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ip = 2;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *ip地址，网络序
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 3;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序 
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序 
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序 
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000004;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *掩码，网络序 
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 auth_type = 4;
      private int authType_ ;
      /**
       * <code>optional uint32 auth_type = 4;</code>
       *
       * <pre>
       *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
       * </pre>
       */
      public boolean hasAuthType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 auth_type = 4;</code>
       *
       * <pre>
       *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
       * </pre>
       */
      public int getAuthType() {
        return authType_;
      }
      /**
       * <code>optional uint32 auth_type = 4;</code>
       *
       * <pre>
       *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
       * </pre>
       */
      public Builder setAuthType(int value) {
        bitField0_ |= 0x00000008;
        authType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 auth_type = 4;</code>
       *
       * <pre>
       *PPP链接的验证方法PAP/CHAP,默认填MP_AUTHENTICATION_PAP  
       * </pre>
       */
      public Builder clearAuthType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        authType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 frag_minpackage_len = 5;
      private int fragMinpackageLen_ ;
      /**
       * <code>optional uint32 frag_minpackage_len = 5;</code>
       *
       * <pre>
       *最小分片包长，字节为单位，范围20~1500，默认填20
       * </pre>
       */
      public boolean hasFragMinpackageLen() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 frag_minpackage_len = 5;</code>
       *
       * <pre>
       *最小分片包长，字节为单位，范围20~1500，默认填20
       * </pre>
       */
      public int getFragMinpackageLen() {
        return fragMinpackageLen_;
      }
      /**
       * <code>optional uint32 frag_minpackage_len = 5;</code>
       *
       * <pre>
       *最小分片包长，字节为单位，范围20~1500，默认填20
       * </pre>
       */
      public Builder setFragMinpackageLen(int value) {
        bitField0_ |= 0x00000010;
        fragMinpackageLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frag_minpackage_len = 5;</code>
       *
       * <pre>
       *最小分片包长，字节为单位，范围20~1500，默认填20
       * </pre>
       */
      public Builder clearFragMinpackageLen() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fragMinpackageLen_ = 0;
        onChanged();
        return this;
      }

      // optional string svr_usrname = 6;
      private java.lang.Object svrUsrname_ = "";
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public boolean hasSvrUsrname() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public java.lang.String getSvrUsrname() {
        java.lang.Object ref = svrUsrname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          svrUsrname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSvrUsrnameBytes() {
        java.lang.Object ref = svrUsrname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          svrUsrname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public Builder setSvrUsrname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        svrUsrname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public Builder clearSvrUsrname() {
        bitField0_ = (bitField0_ & ~0x00000020);
        svrUsrname_ = getDefaultInstance().getSvrUsrname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string svr_usrname = 6;</code>
       *
       * <pre>
       *服务端用户名称，用来验证对端的数据
       * </pre>
       */
      public Builder setSvrUsrnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        svrUsrname_ = value;
        onChanged();
        return this;
      }

      // optional string svr_usrpwd = 7;
      private java.lang.Object svrUsrpwd_ = "";
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public boolean hasSvrUsrpwd() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public java.lang.String getSvrUsrpwd() {
        java.lang.Object ref = svrUsrpwd_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          svrUsrpwd_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSvrUsrpwdBytes() {
        java.lang.Object ref = svrUsrpwd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          svrUsrpwd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public Builder setSvrUsrpwd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        svrUsrpwd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public Builder clearSvrUsrpwd() {
        bitField0_ = (bitField0_ & ~0x00000040);
        svrUsrpwd_ = getDefaultInstance().getSvrUsrpwd();
        onChanged();
        return this;
      }
      /**
       * <code>optional string svr_usrpwd = 7;</code>
       *
       * <pre>
       *服务端用户密码，用来验证对端的数据 
       * </pre>
       */
      public Builder setSvrUsrpwdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        svrUsrpwd_ = value;
        onChanged();
        return this;
      }

      // optional string sent_usrname = 8;
      private java.lang.Object sentUsrname_ = "";
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public boolean hasSentUsrname() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public java.lang.String getSentUsrname() {
        java.lang.Object ref = sentUsrname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sentUsrname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSentUsrnameBytes() {
        java.lang.Object ref = sentUsrname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sentUsrname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public Builder setSentUsrname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        sentUsrname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public Builder clearSentUsrname() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sentUsrname_ = getDefaultInstance().getSentUsrname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sent_usrname = 8;</code>
       *
       * <pre>
       *客户端用户名称，用来被对端验证
       * </pre>
       */
      public Builder setSentUsrnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        sentUsrname_ = value;
        onChanged();
        return this;
      }

      // optional string sent_usrpwd = 9;
      private java.lang.Object sentUsrpwd_ = "";
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public boolean hasSentUsrpwd() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public java.lang.String getSentUsrpwd() {
        java.lang.Object ref = sentUsrpwd_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sentUsrpwd_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSentUsrpwdBytes() {
        java.lang.Object ref = sentUsrpwd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sentUsrpwd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public Builder setSentUsrpwd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        sentUsrpwd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public Builder clearSentUsrpwd() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sentUsrpwd_ = getDefaultInstance().getSentUsrpwd();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sent_usrpwd = 9;</code>
       *
       * <pre>
       *客户端用户密码，用来被对端验证
       * </pre>
       */
      public Builder setSentUsrpwdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        sentUsrpwd_ = value;
        onChanged();
        return this;
      }

      // repeated .mt.TE1SerialInfo serialinfolist = 10;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> serialinfolist_ =
        java.util.Collections.emptyList();
      private void ensureSerialinfolistIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          serialinfolist_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo>(serialinfolist_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> serialinfolistBuilder_;

      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> getSerialinfolistList() {
        if (serialinfolistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(serialinfolist_);
        } else {
          return serialinfolistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public int getSerialinfolistCount() {
        if (serialinfolistBuilder_ == null) {
          return serialinfolist_.size();
        } else {
          return serialinfolistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo getSerialinfolist(int index) {
        if (serialinfolistBuilder_ == null) {
          return serialinfolist_.get(index);
        } else {
          return serialinfolistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder setSerialinfolist(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo value) {
        if (serialinfolistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSerialinfolistIsMutable();
          serialinfolist_.set(index, value);
          onChanged();
        } else {
          serialinfolistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder setSerialinfolist(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder builderForValue) {
        if (serialinfolistBuilder_ == null) {
          ensureSerialinfolistIsMutable();
          serialinfolist_.set(index, builderForValue.build());
          onChanged();
        } else {
          serialinfolistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder addSerialinfolist(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo value) {
        if (serialinfolistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSerialinfolistIsMutable();
          serialinfolist_.add(value);
          onChanged();
        } else {
          serialinfolistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder addSerialinfolist(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo value) {
        if (serialinfolistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSerialinfolistIsMutable();
          serialinfolist_.add(index, value);
          onChanged();
        } else {
          serialinfolistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder addSerialinfolist(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder builderForValue) {
        if (serialinfolistBuilder_ == null) {
          ensureSerialinfolistIsMutable();
          serialinfolist_.add(builderForValue.build());
          onChanged();
        } else {
          serialinfolistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder addSerialinfolist(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder builderForValue) {
        if (serialinfolistBuilder_ == null) {
          ensureSerialinfolistIsMutable();
          serialinfolist_.add(index, builderForValue.build());
          onChanged();
        } else {
          serialinfolistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder addAllSerialinfolist(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo> values) {
        if (serialinfolistBuilder_ == null) {
          ensureSerialinfolistIsMutable();
          super.addAll(values, serialinfolist_);
          onChanged();
        } else {
          serialinfolistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder clearSerialinfolist() {
        if (serialinfolistBuilder_ == null) {
          serialinfolist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          serialinfolistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public Builder removeSerialinfolist(int index) {
        if (serialinfolistBuilder_ == null) {
          ensureSerialinfolistIsMutable();
          serialinfolist_.remove(index);
          onChanged();
        } else {
          serialinfolistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder getSerialinfolistBuilder(
          int index) {
        return getSerialinfolistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder getSerialinfolistOrBuilder(
          int index) {
        if (serialinfolistBuilder_ == null) {
          return serialinfolist_.get(index);  } else {
          return serialinfolistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> 
           getSerialinfolistOrBuilderList() {
        if (serialinfolistBuilder_ != null) {
          return serialinfolistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(serialinfolist_);
        }
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder addSerialinfolistBuilder() {
        return getSerialinfolistFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder addSerialinfolistBuilder(
          int index) {
        return getSerialinfolistFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TE1SerialInfo serialinfolist = 10;</code>
       *
       * <pre>
       *每个被捆绑的serial同步接口链路参数
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder> 
           getSerialinfolistBuilderList() {
        return getSerialinfolistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder> 
          getSerialinfolistFieldBuilder() {
        if (serialinfolistBuilder_ == null) {
          serialinfolistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1SerialInfoOrBuilder>(
                  serialinfolist_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          serialinfolist_ = null;
        }
        return serialinfolistBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TE1MultiChainInfo)
    }

    static {
      defaultInstance = new TE1MultiChainInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TE1MultiChainInfo)
  }

  public interface TPingCmdOptionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 packagesize = 1;
    /**
     * <code>optional uint32 packagesize = 1;</code>
     *
     * <pre>
     *要ping的数据报的大小，以字节为单位
     * </pre>
     */
    boolean hasPackagesize();
    /**
     * <code>optional uint32 packagesize = 1;</code>
     *
     * <pre>
     *要ping的数据报的大小，以字节为单位
     * </pre>
     */
    int getPackagesize();

    // optional uint32 timeout = 2;
    /**
     * <code>optional uint32 timeout = 2;</code>
     *
     * <pre>
     *ping的超时值，以秒为单位
     * </pre>
     */
    boolean hasTimeout();
    /**
     * <code>optional uint32 timeout = 2;</code>
     *
     * <pre>
     *ping的超时值，以秒为单位
     * </pre>
     */
    int getTimeout();

    // optional uint32 ttl = 3;
    /**
     * <code>optional uint32 ttl = 3;</code>
     *
     * <pre>
     *TTL值
     * </pre>
     */
    boolean hasTtl();
    /**
     * <code>optional uint32 ttl = 3;</code>
     *
     * <pre>
     *TTL值
     * </pre>
     */
    int getTtl();

    // optional uint32 count = 4;
    /**
     * <code>optional uint32 count = 4;</code>
     *
     * <pre>
     *PING的次数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 4;</code>
     *
     * <pre>
     *PING的次数
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code mt.TPingCmdOption}
   *
   * <pre>
   ** ping命令的选项 
   * </pre>
   */
  public static final class TPingCmdOption extends
      com.google.protobuf.GeneratedMessage
      implements TPingCmdOptionOrBuilder {
    // Use TPingCmdOption.newBuilder() to construct.
    private TPingCmdOption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPingCmdOption(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPingCmdOption defaultInstance;
    public static TPingCmdOption getDefaultInstance() {
      return defaultInstance;
    }

    public TPingCmdOption getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPingCmdOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              packagesize_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeout_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ttl_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              count_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingCmdOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingCmdOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder.class);
    }

    public static com.google.protobuf.Parser<TPingCmdOption> PARSER =
        new com.google.protobuf.AbstractParser<TPingCmdOption>() {
      public TPingCmdOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPingCmdOption(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPingCmdOption> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 packagesize = 1;
    public static final int PACKAGESIZE_FIELD_NUMBER = 1;
    private int packagesize_;
    /**
     * <code>optional uint32 packagesize = 1;</code>
     *
     * <pre>
     *要ping的数据报的大小，以字节为单位
     * </pre>
     */
    public boolean hasPackagesize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 packagesize = 1;</code>
     *
     * <pre>
     *要ping的数据报的大小，以字节为单位
     * </pre>
     */
    public int getPackagesize() {
      return packagesize_;
    }

    // optional uint32 timeout = 2;
    public static final int TIMEOUT_FIELD_NUMBER = 2;
    private int timeout_;
    /**
     * <code>optional uint32 timeout = 2;</code>
     *
     * <pre>
     *ping的超时值，以秒为单位
     * </pre>
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timeout = 2;</code>
     *
     * <pre>
     *ping的超时值，以秒为单位
     * </pre>
     */
    public int getTimeout() {
      return timeout_;
    }

    // optional uint32 ttl = 3;
    public static final int TTL_FIELD_NUMBER = 3;
    private int ttl_;
    /**
     * <code>optional uint32 ttl = 3;</code>
     *
     * <pre>
     *TTL值
     * </pre>
     */
    public boolean hasTtl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ttl = 3;</code>
     *
     * <pre>
     *TTL值
     * </pre>
     */
    public int getTtl() {
      return ttl_;
    }

    // optional uint32 count = 4;
    public static final int COUNT_FIELD_NUMBER = 4;
    private int count_;
    /**
     * <code>optional uint32 count = 4;</code>
     *
     * <pre>
     *PING的次数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 count = 4;</code>
     *
     * <pre>
     *PING的次数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      packagesize_ = 0;
      timeout_ = 0;
      ttl_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, packagesize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ttl_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, packagesize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ttl_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPingCmdOption}
     *
     * <pre>
     ** ping命令的选项 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingCmdOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingCmdOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packagesize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ttl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingCmdOption_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packagesize_ = packagesize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ttl_ = ttl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance()) return this;
        if (other.hasPackagesize()) {
          setPackagesize(other.getPackagesize());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasTtl()) {
          setTtl(other.getTtl());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 packagesize = 1;
      private int packagesize_ ;
      /**
       * <code>optional uint32 packagesize = 1;</code>
       *
       * <pre>
       *要ping的数据报的大小，以字节为单位
       * </pre>
       */
      public boolean hasPackagesize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 packagesize = 1;</code>
       *
       * <pre>
       *要ping的数据报的大小，以字节为单位
       * </pre>
       */
      public int getPackagesize() {
        return packagesize_;
      }
      /**
       * <code>optional uint32 packagesize = 1;</code>
       *
       * <pre>
       *要ping的数据报的大小，以字节为单位
       * </pre>
       */
      public Builder setPackagesize(int value) {
        bitField0_ |= 0x00000001;
        packagesize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 packagesize = 1;</code>
       *
       * <pre>
       *要ping的数据报的大小，以字节为单位
       * </pre>
       */
      public Builder clearPackagesize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packagesize_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 timeout = 2;
      private int timeout_ ;
      /**
       * <code>optional uint32 timeout = 2;</code>
       *
       * <pre>
       *ping的超时值，以秒为单位
       * </pre>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timeout = 2;</code>
       *
       * <pre>
       *ping的超时值，以秒为单位
       * </pre>
       */
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional uint32 timeout = 2;</code>
       *
       * <pre>
       *ping的超时值，以秒为单位
       * </pre>
       */
      public Builder setTimeout(int value) {
        bitField0_ |= 0x00000002;
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timeout = 2;</code>
       *
       * <pre>
       *ping的超时值，以秒为单位
       * </pre>
       */
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ttl = 3;
      private int ttl_ ;
      /**
       * <code>optional uint32 ttl = 3;</code>
       *
       * <pre>
       *TTL值
       * </pre>
       */
      public boolean hasTtl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ttl = 3;</code>
       *
       * <pre>
       *TTL值
       * </pre>
       */
      public int getTtl() {
        return ttl_;
      }
      /**
       * <code>optional uint32 ttl = 3;</code>
       *
       * <pre>
       *TTL值
       * </pre>
       */
      public Builder setTtl(int value) {
        bitField0_ |= 0x00000004;
        ttl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ttl = 3;</code>
       *
       * <pre>
       *TTL值
       * </pre>
       */
      public Builder clearTtl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ttl_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 count = 4;
      private int count_ ;
      /**
       * <code>optional uint32 count = 4;</code>
       *
       * <pre>
       *PING的次数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 count = 4;</code>
       *
       * <pre>
       *PING的次数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 4;</code>
       *
       * <pre>
       *PING的次数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 4;</code>
       *
       * <pre>
       *PING的次数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPingCmdOption)
    }

    static {
      defaultInstance = new TPingCmdOption(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPingCmdOption)
  }

  public interface TPingTestParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string dst_info = 1;
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    boolean hasDstInfo();
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    java.lang.String getDstInfo();
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstInfoBytes();

    // optional .mt.TPingCmdOption ping_option = 2;
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    boolean hasPingOption();
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption getPingOption();
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder getPingOptionOrBuilder();

    // optional uint32 userid = 3;
    /**
     * <code>optional uint32 userid = 3;</code>
     *
     * <pre>
     *用于标识调用者的UID，参见EmPingUserId
     * </pre>
     */
    boolean hasUserid();
    /**
     * <code>optional uint32 userid = 3;</code>
     *
     * <pre>
     *用于标识调用者的UID，参见EmPingUserId
     * </pre>
     */
    int getUserid();
  }
  /**
   * Protobuf type {@code mt.TPingTestParam}
   *
   * <pre>
   ** ping命令请求参数 
   * </pre>
   */
  public static final class TPingTestParam extends
      com.google.protobuf.GeneratedMessage
      implements TPingTestParamOrBuilder {
    // Use TPingTestParam.newBuilder() to construct.
    private TPingTestParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPingTestParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPingTestParam defaultInstance;
    public static TPingTestParam getDefaultInstance() {
      return defaultInstance;
    }

    public TPingTestParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPingTestParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dstInfo_ = input.readBytes();
              break;
            }
            case 18: {
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = pingOption_.toBuilder();
              }
              pingOption_ = input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pingOption_);
                pingOption_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              userid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingTestParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingTestParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TPingTestParam> PARSER =
        new com.google.protobuf.AbstractParser<TPingTestParam>() {
      public TPingTestParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPingTestParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPingTestParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string dst_info = 1;
    public static final int DST_INFO_FIELD_NUMBER = 1;
    private java.lang.Object dstInfo_;
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    public boolean hasDstInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    public java.lang.String getDstInfo() {
      java.lang.Object ref = dstInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dst_info = 1;</code>
     *
     * <pre>
     *ping目标(ip/dns)	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstInfoBytes() {
      java.lang.Object ref = dstInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .mt.TPingCmdOption ping_option = 2;
    public static final int PING_OPTION_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption pingOption_;
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    public boolean hasPingOption() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption getPingOption() {
      return pingOption_;
    }
    /**
     * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
     *
     * <pre>
     *ping命令的选项
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder getPingOptionOrBuilder() {
      return pingOption_;
    }

    // optional uint32 userid = 3;
    public static final int USERID_FIELD_NUMBER = 3;
    private int userid_;
    /**
     * <code>optional uint32 userid = 3;</code>
     *
     * <pre>
     *用于标识调用者的UID，参见EmPingUserId
     * </pre>
     */
    public boolean hasUserid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 userid = 3;</code>
     *
     * <pre>
     *用于标识调用者的UID，参见EmPingUserId
     * </pre>
     */
    public int getUserid() {
      return userid_;
    }

    private void initFields() {
      dstInfo_ = "";
      pingOption_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance();
      userid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDstInfoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, pingOption_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, userid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDstInfoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pingOption_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, userid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPingTestParam}
     *
     * <pre>
     ** ping命令请求参数 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingTestParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingTestParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPingOptionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dstInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (pingOptionBuilder_ == null) {
          pingOption_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance();
        } else {
          pingOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        userid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingTestParam_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dstInfo_ = dstInfo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (pingOptionBuilder_ == null) {
          result.pingOption_ = pingOption_;
        } else {
          result.pingOption_ = pingOptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.userid_ = userid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam.getDefaultInstance()) return this;
        if (other.hasDstInfo()) {
          bitField0_ |= 0x00000001;
          dstInfo_ = other.dstInfo_;
          onChanged();
        }
        if (other.hasPingOption()) {
          mergePingOption(other.getPingOption());
        }
        if (other.hasUserid()) {
          setUserid(other.getUserid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingTestParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string dst_info = 1;
      private java.lang.Object dstInfo_ = "";
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public boolean hasDstInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public java.lang.String getDstInfo() {
        java.lang.Object ref = dstInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dstInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstInfoBytes() {
        java.lang.Object ref = dstInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public Builder setDstInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dstInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public Builder clearDstInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dstInfo_ = getDefaultInstance().getDstInfo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dst_info = 1;</code>
       *
       * <pre>
       *ping目标(ip/dns)	
       * </pre>
       */
      public Builder setDstInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dstInfo_ = value;
        onChanged();
        return this;
      }

      // optional .mt.TPingCmdOption ping_option = 2;
      private com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption pingOption_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder> pingOptionBuilder_;
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public boolean hasPingOption() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption getPingOption() {
        if (pingOptionBuilder_ == null) {
          return pingOption_;
        } else {
          return pingOptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public Builder setPingOption(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption value) {
        if (pingOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pingOption_ = value;
          onChanged();
        } else {
          pingOptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public Builder setPingOption(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder builderForValue) {
        if (pingOptionBuilder_ == null) {
          pingOption_ = builderForValue.build();
          onChanged();
        } else {
          pingOptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public Builder mergePingOption(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption value) {
        if (pingOptionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              pingOption_ != com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance()) {
            pingOption_ =
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.newBuilder(pingOption_).mergeFrom(value).buildPartial();
          } else {
            pingOption_ = value;
          }
          onChanged();
        } else {
          pingOptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public Builder clearPingOption() {
        if (pingOptionBuilder_ == null) {
          pingOption_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.getDefaultInstance();
          onChanged();
        } else {
          pingOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder getPingOptionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPingOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder getPingOptionOrBuilder() {
        if (pingOptionBuilder_ != null) {
          return pingOptionBuilder_.getMessageOrBuilder();
        } else {
          return pingOption_;
        }
      }
      /**
       * <code>optional .mt.TPingCmdOption ping_option = 2;</code>
       *
       * <pre>
       *ping命令的选项
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder> 
          getPingOptionFieldBuilder() {
        if (pingOptionBuilder_ == null) {
          pingOptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOption.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingCmdOptionOrBuilder>(
                  pingOption_,
                  getParentForChildren(),
                  isClean());
          pingOption_ = null;
        }
        return pingOptionBuilder_;
      }

      // optional uint32 userid = 3;
      private int userid_ ;
      /**
       * <code>optional uint32 userid = 3;</code>
       *
       * <pre>
       *用于标识调用者的UID，参见EmPingUserId
       * </pre>
       */
      public boolean hasUserid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 userid = 3;</code>
       *
       * <pre>
       *用于标识调用者的UID，参见EmPingUserId
       * </pre>
       */
      public int getUserid() {
        return userid_;
      }
      /**
       * <code>optional uint32 userid = 3;</code>
       *
       * <pre>
       *用于标识调用者的UID，参见EmPingUserId
       * </pre>
       */
      public Builder setUserid(int value) {
        bitField0_ |= 0x00000004;
        userid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userid = 3;</code>
       *
       * <pre>
       *用于标识调用者的UID，参见EmPingUserId
       * </pre>
       */
      public Builder clearUserid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        userid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPingTestParam)
    }

    static {
      defaultInstance = new TPingTestParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPingTestParam)
  }

  public interface TPingResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmPingErrcode ping_errcode = 1;
    /**
     * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
     *
     * <pre>
     *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
     * </pre>
     */
    boolean hasPingErrcode();
    /**
     * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
     *
     * <pre>
     *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode getPingErrcode();

    // optional uint32 ttl = 2;
    /**
     * <code>optional uint32 ttl = 2;</code>
     *
     * <pre>
     *生存时间
     * </pre>
     */
    boolean hasTtl();
    /**
     * <code>optional uint32 ttl = 2;</code>
     *
     * <pre>
     *生存时间
     * </pre>
     */
    int getTtl();

    // optional uint32 trip_time = 3;
    /**
     * <code>optional uint32 trip_time = 3;</code>
     *
     * <pre>
     *请求时间
     * </pre>
     */
    boolean hasTripTime();
    /**
     * <code>optional uint32 trip_time = 3;</code>
     *
     * <pre>
     *请求时间
     * </pre>
     */
    int getTripTime();

    // optional uint32 userid = 4;
    /**
     * <code>optional uint32 userid = 4;</code>
     *
     * <pre>
     *用户编号，参见EmPingUserId
     * </pre>
     */
    boolean hasUserid();
    /**
     * <code>optional uint32 userid = 4;</code>
     *
     * <pre>
     *用户编号，参见EmPingUserId
     * </pre>
     */
    int getUserid();

    // optional uint32 error_type = 5;
    /**
     * <code>optional uint32 error_type = 5;</code>
     *
     * <pre>
     *错误类型
     * </pre>
     */
    boolean hasErrorType();
    /**
     * <code>optional uint32 error_type = 5;</code>
     *
     * <pre>
     *错误类型
     * </pre>
     */
    int getErrorType();

    // optional uint32 error_code = 6;
    /**
     * <code>optional uint32 error_code = 6;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    boolean hasErrorCode();
    /**
     * <code>optional uint32 error_code = 6;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    int getErrorCode();
  }
  /**
   * Protobuf type {@code mt.TPingResult}
   *
   * <pre>
   ** ICMP回显应答结果，有系统在ping消息后反馈
   * </pre>
   */
  public static final class TPingResult extends
      com.google.protobuf.GeneratedMessage
      implements TPingResultOrBuilder {
    // Use TPingResult.newBuilder() to construct.
    private TPingResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TPingResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TPingResult defaultInstance;
    public static TPingResult getDefaultInstance() {
      return defaultInstance;
    }

    public TPingResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TPingResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                pingErrcode_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ttl_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tripTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userid_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              errorType_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              errorCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.Builder.class);
    }

    public static com.google.protobuf.Parser<TPingResult> PARSER =
        new com.google.protobuf.AbstractParser<TPingResult>() {
      public TPingResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TPingResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TPingResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmPingErrcode ping_errcode = 1;
    public static final int PING_ERRCODE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode pingErrcode_;
    /**
     * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
     *
     * <pre>
     *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
     * </pre>
     */
    public boolean hasPingErrcode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
     *
     * <pre>
     *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode getPingErrcode() {
      return pingErrcode_;
    }

    // optional uint32 ttl = 2;
    public static final int TTL_FIELD_NUMBER = 2;
    private int ttl_;
    /**
     * <code>optional uint32 ttl = 2;</code>
     *
     * <pre>
     *生存时间
     * </pre>
     */
    public boolean hasTtl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ttl = 2;</code>
     *
     * <pre>
     *生存时间
     * </pre>
     */
    public int getTtl() {
      return ttl_;
    }

    // optional uint32 trip_time = 3;
    public static final int TRIP_TIME_FIELD_NUMBER = 3;
    private int tripTime_;
    /**
     * <code>optional uint32 trip_time = 3;</code>
     *
     * <pre>
     *请求时间
     * </pre>
     */
    public boolean hasTripTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 trip_time = 3;</code>
     *
     * <pre>
     *请求时间
     * </pre>
     */
    public int getTripTime() {
      return tripTime_;
    }

    // optional uint32 userid = 4;
    public static final int USERID_FIELD_NUMBER = 4;
    private int userid_;
    /**
     * <code>optional uint32 userid = 4;</code>
     *
     * <pre>
     *用户编号，参见EmPingUserId
     * </pre>
     */
    public boolean hasUserid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 userid = 4;</code>
     *
     * <pre>
     *用户编号，参见EmPingUserId
     * </pre>
     */
    public int getUserid() {
      return userid_;
    }

    // optional uint32 error_type = 5;
    public static final int ERROR_TYPE_FIELD_NUMBER = 5;
    private int errorType_;
    /**
     * <code>optional uint32 error_type = 5;</code>
     *
     * <pre>
     *错误类型
     * </pre>
     */
    public boolean hasErrorType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 error_type = 5;</code>
     *
     * <pre>
     *错误类型
     * </pre>
     */
    public int getErrorType() {
      return errorType_;
    }

    // optional uint32 error_code = 6;
    public static final int ERROR_CODE_FIELD_NUMBER = 6;
    private int errorCode_;
    /**
     * <code>optional uint32 error_code = 6;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 error_code = 6;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    public int getErrorCode() {
      return errorCode_;
    }

    private void initFields() {
      pingErrcode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode.emPingReply;
      ttl_ = 0;
      tripTime_ = 0;
      userid_ = 0;
      errorType_ = 0;
      errorCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, pingErrcode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ttl_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tripTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, userid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, errorType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, errorCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, pingErrcode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ttl_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tripTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, userid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, errorType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, errorCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TPingResult}
     *
     * <pre>
     ** ICMP回显应答结果，有系统在ping消息后反馈
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pingErrcode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode.emPingReply;
        bitField0_ = (bitField0_ & ~0x00000001);
        ttl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tripTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        userid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        errorType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        errorCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TPingResult_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pingErrcode_ = pingErrcode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ttl_ = ttl_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tripTime_ = tripTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userid_ = userid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.errorType_ = errorType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult.getDefaultInstance()) return this;
        if (other.hasPingErrcode()) {
          setPingErrcode(other.getPingErrcode());
        }
        if (other.hasTtl()) {
          setTtl(other.getTtl());
        }
        if (other.hasTripTime()) {
          setTripTime(other.getTripTime());
        }
        if (other.hasUserid()) {
          setUserid(other.getUserid());
        }
        if (other.hasErrorType()) {
          setErrorType(other.getErrorType());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TPingResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmPingErrcode ping_errcode = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode pingErrcode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode.emPingReply;
      /**
       * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
       *
       * <pre>
       *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
       * </pre>
       */
      public boolean hasPingErrcode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
       *
       * <pre>
       *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode getPingErrcode() {
        return pingErrcode_;
      }
      /**
       * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
       *
       * <pre>
       *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
       * </pre>
       */
      public Builder setPingErrcode(com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        pingErrcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmPingErrcode ping_errcode = 1;</code>
       *
       * <pre>
       *Ping应答代码  0:Reply  1:Timeout  2:Error 3:NetUnreach
       * </pre>
       */
      public Builder clearPingErrcode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pingErrcode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmPingErrcode.emPingReply;
        onChanged();
        return this;
      }

      // optional uint32 ttl = 2;
      private int ttl_ ;
      /**
       * <code>optional uint32 ttl = 2;</code>
       *
       * <pre>
       *生存时间
       * </pre>
       */
      public boolean hasTtl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ttl = 2;</code>
       *
       * <pre>
       *生存时间
       * </pre>
       */
      public int getTtl() {
        return ttl_;
      }
      /**
       * <code>optional uint32 ttl = 2;</code>
       *
       * <pre>
       *生存时间
       * </pre>
       */
      public Builder setTtl(int value) {
        bitField0_ |= 0x00000002;
        ttl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ttl = 2;</code>
       *
       * <pre>
       *生存时间
       * </pre>
       */
      public Builder clearTtl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ttl_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 trip_time = 3;
      private int tripTime_ ;
      /**
       * <code>optional uint32 trip_time = 3;</code>
       *
       * <pre>
       *请求时间
       * </pre>
       */
      public boolean hasTripTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 trip_time = 3;</code>
       *
       * <pre>
       *请求时间
       * </pre>
       */
      public int getTripTime() {
        return tripTime_;
      }
      /**
       * <code>optional uint32 trip_time = 3;</code>
       *
       * <pre>
       *请求时间
       * </pre>
       */
      public Builder setTripTime(int value) {
        bitField0_ |= 0x00000004;
        tripTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 trip_time = 3;</code>
       *
       * <pre>
       *请求时间
       * </pre>
       */
      public Builder clearTripTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tripTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 userid = 4;
      private int userid_ ;
      /**
       * <code>optional uint32 userid = 4;</code>
       *
       * <pre>
       *用户编号，参见EmPingUserId
       * </pre>
       */
      public boolean hasUserid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 userid = 4;</code>
       *
       * <pre>
       *用户编号，参见EmPingUserId
       * </pre>
       */
      public int getUserid() {
        return userid_;
      }
      /**
       * <code>optional uint32 userid = 4;</code>
       *
       * <pre>
       *用户编号，参见EmPingUserId
       * </pre>
       */
      public Builder setUserid(int value) {
        bitField0_ |= 0x00000008;
        userid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userid = 4;</code>
       *
       * <pre>
       *用户编号，参见EmPingUserId
       * </pre>
       */
      public Builder clearUserid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 error_type = 5;
      private int errorType_ ;
      /**
       * <code>optional uint32 error_type = 5;</code>
       *
       * <pre>
       *错误类型
       * </pre>
       */
      public boolean hasErrorType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 error_type = 5;</code>
       *
       * <pre>
       *错误类型
       * </pre>
       */
      public int getErrorType() {
        return errorType_;
      }
      /**
       * <code>optional uint32 error_type = 5;</code>
       *
       * <pre>
       *错误类型
       * </pre>
       */
      public Builder setErrorType(int value) {
        bitField0_ |= 0x00000010;
        errorType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 error_type = 5;</code>
       *
       * <pre>
       *错误类型
       * </pre>
       */
      public Builder clearErrorType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        errorType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 error_code = 6;
      private int errorCode_ ;
      /**
       * <code>optional uint32 error_code = 6;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 error_code = 6;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public int getErrorCode() {
        return errorCode_;
      }
      /**
       * <code>optional uint32 error_code = 6;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public Builder setErrorCode(int value) {
        bitField0_ |= 0x00000020;
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 error_code = 6;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        errorCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TPingResult)
    }

    static {
      defaultInstance = new TPingResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TPingResult)
  }

  public interface TDNSNameToIpInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string dns_name = 1;
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    boolean hasDnsName();
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    java.lang.String getDnsName();
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getDnsNameBytes();
  }
  /**
   * Protobuf type {@code mt.TDNSNameToIpInfo}
   *
   * <pre>
   ** DNS查询IP 
   * </pre>
   */
  public static final class TDNSNameToIpInfo extends
      com.google.protobuf.GeneratedMessage
      implements TDNSNameToIpInfoOrBuilder {
    // Use TDNSNameToIpInfo.newBuilder() to construct.
    private TDNSNameToIpInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TDNSNameToIpInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TDNSNameToIpInfo defaultInstance;
    public static TDNSNameToIpInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TDNSNameToIpInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TDNSNameToIpInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dnsName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TDNSNameToIpInfo> PARSER =
        new com.google.protobuf.AbstractParser<TDNSNameToIpInfo>() {
      public TDNSNameToIpInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TDNSNameToIpInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TDNSNameToIpInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string dns_name = 1;
    public static final int DNS_NAME_FIELD_NUMBER = 1;
    private java.lang.Object dnsName_;
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public boolean hasDnsName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public java.lang.String getDnsName() {
      java.lang.Object ref = dnsName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dnsName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDnsNameBytes() {
      java.lang.Object ref = dnsName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dnsName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      dnsName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDnsNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDnsNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TDNSNameToIpInfo}
     *
     * <pre>
     ** DNS查询IP 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dnsName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dnsName_ = dnsName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo.getDefaultInstance()) return this;
        if (other.hasDnsName()) {
          bitField0_ |= 0x00000001;
          dnsName_ = other.dnsName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string dns_name = 1;
      private java.lang.Object dnsName_ = "";
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public boolean hasDnsName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public java.lang.String getDnsName() {
        java.lang.Object ref = dnsName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dnsName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDnsNameBytes() {
        java.lang.Object ref = dnsName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dnsName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder setDnsName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dnsName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder clearDnsName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dnsName_ = getDefaultInstance().getDnsName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder setDnsNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dnsName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TDNSNameToIpInfo)
    }

    static {
      defaultInstance = new TDNSNameToIpInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TDNSNameToIpInfo)
  }

  public interface TDNSNameToIpResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string dns_name = 1;
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    boolean hasDnsName();
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    java.lang.String getDnsName();
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getDnsNameBytes();

    // optional uint32 ip = 2;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *查询到的ip地址，网络序
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *查询到的ip地址，网络序
     * </pre>
     */
    int getIp();

    // optional uint32 error_code = 3;
    /**
     * <code>optional uint32 error_code = 3;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    boolean hasErrorCode();
    /**
     * <code>optional uint32 error_code = 3;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    int getErrorCode();
  }
  /**
   * Protobuf type {@code mt.TDNSNameToIpResult}
   *
   * <pre>
   ** DNS查询IP 
   * </pre>
   */
  public static final class TDNSNameToIpResult extends
      com.google.protobuf.GeneratedMessage
      implements TDNSNameToIpResultOrBuilder {
    // Use TDNSNameToIpResult.newBuilder() to construct.
    private TDNSNameToIpResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TDNSNameToIpResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TDNSNameToIpResult defaultInstance;
    public static TDNSNameToIpResult getDefaultInstance() {
      return defaultInstance;
    }

    public TDNSNameToIpResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TDNSNameToIpResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dnsName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ip_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              errorCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.Builder.class);
    }

    public static com.google.protobuf.Parser<TDNSNameToIpResult> PARSER =
        new com.google.protobuf.AbstractParser<TDNSNameToIpResult>() {
      public TDNSNameToIpResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TDNSNameToIpResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TDNSNameToIpResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string dns_name = 1;
    public static final int DNS_NAME_FIELD_NUMBER = 1;
    private java.lang.Object dnsName_;
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public boolean hasDnsName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public java.lang.String getDnsName() {
      java.lang.Object ref = dnsName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dnsName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dns_name = 1;</code>
     *
     * <pre>
     *DNS名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDnsNameBytes() {
      java.lang.Object ref = dnsName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dnsName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private int ip_;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *查询到的ip地址，网络序
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *查询到的ip地址，网络序
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 error_code = 3;
    public static final int ERROR_CODE_FIELD_NUMBER = 3;
    private int errorCode_;
    /**
     * <code>optional uint32 error_code = 3;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 error_code = 3;</code>
     *
     * <pre>
     *错误代码
     * </pre>
     */
    public int getErrorCode() {
      return errorCode_;
    }

    private void initFields() {
      dnsName_ = "";
      ip_ = 0;
      errorCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDnsNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, errorCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDnsNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, errorCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TDNSNameToIpResult}
     *
     * <pre>
     ** DNS查询IP 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dnsName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        errorCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TDNSNameToIpResult_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dnsName_ = dnsName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult.getDefaultInstance()) return this;
        if (other.hasDnsName()) {
          bitField0_ |= 0x00000001;
          dnsName_ = other.dnsName_;
          onChanged();
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TDNSNameToIpResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string dns_name = 1;
      private java.lang.Object dnsName_ = "";
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public boolean hasDnsName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public java.lang.String getDnsName() {
        java.lang.Object ref = dnsName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dnsName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDnsNameBytes() {
        java.lang.Object ref = dnsName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dnsName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder setDnsName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dnsName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder clearDnsName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dnsName_ = getDefaultInstance().getDnsName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dns_name = 1;</code>
       *
       * <pre>
       *DNS名称
       * </pre>
       */
      public Builder setDnsNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dnsName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ip = 2;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *查询到的ip地址，网络序
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *查询到的ip地址，网络序
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *查询到的ip地址，网络序
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *查询到的ip地址，网络序
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 error_code = 3;
      private int errorCode_ ;
      /**
       * <code>optional uint32 error_code = 3;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 error_code = 3;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public int getErrorCode() {
        return errorCode_;
      }
      /**
       * <code>optional uint32 error_code = 3;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public Builder setErrorCode(int value) {
        bitField0_ |= 0x00000004;
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 error_code = 3;</code>
       *
       * <pre>
       *错误代码
       * </pre>
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errorCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TDNSNameToIpResult)
    }

    static {
      defaultInstance = new TDNSNameToIpResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TDNSNameToIpResult)
  }

  public interface TNetConfilictedInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmNetConflictType type = 1;
    /**
     * <code>optional .mt.EmNetConflictType type = 1;</code>
     *
     * <pre>
     *冲突类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .mt.EmNetConflictType type = 1;</code>
     *
     * <pre>
     *冲突类型
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType getType();

    // optional string mac = 2;
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    boolean hasMac();
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    java.lang.String getMac();
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacBytes();

    // optional uint32 ip = 3;
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *发生冲突的接口的当前ip地址
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *发生冲突的接口的当前ip地址
     * </pre>
     */
    int getIp();
  }
  /**
   * Protobuf type {@code mt.TNetConfilictedInfo}
   *
   * <pre>
   **
   * 监测到接口地址发生冲突后，系统将反馈该类消息
   * @mType 冲突类型，参考IpConflictType
   * @mMacAddr 发生冲突的接口的当前mac地址
   * @mIpAddr 发生冲突的接口的当前ip地址
   * </pre>
   */
  public static final class TNetConfilictedInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNetConfilictedInfoOrBuilder {
    // Use TNetConfilictedInfo.newBuilder() to construct.
    private TNetConfilictedInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNetConfilictedInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNetConfilictedInfo defaultInstance;
    public static TNetConfilictedInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNetConfilictedInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNetConfilictedInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mac_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ip_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetConfilictedInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetConfilictedInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNetConfilictedInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNetConfilictedInfo>() {
      public TNetConfilictedInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNetConfilictedInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNetConfilictedInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmNetConflictType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType type_;
    /**
     * <code>optional .mt.EmNetConflictType type = 1;</code>
     *
     * <pre>
     *冲突类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmNetConflictType type = 1;</code>
     *
     * <pre>
     *冲突类型
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType getType() {
      return type_;
    }

    // optional string mac = 2;
    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.Object mac_;
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mac = 2;</code>
     *
     * <pre>
     * 发生冲突的接口的当前mac地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ip = 3;
    public static final int IP_FIELD_NUMBER = 3;
    private int ip_;
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *发生冲突的接口的当前ip地址
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *发生冲突的接口的当前ip地址
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    private void initFields() {
      type_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType.emConflictType_None;
      mac_ = "";
      ip_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ip_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ip_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TNetConfilictedInfo}
     *
     * <pre>
     **
     * 监测到接口地址发生冲突后，系统将反馈该类消息
     * @mType 冲突类型，参考IpConflictType
     * @mMacAddr 发生冲突的接口的当前mac地址
     * @mIpAddr 发生冲突的接口的当前ip地址
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetConfilictedInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetConfilictedInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType.emConflictType_None;
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetConfilictedInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ip_ = ip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000002;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetConfilictedInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmNetConflictType type = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType type_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType.emConflictType_None;
      /**
       * <code>optional .mt.EmNetConflictType type = 1;</code>
       *
       * <pre>
       *冲突类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmNetConflictType type = 1;</code>
       *
       * <pre>
       *冲突类型
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType getType() {
        return type_;
      }
      /**
       * <code>optional .mt.EmNetConflictType type = 1;</code>
       *
       * <pre>
       *冲突类型
       * </pre>
       */
      public Builder setType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmNetConflictType type = 1;</code>
       *
       * <pre>
       *冲突类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetConflictType.emConflictType_None;
        onChanged();
        return this;
      }

      // optional string mac = 2;
      private java.lang.Object mac_ = "";
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public Builder setMac(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac = 2;</code>
       *
       * <pre>
       * 发生冲突的接口的当前mac地址
       * </pre>
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ip = 3;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *发生冲突的接口的当前ip地址
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *发生冲突的接口的当前ip地址
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *发生冲突的接口的当前ip地址
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *发生冲突的接口的当前ip地址
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TNetConfilictedInfo)
    }

    static {
      defaultInstance = new TNetConfilictedInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TNetConfilictedInfo)
  }

  public interface TWifiWorkModeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmWifiWorkMode wifi_workmode = 1;
    /**
     * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
     *
     * <pre>
     *Wifi工作模式配置
     * </pre>
     */
    boolean hasWifiWorkmode();
    /**
     * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
     *
     * <pre>
     *Wifi工作模式配置
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode getWifiWorkmode();

    // optional .mt.TWifiApConfiguration wifiApConfig = 2;
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    boolean hasWifiApConfig();
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration getWifiApConfig();
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder getWifiApConfigOrBuilder();
  }
  /**
   * Protobuf type {@code mt.TWifiWorkMode}
   *
   * <pre>
   ** Wifi启用状态与工作模式
   * </pre>
   */
  public static final class TWifiWorkMode extends
      com.google.protobuf.GeneratedMessage
      implements TWifiWorkModeOrBuilder {
    // Use TWifiWorkMode.newBuilder() to construct.
    private TWifiWorkMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiWorkMode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiWorkMode defaultInstance;
    public static TWifiWorkMode getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiWorkMode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiWorkMode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                wifiWorkmode_ = value;
              }
              break;
            }
            case 18: {
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = wifiApConfig_.toBuilder();
              }
              wifiApConfig_ = input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wifiApConfig_);
                wifiApConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWorkMode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWorkMode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiWorkMode> PARSER =
        new com.google.protobuf.AbstractParser<TWifiWorkMode>() {
      public TWifiWorkMode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiWorkMode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiWorkMode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmWifiWorkMode wifi_workmode = 1;
    public static final int WIFI_WORKMODE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode wifiWorkmode_;
    /**
     * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
     *
     * <pre>
     *Wifi工作模式配置
     * </pre>
     */
    public boolean hasWifiWorkmode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
     *
     * <pre>
     *Wifi工作模式配置
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode getWifiWorkmode() {
      return wifiWorkmode_;
    }

    // optional .mt.TWifiApConfiguration wifiApConfig = 2;
    public static final int WIFIAPCONFIG_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration wifiApConfig_;
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    public boolean hasWifiApConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration getWifiApConfig() {
      return wifiApConfig_;
    }
    /**
     * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
     *
     * <pre>
     *当wifi_workmode为emWifiWorkModeWifiAp时,生效
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder getWifiApConfigOrBuilder() {
      return wifiApConfig_;
    }

    private void initFields() {
      wifiWorkmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode.emWifiWorkModeClose;
      wifiApConfig_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, wifiWorkmode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, wifiApConfig_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, wifiWorkmode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wifiApConfig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiWorkMode}
     *
     * <pre>
     ** Wifi启用状态与工作模式
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWorkMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWorkMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWifiApConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        wifiWorkmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode.emWifiWorkModeClose;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (wifiApConfigBuilder_ == null) {
          wifiApConfig_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance();
        } else {
          wifiApConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWorkMode_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.wifiWorkmode_ = wifiWorkmode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (wifiApConfigBuilder_ == null) {
          result.wifiApConfig_ = wifiApConfig_;
        } else {
          result.wifiApConfig_ = wifiApConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode.getDefaultInstance()) return this;
        if (other.hasWifiWorkmode()) {
          setWifiWorkmode(other.getWifiWorkmode());
        }
        if (other.hasWifiApConfig()) {
          mergeWifiApConfig(other.getWifiApConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWorkMode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmWifiWorkMode wifi_workmode = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode wifiWorkmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode.emWifiWorkModeClose;
      /**
       * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
       *
       * <pre>
       *Wifi工作模式配置
       * </pre>
       */
      public boolean hasWifiWorkmode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
       *
       * <pre>
       *Wifi工作模式配置
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode getWifiWorkmode() {
        return wifiWorkmode_;
      }
      /**
       * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
       *
       * <pre>
       *Wifi工作模式配置
       * </pre>
       */
      public Builder setWifiWorkmode(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        wifiWorkmode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiWorkMode wifi_workmode = 1;</code>
       *
       * <pre>
       *Wifi工作模式配置
       * </pre>
       */
      public Builder clearWifiWorkmode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        wifiWorkmode_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiWorkMode.emWifiWorkModeClose;
        onChanged();
        return this;
      }

      // optional .mt.TWifiApConfiguration wifiApConfig = 2;
      private com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration wifiApConfig_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder> wifiApConfigBuilder_;
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public boolean hasWifiApConfig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration getWifiApConfig() {
        if (wifiApConfigBuilder_ == null) {
          return wifiApConfig_;
        } else {
          return wifiApConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public Builder setWifiApConfig(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration value) {
        if (wifiApConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wifiApConfig_ = value;
          onChanged();
        } else {
          wifiApConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public Builder setWifiApConfig(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder builderForValue) {
        if (wifiApConfigBuilder_ == null) {
          wifiApConfig_ = builderForValue.build();
          onChanged();
        } else {
          wifiApConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public Builder mergeWifiApConfig(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration value) {
        if (wifiApConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              wifiApConfig_ != com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance()) {
            wifiApConfig_ =
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.newBuilder(wifiApConfig_).mergeFrom(value).buildPartial();
          } else {
            wifiApConfig_ = value;
          }
          onChanged();
        } else {
          wifiApConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public Builder clearWifiApConfig() {
        if (wifiApConfigBuilder_ == null) {
          wifiApConfig_ = com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance();
          onChanged();
        } else {
          wifiApConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder getWifiApConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWifiApConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder getWifiApConfigOrBuilder() {
        if (wifiApConfigBuilder_ != null) {
          return wifiApConfigBuilder_.getMessageOrBuilder();
        } else {
          return wifiApConfig_;
        }
      }
      /**
       * <code>optional .mt.TWifiApConfiguration wifiApConfig = 2;</code>
       *
       * <pre>
       *当wifi_workmode为emWifiWorkModeWifiAp时,生效
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder> 
          getWifiApConfigFieldBuilder() {
        if (wifiApConfigBuilder_ == null) {
          wifiApConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder>(
                  wifiApConfig_,
                  getParentForChildren(),
                  isClean());
          wifiApConfig_ = null;
        }
        return wifiApConfigBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiWorkMode)
    }

    static {
      defaultInstance = new TWifiWorkMode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiWorkMode)
  }

  public interface TWifiApConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string ssid = 1;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional .mt.EmWifiApKeyType capabilities = 2;
    /**
     * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
     *
     * <pre>
     *安全与加密类型
     * </pre>
     */
    boolean hasCapabilities();
    /**
     * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
     *
     * <pre>
     *安全与加密类型
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType getCapabilities();

    // optional string key = 3;
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // optional uint32 dhcp_startip = 4;
    /**
     * <code>optional uint32 dhcp_startip = 4;</code>
     *
     * <pre>
     *DHCP起始IP(网络序)
     * </pre>
     */
    boolean hasDhcpStartip();
    /**
     * <code>optional uint32 dhcp_startip = 4;</code>
     *
     * <pre>
     *DHCP起始IP(网络序)
     * </pre>
     */
    int getDhcpStartip();

    // optional uint32 dhcp_endip = 5;
    /**
     * <code>optional uint32 dhcp_endip = 5;</code>
     *
     * <pre>
     *DHCP结束IP(网络序)
     * </pre>
     */
    boolean hasDhcpEndip();
    /**
     * <code>optional uint32 dhcp_endip = 5;</code>
     *
     * <pre>
     *DHCP结束IP(网络序)
     * </pre>
     */
    int getDhcpEndip();

    // optional uint32 ip = 6;
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *设备IP(网络序)
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *设备IP(网络序)
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 7;
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *设备子网掩码(网络序)	
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *设备子网掩码(网络序)	
     * </pre>
     */
    int getMask();

    // optional .mt.EmWifiFrequencyBandType frequency_band = 8;
    /**
     * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
     *
     * <pre>
     *wifi频段
     * </pre>
     */
    boolean hasFrequencyBand();
    /**
     * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
     *
     * <pre>
     *wifi频段
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType getFrequencyBand();
  }
  /**
   * Protobuf type {@code mt.TWifiApConfiguration}
   *
   * <pre>
   ** Wifi作为AP工作模式时的AP配置
   * </pre>
   */
  public static final class TWifiApConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements TWifiApConfigurationOrBuilder {
    // Use TWifiApConfiguration.newBuilder() to construct.
    private TWifiApConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiApConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiApConfiguration defaultInstance;
    public static TWifiApConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiApConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiApConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                capabilities_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              key_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dhcpStartip_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dhcpEndip_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ip_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              mask_ = input.readUInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                frequencyBand_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiApConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiApConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiApConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<TWifiApConfiguration>() {
      public TWifiApConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiApConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiApConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .mt.EmWifiApKeyType capabilities = 2;
    public static final int CAPABILITIES_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType capabilities_;
    /**
     * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
     *
     * <pre>
     *安全与加密类型
     * </pre>
     */
    public boolean hasCapabilities() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
     *
     * <pre>
     *安全与加密类型
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType getCapabilities() {
      return capabilities_;
    }

    // optional string key = 3;
    public static final int KEY_FIELD_NUMBER = 3;
    private java.lang.Object key_;
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string key = 3;</code>
     *
     * <pre>
     *加密时的密码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 dhcp_startip = 4;
    public static final int DHCP_STARTIP_FIELD_NUMBER = 4;
    private int dhcpStartip_;
    /**
     * <code>optional uint32 dhcp_startip = 4;</code>
     *
     * <pre>
     *DHCP起始IP(网络序)
     * </pre>
     */
    public boolean hasDhcpStartip() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 dhcp_startip = 4;</code>
     *
     * <pre>
     *DHCP起始IP(网络序)
     * </pre>
     */
    public int getDhcpStartip() {
      return dhcpStartip_;
    }

    // optional uint32 dhcp_endip = 5;
    public static final int DHCP_ENDIP_FIELD_NUMBER = 5;
    private int dhcpEndip_;
    /**
     * <code>optional uint32 dhcp_endip = 5;</code>
     *
     * <pre>
     *DHCP结束IP(网络序)
     * </pre>
     */
    public boolean hasDhcpEndip() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 dhcp_endip = 5;</code>
     *
     * <pre>
     *DHCP结束IP(网络序)
     * </pre>
     */
    public int getDhcpEndip() {
      return dhcpEndip_;
    }

    // optional uint32 ip = 6;
    public static final int IP_FIELD_NUMBER = 6;
    private int ip_;
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *设备IP(网络序)
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *设备IP(网络序)
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 7;
    public static final int MASK_FIELD_NUMBER = 7;
    private int mask_;
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *设备子网掩码(网络序)	
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *设备子网掩码(网络序)	
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional .mt.EmWifiFrequencyBandType frequency_band = 8;
    public static final int FREQUENCY_BAND_FIELD_NUMBER = 8;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType frequencyBand_;
    /**
     * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
     *
     * <pre>
     *wifi频段
     * </pre>
     */
    public boolean hasFrequencyBand() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
     *
     * <pre>
     *wifi频段
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType getFrequencyBand() {
      return frequencyBand_;
    }

    private void initFields() {
      ssid_ = "";
      capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType.emWifiApKeyTypeNone;
      key_ = "";
      dhcpStartip_ = 0;
      dhcpEndip_ = 0;
      ip_ = 0;
      mask_ = 0;
      frequencyBand_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType.emWifiFrequencyBandType_24GHz;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getKeyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, dhcpStartip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, dhcpEndip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, ip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, mask_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, frequencyBand_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getKeyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, dhcpStartip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, dhcpEndip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, mask_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, frequencyBand_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiApConfiguration}
     *
     * <pre>
     ** Wifi作为AP工作模式时的AP配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiApConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiApConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType.emWifiApKeyTypeNone;
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dhcpStartip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dhcpEndip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        frequencyBand_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType.emWifiFrequencyBandType_24GHz;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiApConfiguration_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.capabilities_ = capabilities_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dhcpStartip_ = dhcpStartip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dhcpEndip_ = dhcpEndip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.frequencyBand_ = frequencyBand_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          bitField0_ |= 0x00000001;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasCapabilities()) {
          setCapabilities(other.getCapabilities());
        }
        if (other.hasKey()) {
          bitField0_ |= 0x00000004;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasDhcpStartip()) {
          setDhcpStartip(other.getDhcpStartip());
        }
        if (other.hasDhcpEndip()) {
          setDhcpEndip(other.getDhcpEndip());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasFrequencyBand()) {
          setFrequencyBand(other.getFrequencyBand());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiApConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string ssid = 1;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiApKeyType capabilities = 2;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType.emWifiApKeyTypeNone;
      /**
       * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
       *
       * <pre>
       *安全与加密类型
       * </pre>
       */
      public boolean hasCapabilities() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
       *
       * <pre>
       *安全与加密类型
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType getCapabilities() {
        return capabilities_;
      }
      /**
       * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
       *
       * <pre>
       *安全与加密类型
       * </pre>
       */
      public Builder setCapabilities(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiApKeyType capabilities = 2;</code>
       *
       * <pre>
       *安全与加密类型
       * </pre>
       */
      public Builder clearCapabilities() {
        bitField0_ = (bitField0_ & ~0x00000002);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiApKeyType.emWifiApKeyTypeNone;
        onChanged();
        return this;
      }

      // optional string key = 3;
      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 3;</code>
       *
       * <pre>
       *加密时的密码
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        key_ = value;
        onChanged();
        return this;
      }

      // optional uint32 dhcp_startip = 4;
      private int dhcpStartip_ ;
      /**
       * <code>optional uint32 dhcp_startip = 4;</code>
       *
       * <pre>
       *DHCP起始IP(网络序)
       * </pre>
       */
      public boolean hasDhcpStartip() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 dhcp_startip = 4;</code>
       *
       * <pre>
       *DHCP起始IP(网络序)
       * </pre>
       */
      public int getDhcpStartip() {
        return dhcpStartip_;
      }
      /**
       * <code>optional uint32 dhcp_startip = 4;</code>
       *
       * <pre>
       *DHCP起始IP(网络序)
       * </pre>
       */
      public Builder setDhcpStartip(int value) {
        bitField0_ |= 0x00000008;
        dhcpStartip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dhcp_startip = 4;</code>
       *
       * <pre>
       *DHCP起始IP(网络序)
       * </pre>
       */
      public Builder clearDhcpStartip() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dhcpStartip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dhcp_endip = 5;
      private int dhcpEndip_ ;
      /**
       * <code>optional uint32 dhcp_endip = 5;</code>
       *
       * <pre>
       *DHCP结束IP(网络序)
       * </pre>
       */
      public boolean hasDhcpEndip() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 dhcp_endip = 5;</code>
       *
       * <pre>
       *DHCP结束IP(网络序)
       * </pre>
       */
      public int getDhcpEndip() {
        return dhcpEndip_;
      }
      /**
       * <code>optional uint32 dhcp_endip = 5;</code>
       *
       * <pre>
       *DHCP结束IP(网络序)
       * </pre>
       */
      public Builder setDhcpEndip(int value) {
        bitField0_ |= 0x00000010;
        dhcpEndip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dhcp_endip = 5;</code>
       *
       * <pre>
       *DHCP结束IP(网络序)
       * </pre>
       */
      public Builder clearDhcpEndip() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dhcpEndip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ip = 6;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *设备IP(网络序)
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *设备IP(网络序)
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *设备IP(网络序)
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000020;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *设备IP(网络序)
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 7;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *设备子网掩码(网络序)	
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *设备子网掩码(网络序)	
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *设备子网掩码(网络序)	
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000040;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *设备子网掩码(网络序)	
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiFrequencyBandType frequency_band = 8;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType frequencyBand_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType.emWifiFrequencyBandType_24GHz;
      /**
       * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
       *
       * <pre>
       *wifi频段
       * </pre>
       */
      public boolean hasFrequencyBand() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
       *
       * <pre>
       *wifi频段
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType getFrequencyBand() {
        return frequencyBand_;
      }
      /**
       * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
       *
       * <pre>
       *wifi频段
       * </pre>
       */
      public Builder setFrequencyBand(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        frequencyBand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiFrequencyBandType frequency_band = 8;</code>
       *
       * <pre>
       *wifi频段
       * </pre>
       */
      public Builder clearFrequencyBand() {
        bitField0_ = (bitField0_ & ~0x00000080);
        frequencyBand_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiFrequencyBandType.emWifiFrequencyBandType_24GHz;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiApConfiguration)
    }

    static {
      defaultInstance = new TWifiApConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiApConfiguration)
  }

  public interface TWifiConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool enable_autoconn = 1;
    /**
     * <code>optional bool enable_autoconn = 1;</code>
     *
     * <pre>
     *是否自动连接，默认开启
     * </pre>
     */
    boolean hasEnableAutoconn();
    /**
     * <code>optional bool enable_autoconn = 1;</code>
     *
     * <pre>
     *是否自动连接，默认开启
     * </pre>
     */
    boolean getEnableAutoconn();

    // optional bool enable_autoip = 2;
    /**
     * <code>optional bool enable_autoip = 2;</code>
     *
     * <pre>
     *是否自动获取ip,默认开启
     * </pre>
     */
    boolean hasEnableAutoip();
    /**
     * <code>optional bool enable_autoip = 2;</code>
     *
     * <pre>
     *是否自动获取ip,默认开启
     * </pre>
     */
    boolean getEnableAutoip();

    // optional uint32 ip = 3;
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 4;
    /**
     * <code>optional uint32 mask = 4;</code>
     *
     * <pre>
     *子网掩码	(网络序)  
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 4;</code>
     *
     * <pre>
     *子网掩码	(网络序)  
     * </pre>
     */
    int getMask();

    // optional uint32 gateway = 5;
    /**
     * <code>optional uint32 gateway = 5;</code>
     *
     * <pre>
     *网关(网络序)
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional uint32 gateway = 5;</code>
     *
     * <pre>
     *网关(网络序)
     * </pre>
     */
    int getGateway();
  }
  /**
   * Protobuf type {@code mt.TWifiConfiguration}
   *
   * <pre>
   ** Wifi作为客户端工作模式时的配置
   * </pre>
   */
  public static final class TWifiConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements TWifiConfigurationOrBuilder {
    // Use TWifiConfiguration.newBuilder() to construct.
    private TWifiConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiConfiguration defaultInstance;
    public static TWifiConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enableAutoconn_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              enableAutoip_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ip_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mask_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gateway_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<TWifiConfiguration>() {
      public TWifiConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool enable_autoconn = 1;
    public static final int ENABLE_AUTOCONN_FIELD_NUMBER = 1;
    private boolean enableAutoconn_;
    /**
     * <code>optional bool enable_autoconn = 1;</code>
     *
     * <pre>
     *是否自动连接，默认开启
     * </pre>
     */
    public boolean hasEnableAutoconn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool enable_autoconn = 1;</code>
     *
     * <pre>
     *是否自动连接，默认开启
     * </pre>
     */
    public boolean getEnableAutoconn() {
      return enableAutoconn_;
    }

    // optional bool enable_autoip = 2;
    public static final int ENABLE_AUTOIP_FIELD_NUMBER = 2;
    private boolean enableAutoip_;
    /**
     * <code>optional bool enable_autoip = 2;</code>
     *
     * <pre>
     *是否自动获取ip,默认开启
     * </pre>
     */
    public boolean hasEnableAutoip() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool enable_autoip = 2;</code>
     *
     * <pre>
     *是否自动获取ip,默认开启
     * </pre>
     */
    public boolean getEnableAutoip() {
      return enableAutoip_;
    }

    // optional uint32 ip = 3;
    public static final int IP_FIELD_NUMBER = 3;
    private int ip_;
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ip = 3;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 4;
    public static final int MASK_FIELD_NUMBER = 4;
    private int mask_;
    /**
     * <code>optional uint32 mask = 4;</code>
     *
     * <pre>
     *子网掩码	(网络序)  
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 mask = 4;</code>
     *
     * <pre>
     *子网掩码	(网络序)  
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional uint32 gateway = 5;
    public static final int GATEWAY_FIELD_NUMBER = 5;
    private int gateway_;
    /**
     * <code>optional uint32 gateway = 5;</code>
     *
     * <pre>
     *网关(网络序)
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 gateway = 5;</code>
     *
     * <pre>
     *网关(网络序)
     * </pre>
     */
    public int getGateway() {
      return gateway_;
    }

    private void initFields() {
      enableAutoconn_ = false;
      enableAutoip_ = false;
      ip_ = 0;
      mask_ = 0;
      gateway_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enableAutoconn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, enableAutoip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, mask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, gateway_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enableAutoconn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, enableAutoip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, mask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, gateway_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiConfiguration}
     *
     * <pre>
     ** Wifi作为客户端工作模式时的配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        enableAutoconn_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        enableAutoip_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        gateway_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConfiguration_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enableAutoconn_ = enableAutoconn_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.enableAutoip_ = enableAutoip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gateway_ = gateway_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration.getDefaultInstance()) return this;
        if (other.hasEnableAutoconn()) {
          setEnableAutoconn(other.getEnableAutoconn());
        }
        if (other.hasEnableAutoip()) {
          setEnableAutoip(other.getEnableAutoip());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool enable_autoconn = 1;
      private boolean enableAutoconn_ ;
      /**
       * <code>optional bool enable_autoconn = 1;</code>
       *
       * <pre>
       *是否自动连接，默认开启
       * </pre>
       */
      public boolean hasEnableAutoconn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool enable_autoconn = 1;</code>
       *
       * <pre>
       *是否自动连接，默认开启
       * </pre>
       */
      public boolean getEnableAutoconn() {
        return enableAutoconn_;
      }
      /**
       * <code>optional bool enable_autoconn = 1;</code>
       *
       * <pre>
       *是否自动连接，默认开启
       * </pre>
       */
      public Builder setEnableAutoconn(boolean value) {
        bitField0_ |= 0x00000001;
        enableAutoconn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enable_autoconn = 1;</code>
       *
       * <pre>
       *是否自动连接，默认开启
       * </pre>
       */
      public Builder clearEnableAutoconn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enableAutoconn_ = false;
        onChanged();
        return this;
      }

      // optional bool enable_autoip = 2;
      private boolean enableAutoip_ ;
      /**
       * <code>optional bool enable_autoip = 2;</code>
       *
       * <pre>
       *是否自动获取ip,默认开启
       * </pre>
       */
      public boolean hasEnableAutoip() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool enable_autoip = 2;</code>
       *
       * <pre>
       *是否自动获取ip,默认开启
       * </pre>
       */
      public boolean getEnableAutoip() {
        return enableAutoip_;
      }
      /**
       * <code>optional bool enable_autoip = 2;</code>
       *
       * <pre>
       *是否自动获取ip,默认开启
       * </pre>
       */
      public Builder setEnableAutoip(boolean value) {
        bitField0_ |= 0x00000002;
        enableAutoip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enable_autoip = 2;</code>
       *
       * <pre>
       *是否自动获取ip,默认开启
       * </pre>
       */
      public Builder clearEnableAutoip() {
        bitField0_ = (bitField0_ & ~0x00000002);
        enableAutoip_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ip = 3;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 3;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 4;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 4;</code>
       *
       * <pre>
       *子网掩码	(网络序)  
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 mask = 4;</code>
       *
       * <pre>
       *子网掩码	(网络序)  
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 4;</code>
       *
       * <pre>
       *子网掩码	(网络序)  
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000008;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 4;</code>
       *
       * <pre>
       *子网掩码	(网络序)  
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway = 5;
      private int gateway_ ;
      /**
       * <code>optional uint32 gateway = 5;</code>
       *
       * <pre>
       *网关(网络序)
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 gateway = 5;</code>
       *
       * <pre>
       *网关(网络序)
       * </pre>
       */
      public int getGateway() {
        return gateway_;
      }
      /**
       * <code>optional uint32 gateway = 5;</code>
       *
       * <pre>
       *网关(网络序)
       * </pre>
       */
      public Builder setGateway(int value) {
        bitField0_ |= 0x00000010;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway = 5;</code>
       *
       * <pre>
       *网关(网络序)
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gateway_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiConfiguration)
    }

    static {
      defaultInstance = new TWifiConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiConfiguration)
  }

  public interface TWifiScanResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string ssid = 1;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional .mt.EmWifiKeyType capabilities = 2;
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
     *
     * <pre>
     *加密类型  
     * </pre>
     */
    boolean hasCapabilities();
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
     *
     * <pre>
     *加密类型  
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities();

    // optional .mt.EmWifiSignalLevel signalLevel = 3;
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    boolean hasSignalLevel();
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel();

    // optional bool issave = 4;
    /**
     * <code>optional bool issave = 4;</code>
     *
     * <pre>
     *本地保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    boolean hasIssave();
    /**
     * <code>optional bool issave = 4;</code>
     *
     * <pre>
     *本地保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    boolean getIssave();

    // optional int32 networkid = 5;
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 issave为true时生效
     * </pre>
     */
    boolean hasNetworkid();
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 issave为true时生效
     * </pre>
     */
    int getNetworkid();
  }
  /**
   * Protobuf type {@code mt.TWifiScanResult}
   *
   * <pre>
   ** Wifi 扫描结果信息
   * </pre>
   */
  public static final class TWifiScanResult extends
      com.google.protobuf.GeneratedMessage
      implements TWifiScanResultOrBuilder {
    // Use TWifiScanResult.newBuilder() to construct.
    private TWifiScanResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiScanResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiScanResult defaultInstance;
    public static TWifiScanResult getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiScanResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiScanResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                capabilities_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                signalLevel_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              issave_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              networkid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiScanResult> PARSER =
        new com.google.protobuf.AbstractParser<TWifiScanResult>() {
      public TWifiScanResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiScanResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiScanResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .mt.EmWifiKeyType capabilities = 2;
    public static final int CAPABILITIES_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType capabilities_;
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
     *
     * <pre>
     *加密类型  
     * </pre>
     */
    public boolean hasCapabilities() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
     *
     * <pre>
     *加密类型  
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities() {
      return capabilities_;
    }

    // optional .mt.EmWifiSignalLevel signalLevel = 3;
    public static final int SIGNALLEVEL_FIELD_NUMBER = 3;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel signalLevel_;
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public boolean hasSignalLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel() {
      return signalLevel_;
    }

    // optional bool issave = 4;
    public static final int ISSAVE_FIELD_NUMBER = 4;
    private boolean issave_;
    /**
     * <code>optional bool issave = 4;</code>
     *
     * <pre>
     *本地保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    public boolean hasIssave() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool issave = 4;</code>
     *
     * <pre>
     *本地保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    public boolean getIssave() {
      return issave_;
    }

    // optional int32 networkid = 5;
    public static final int NETWORKID_FIELD_NUMBER = 5;
    private int networkid_;
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 issave为true时生效
     * </pre>
     */
    public boolean hasNetworkid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 issave为true时生效
     * </pre>
     */
    public int getNetworkid() {
      return networkid_;
    }

    private void initFields() {
      ssid_ = "";
      capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
      signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
      issave_ = false;
      networkid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, issave_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, networkid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, issave_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, networkid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiScanResult}
     *
     * <pre>
     ** Wifi 扫描结果信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
        bitField0_ = (bitField0_ & ~0x00000002);
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
        bitField0_ = (bitField0_ & ~0x00000004);
        issave_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        networkid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResult_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.capabilities_ = capabilities_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signalLevel_ = signalLevel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.issave_ = issave_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.networkid_ = networkid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          bitField0_ |= 0x00000001;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasCapabilities()) {
          setCapabilities(other.getCapabilities());
        }
        if (other.hasSignalLevel()) {
          setSignalLevel(other.getSignalLevel());
        }
        if (other.hasIssave()) {
          setIssave(other.getIssave());
        }
        if (other.hasNetworkid()) {
          setNetworkid(other.getNetworkid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string ssid = 1;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiKeyType capabilities = 2;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
       *
       * <pre>
       *加密类型  
       * </pre>
       */
      public boolean hasCapabilities() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
       *
       * <pre>
       *加密类型  
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities() {
        return capabilities_;
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
       *
       * <pre>
       *加密类型  
       * </pre>
       */
      public Builder setCapabilities(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 2;</code>
       *
       * <pre>
       *加密类型  
       * </pre>
       */
      public Builder clearCapabilities() {
        bitField0_ = (bitField0_ & ~0x00000002);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiSignalLevel signalLevel = 3;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public boolean hasSignalLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel() {
        return signalLevel_;
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder setSignalLevel(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        signalLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder clearSignalLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
        onChanged();
        return this;
      }

      // optional bool issave = 4;
      private boolean issave_ ;
      /**
       * <code>optional bool issave = 4;</code>
       *
       * <pre>
       *本地保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public boolean hasIssave() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool issave = 4;</code>
       *
       * <pre>
       *本地保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public boolean getIssave() {
        return issave_;
      }
      /**
       * <code>optional bool issave = 4;</code>
       *
       * <pre>
       *本地保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public Builder setIssave(boolean value) {
        bitField0_ |= 0x00000008;
        issave_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool issave = 4;</code>
       *
       * <pre>
       *本地保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public Builder clearIssave() {
        bitField0_ = (bitField0_ & ~0x00000008);
        issave_ = false;
        onChanged();
        return this;
      }

      // optional int32 networkid = 5;
      private int networkid_ ;
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 issave为true时生效
       * </pre>
       */
      public boolean hasNetworkid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 issave为true时生效
       * </pre>
       */
      public int getNetworkid() {
        return networkid_;
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 issave为true时生效
       * </pre>
       */
      public Builder setNetworkid(int value) {
        bitField0_ |= 0x00000010;
        networkid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 issave为true时生效
       * </pre>
       */
      public Builder clearNetworkid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        networkid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiScanResult)
    }

    static {
      defaultInstance = new TWifiScanResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiScanResult)
  }

  public interface TWifiScanResultListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mt.TWifiScanResult scan_list = 1;
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> 
        getScanListList();
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult getScanList(int index);
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    int getScanListCount();
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder> 
        getScanListOrBuilderList();
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder getScanListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TWifiScanResultList}
   *
   * <pre>
   ** Wifi 扫描结果列表
   * </pre>
   */
  public static final class TWifiScanResultList extends
      com.google.protobuf.GeneratedMessage
      implements TWifiScanResultListOrBuilder {
    // Use TWifiScanResultList.newBuilder() to construct.
    private TWifiScanResultList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiScanResultList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiScanResultList defaultInstance;
    public static TWifiScanResultList getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiScanResultList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiScanResultList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                scanList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              scanList_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          scanList_ = java.util.Collections.unmodifiableList(scanList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResultList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResultList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiScanResultList> PARSER =
        new com.google.protobuf.AbstractParser<TWifiScanResultList>() {
      public TWifiScanResultList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiScanResultList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiScanResultList> getParserForType() {
      return PARSER;
    }

    // repeated .mt.TWifiScanResult scan_list = 1;
    public static final int SCAN_LIST_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> scanList_;
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> getScanListList() {
      return scanList_;
    }
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder> 
        getScanListOrBuilderList() {
      return scanList_;
    }
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    public int getScanListCount() {
      return scanList_.size();
    }
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult getScanList(int index) {
      return scanList_.get(index);
    }
    /**
     * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
     *
     * <pre>
     *wifi扫描列表
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder getScanListOrBuilder(
        int index) {
      return scanList_.get(index);
    }

    private void initFields() {
      scanList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < scanList_.size(); i++) {
        output.writeMessage(1, scanList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < scanList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, scanList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiScanResultList}
     *
     * <pre>
     ** Wifi 扫描结果列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResultList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResultList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScanListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (scanListBuilder_ == null) {
          scanList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          scanListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiScanResultList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList(this);
        int from_bitField0_ = bitField0_;
        if (scanListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            scanList_ = java.util.Collections.unmodifiableList(scanList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.scanList_ = scanList_;
        } else {
          result.scanList_ = scanListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList.getDefaultInstance()) return this;
        if (scanListBuilder_ == null) {
          if (!other.scanList_.isEmpty()) {
            if (scanList_.isEmpty()) {
              scanList_ = other.scanList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureScanListIsMutable();
              scanList_.addAll(other.scanList_);
            }
            onChanged();
          }
        } else {
          if (!other.scanList_.isEmpty()) {
            if (scanListBuilder_.isEmpty()) {
              scanListBuilder_.dispose();
              scanListBuilder_ = null;
              scanList_ = other.scanList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              scanListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScanListFieldBuilder() : null;
            } else {
              scanListBuilder_.addAllMessages(other.scanList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mt.TWifiScanResult scan_list = 1;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> scanList_ =
        java.util.Collections.emptyList();
      private void ensureScanListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          scanList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult>(scanList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder> scanListBuilder_;

      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> getScanListList() {
        if (scanListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scanList_);
        } else {
          return scanListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public int getScanListCount() {
        if (scanListBuilder_ == null) {
          return scanList_.size();
        } else {
          return scanListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult getScanList(int index) {
        if (scanListBuilder_ == null) {
          return scanList_.get(index);
        } else {
          return scanListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder setScanList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult value) {
        if (scanListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScanListIsMutable();
          scanList_.set(index, value);
          onChanged();
        } else {
          scanListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder setScanList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder builderForValue) {
        if (scanListBuilder_ == null) {
          ensureScanListIsMutable();
          scanList_.set(index, builderForValue.build());
          onChanged();
        } else {
          scanListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder addScanList(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult value) {
        if (scanListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScanListIsMutable();
          scanList_.add(value);
          onChanged();
        } else {
          scanListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder addScanList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult value) {
        if (scanListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScanListIsMutable();
          scanList_.add(index, value);
          onChanged();
        } else {
          scanListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder addScanList(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder builderForValue) {
        if (scanListBuilder_ == null) {
          ensureScanListIsMutable();
          scanList_.add(builderForValue.build());
          onChanged();
        } else {
          scanListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder addScanList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder builderForValue) {
        if (scanListBuilder_ == null) {
          ensureScanListIsMutable();
          scanList_.add(index, builderForValue.build());
          onChanged();
        } else {
          scanListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder addAllScanList(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult> values) {
        if (scanListBuilder_ == null) {
          ensureScanListIsMutable();
          super.addAll(values, scanList_);
          onChanged();
        } else {
          scanListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder clearScanList() {
        if (scanListBuilder_ == null) {
          scanList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          scanListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public Builder removeScanList(int index) {
        if (scanListBuilder_ == null) {
          ensureScanListIsMutable();
          scanList_.remove(index);
          onChanged();
        } else {
          scanListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder getScanListBuilder(
          int index) {
        return getScanListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder getScanListOrBuilder(
          int index) {
        if (scanListBuilder_ == null) {
          return scanList_.get(index);  } else {
          return scanListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder> 
           getScanListOrBuilderList() {
        if (scanListBuilder_ != null) {
          return scanListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scanList_);
        }
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder addScanListBuilder() {
        return getScanListFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder addScanListBuilder(
          int index) {
        return getScanListFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TWifiScanResult scan_list = 1;</code>
       *
       * <pre>
       *wifi扫描列表
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder> 
           getScanListBuilderList() {
        return getScanListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder> 
          getScanListFieldBuilder() {
        if (scanListBuilder_ == null) {
          scanListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResult.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiScanResultOrBuilder>(
                  scanList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          scanList_ = null;
        }
        return scanListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiScanResultList)
    }

    static {
      defaultInstance = new TWifiScanResultList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiScanResultList)
  }

  public interface TWifiCurDetailInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmWifiLinkState state = 1;
    /**
     * <code>optional .mt.EmWifiLinkState state = 1;</code>
     *
     * <pre>
     *连接状态
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional .mt.EmWifiLinkState state = 1;</code>
     *
     * <pre>
     *连接状态
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState getState();

    // optional int32 networkid = 2;
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    boolean hasNetworkid();
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    int getNetworkid();

    // optional string ssid = 3;
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional string bssid = 4;
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    boolean hasBssid();
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    java.lang.String getBssid();
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    com.google.protobuf.ByteString
        getBssidBytes();

    // optional string mac_address = 5;
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    boolean hasMacAddress();
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    java.lang.String getMacAddress();
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacAddressBytes();

    // optional uint32 ip = 6;
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *当前IP地址
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *当前IP地址
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 7;
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *子网掩码	  
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *子网掩码	  
     * </pre>
     */
    int getMask();

    // optional uint32 gateway = 8;
    /**
     * <code>optional uint32 gateway = 8;</code>
     *
     * <pre>
     *网关	
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional uint32 gateway = 8;</code>
     *
     * <pre>
     *网关	
     * </pre>
     */
    int getGateway();

    // optional .mt.EmWifiLinkErrReason reason = 9;
    /**
     * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason getReason();
  }
  /**
   * Protobuf type {@code mt.TWifiCurDetailInfo}
   *
   * <pre>
   ** 当前Wifi连接的详细信息
   * </pre>
   */
  public static final class TWifiCurDetailInfo extends
      com.google.protobuf.GeneratedMessage
      implements TWifiCurDetailInfoOrBuilder {
    // Use TWifiCurDetailInfo.newBuilder() to construct.
    private TWifiCurDetailInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiCurDetailInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiCurDetailInfo defaultInstance;
    public static TWifiCurDetailInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiCurDetailInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiCurDetailInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              networkid_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ssid_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              bssid_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              macAddress_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ip_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              mask_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              gateway_ = input.readUInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                reason_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiCurDetailInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiCurDetailInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiCurDetailInfo> PARSER =
        new com.google.protobuf.AbstractParser<TWifiCurDetailInfo>() {
      public TWifiCurDetailInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiCurDetailInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiCurDetailInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmWifiLinkState state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState state_;
    /**
     * <code>optional .mt.EmWifiLinkState state = 1;</code>
     *
     * <pre>
     *连接状态
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmWifiLinkState state = 1;</code>
     *
     * <pre>
     *连接状态
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState getState() {
      return state_;
    }

    // optional int32 networkid = 2;
    public static final int NETWORKID_FIELD_NUMBER = 2;
    private int networkid_;
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    public boolean hasNetworkid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    public int getNetworkid() {
      return networkid_;
    }

    // optional string ssid = 3;
    public static final int SSID_FIELD_NUMBER = 3;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 3;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string bssid = 4;
    public static final int BSSID_FIELD_NUMBER = 4;
    private java.lang.Object bssid_;
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    public boolean hasBssid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    public java.lang.String getBssid() {
      java.lang.Object ref = bssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bssid = 4;</code>
     *
     * <pre>
     *wifi-ap BSSID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBssidBytes() {
      java.lang.Object ref = bssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string mac_address = 5;
    public static final int MAC_ADDRESS_FIELD_NUMBER = 5;
    private java.lang.Object macAddress_;
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    public boolean hasMacAddress() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    public java.lang.String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mac_address = 5;</code>
     *
     * <pre>
     *当前AP的MAC
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ip = 6;
    public static final int IP_FIELD_NUMBER = 6;
    private int ip_;
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *当前IP地址
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ip = 6;</code>
     *
     * <pre>
     *当前IP地址
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 7;
    public static final int MASK_FIELD_NUMBER = 7;
    private int mask_;
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *子网掩码	  
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 mask = 7;</code>
     *
     * <pre>
     *子网掩码	  
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional uint32 gateway = 8;
    public static final int GATEWAY_FIELD_NUMBER = 8;
    private int gateway_;
    /**
     * <code>optional uint32 gateway = 8;</code>
     *
     * <pre>
     *网关	
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 gateway = 8;</code>
     *
     * <pre>
     *网关	
     * </pre>
     */
    public int getGateway() {
      return gateway_;
    }

    // optional .mt.EmWifiLinkErrReason reason = 9;
    public static final int REASON_FIELD_NUMBER = 9;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason reason_;
    /**
     * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason getReason() {
      return reason_;
    }

    private void initFields() {
      state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState.emWifiLinkStateIdle;
      networkid_ = 0;
      ssid_ = "";
      bssid_ = "";
      macAddress_ = "";
      ip_ = 0;
      mask_ = 0;
      gateway_ = 0;
      reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason.emWifiLinkErrReason_None;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, networkid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSsidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getBssidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getMacAddressBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, ip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, mask_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, gateway_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, reason_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, networkid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSsidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getBssidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getMacAddressBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ip_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, mask_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, gateway_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, reason_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiCurDetailInfo}
     *
     * <pre>
     ** 当前Wifi连接的详细信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiCurDetailInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiCurDetailInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState.emWifiLinkStateIdle;
        bitField0_ = (bitField0_ & ~0x00000001);
        networkid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        bssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        macAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gateway_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason.emWifiLinkErrReason_None;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiCurDetailInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.networkid_ = networkid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bssid_ = bssid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.macAddress_ = macAddress_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.reason_ = reason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasNetworkid()) {
          setNetworkid(other.getNetworkid());
        }
        if (other.hasSsid()) {
          bitField0_ |= 0x00000004;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasBssid()) {
          bitField0_ |= 0x00000008;
          bssid_ = other.bssid_;
          onChanged();
        }
        if (other.hasMacAddress()) {
          bitField0_ |= 0x00000010;
          macAddress_ = other.macAddress_;
          onChanged();
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiCurDetailInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmWifiLinkState state = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState.emWifiLinkStateIdle;
      /**
       * <code>optional .mt.EmWifiLinkState state = 1;</code>
       *
       * <pre>
       *连接状态
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmWifiLinkState state = 1;</code>
       *
       * <pre>
       *连接状态
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState getState() {
        return state_;
      }
      /**
       * <code>optional .mt.EmWifiLinkState state = 1;</code>
       *
       * <pre>
       *连接状态
       * </pre>
       */
      public Builder setState(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiLinkState state = 1;</code>
       *
       * <pre>
       *连接状态
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkState.emWifiLinkStateIdle;
        onChanged();
        return this;
      }

      // optional int32 networkid = 2;
      private int networkid_ ;
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public boolean hasNetworkid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public int getNetworkid() {
        return networkid_;
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public Builder setNetworkid(int value) {
        bitField0_ |= 0x00000002;
        networkid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public Builder clearNetworkid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        networkid_ = 0;
        onChanged();
        return this;
      }

      // optional string ssid = 3;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 3;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional string bssid = 4;
      private java.lang.Object bssid_ = "";
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public boolean hasBssid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public java.lang.String getBssid() {
        java.lang.Object ref = bssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          bssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBssidBytes() {
        java.lang.Object ref = bssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public Builder setBssid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public Builder clearBssid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bssid_ = getDefaultInstance().getBssid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bssid = 4;</code>
       *
       * <pre>
       *wifi-ap BSSID
       * </pre>
       */
      public Builder setBssidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bssid_ = value;
        onChanged();
        return this;
      }

      // optional string mac_address = 5;
      private java.lang.Object macAddress_ = "";
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public boolean hasMacAddress() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public java.lang.String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          macAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacAddressBytes() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public Builder setMacAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        macAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public Builder clearMacAddress() {
        bitField0_ = (bitField0_ & ~0x00000010);
        macAddress_ = getDefaultInstance().getMacAddress();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_address = 5;</code>
       *
       * <pre>
       *当前AP的MAC
       * </pre>
       */
      public Builder setMacAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        macAddress_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ip = 6;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *当前IP地址
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *当前IP地址
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *当前IP地址
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000020;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 6;</code>
       *
       * <pre>
       *当前IP地址
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 7;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *子网掩码	  
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *子网掩码	  
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *子网掩码	  
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000040;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 7;</code>
       *
       * <pre>
       *子网掩码	  
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway = 8;
      private int gateway_ ;
      /**
       * <code>optional uint32 gateway = 8;</code>
       *
       * <pre>
       *网关	
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 gateway = 8;</code>
       *
       * <pre>
       *网关	
       * </pre>
       */
      public int getGateway() {
        return gateway_;
      }
      /**
       * <code>optional uint32 gateway = 8;</code>
       *
       * <pre>
       *网关	
       * </pre>
       */
      public Builder setGateway(int value) {
        bitField0_ |= 0x00000080;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway = 8;</code>
       *
       * <pre>
       *网关	
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gateway_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiLinkErrReason reason = 9;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason.emWifiLinkErrReason_None;
      /**
       * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason getReason() {
        return reason_;
      }
      /**
       * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public Builder setReason(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiLinkErrReason reason = 9;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiLinkErrReason.emWifiLinkErrReason_None;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiCurDetailInfo)
    }

    static {
      defaultInstance = new TWifiCurDetailInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiCurDetailInfo)
  }

  public interface TWifiStatisInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string ssid = 1;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional int32 networkid = 2;
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    boolean hasNetworkid();
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    int getNetworkid();

    // optional .mt.EmWifiSignalLevel signalLevel = 3;
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    boolean hasSignalLevel();
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel();

    // optional uint32 down_total_bytes = 4;
    /**
     * <code>optional uint32 down_total_bytes = 4;</code>
     *
     * <pre>
     *下行总流量 Byte
     * </pre>
     */
    boolean hasDownTotalBytes();
    /**
     * <code>optional uint32 down_total_bytes = 4;</code>
     *
     * <pre>
     *下行总流量 Byte
     * </pre>
     */
    int getDownTotalBytes();

    // optional uint32 up_total_bytes = 5;
    /**
     * <code>optional uint32 up_total_bytes = 5;</code>
     *
     * <pre>
     *上行总流量 Byte
     * </pre>
     */
    boolean hasUpTotalBytes();
    /**
     * <code>optional uint32 up_total_bytes = 5;</code>
     *
     * <pre>
     *上行总流量 Byte
     * </pre>
     */
    int getUpTotalBytes();
  }
  /**
   * Protobuf type {@code mt.TWifiStatisInfo}
   *
   * <pre>
   ** 当前Wifi连接的统计信息
   * </pre>
   */
  public static final class TWifiStatisInfo extends
      com.google.protobuf.GeneratedMessage
      implements TWifiStatisInfoOrBuilder {
    // Use TWifiStatisInfo.newBuilder() to construct.
    private TWifiStatisInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiStatisInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiStatisInfo defaultInstance;
    public static TWifiStatisInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiStatisInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiStatisInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              networkid_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                signalLevel_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              downTotalBytes_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              upTotalBytes_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiStatisInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiStatisInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiStatisInfo> PARSER =
        new com.google.protobuf.AbstractParser<TWifiStatisInfo>() {
      public TWifiStatisInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiStatisInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiStatisInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 1;</code>
     *
     * <pre>
     *wifi-ap热点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 networkid = 2;
    public static final int NETWORKID_FIELD_NUMBER = 2;
    private int networkid_;
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    public boolean hasNetworkid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 networkid = 2;</code>
     *
     * <pre>
     *当前得到的连接ID标识
     * </pre>
     */
    public int getNetworkid() {
      return networkid_;
    }

    // optional .mt.EmWifiSignalLevel signalLevel = 3;
    public static final int SIGNALLEVEL_FIELD_NUMBER = 3;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel signalLevel_;
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public boolean hasSignalLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel() {
      return signalLevel_;
    }

    // optional uint32 down_total_bytes = 4;
    public static final int DOWN_TOTAL_BYTES_FIELD_NUMBER = 4;
    private int downTotalBytes_;
    /**
     * <code>optional uint32 down_total_bytes = 4;</code>
     *
     * <pre>
     *下行总流量 Byte
     * </pre>
     */
    public boolean hasDownTotalBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 down_total_bytes = 4;</code>
     *
     * <pre>
     *下行总流量 Byte
     * </pre>
     */
    public int getDownTotalBytes() {
      return downTotalBytes_;
    }

    // optional uint32 up_total_bytes = 5;
    public static final int UP_TOTAL_BYTES_FIELD_NUMBER = 5;
    private int upTotalBytes_;
    /**
     * <code>optional uint32 up_total_bytes = 5;</code>
     *
     * <pre>
     *上行总流量 Byte
     * </pre>
     */
    public boolean hasUpTotalBytes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 up_total_bytes = 5;</code>
     *
     * <pre>
     *上行总流量 Byte
     * </pre>
     */
    public int getUpTotalBytes() {
      return upTotalBytes_;
    }

    private void initFields() {
      ssid_ = "";
      networkid_ = 0;
      signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
      downTotalBytes_ = 0;
      upTotalBytes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, networkid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, downTotalBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, upTotalBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, networkid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, downTotalBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, upTotalBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiStatisInfo}
     *
     * <pre>
     ** 当前Wifi连接的统计信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiStatisInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiStatisInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        networkid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
        bitField0_ = (bitField0_ & ~0x00000004);
        downTotalBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        upTotalBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiStatisInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.networkid_ = networkid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signalLevel_ = signalLevel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.downTotalBytes_ = downTotalBytes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.upTotalBytes_ = upTotalBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          bitField0_ |= 0x00000001;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasNetworkid()) {
          setNetworkid(other.getNetworkid());
        }
        if (other.hasSignalLevel()) {
          setSignalLevel(other.getSignalLevel());
        }
        if (other.hasDownTotalBytes()) {
          setDownTotalBytes(other.getDownTotalBytes());
        }
        if (other.hasUpTotalBytes()) {
          setUpTotalBytes(other.getUpTotalBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiStatisInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string ssid = 1;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 1;</code>
       *
       * <pre>
       *wifi-ap热点名称
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional int32 networkid = 2;
      private int networkid_ ;
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public boolean hasNetworkid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public int getNetworkid() {
        return networkid_;
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public Builder setNetworkid(int value) {
        bitField0_ |= 0x00000002;
        networkid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 networkid = 2;</code>
       *
       * <pre>
       *当前得到的连接ID标识
       * </pre>
       */
      public Builder clearNetworkid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        networkid_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiSignalLevel signalLevel = 3;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public boolean hasSignalLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel getSignalLevel() {
        return signalLevel_;
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder setSignalLevel(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        signalLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiSignalLevel signalLevel = 3;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder clearSignalLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiSignalLevel.emWifiSignalLevelNone;
        onChanged();
        return this;
      }

      // optional uint32 down_total_bytes = 4;
      private int downTotalBytes_ ;
      /**
       * <code>optional uint32 down_total_bytes = 4;</code>
       *
       * <pre>
       *下行总流量 Byte
       * </pre>
       */
      public boolean hasDownTotalBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 down_total_bytes = 4;</code>
       *
       * <pre>
       *下行总流量 Byte
       * </pre>
       */
      public int getDownTotalBytes() {
        return downTotalBytes_;
      }
      /**
       * <code>optional uint32 down_total_bytes = 4;</code>
       *
       * <pre>
       *下行总流量 Byte
       * </pre>
       */
      public Builder setDownTotalBytes(int value) {
        bitField0_ |= 0x00000008;
        downTotalBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 down_total_bytes = 4;</code>
       *
       * <pre>
       *下行总流量 Byte
       * </pre>
       */
      public Builder clearDownTotalBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        downTotalBytes_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 up_total_bytes = 5;
      private int upTotalBytes_ ;
      /**
       * <code>optional uint32 up_total_bytes = 5;</code>
       *
       * <pre>
       *上行总流量 Byte
       * </pre>
       */
      public boolean hasUpTotalBytes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 up_total_bytes = 5;</code>
       *
       * <pre>
       *上行总流量 Byte
       * </pre>
       */
      public int getUpTotalBytes() {
        return upTotalBytes_;
      }
      /**
       * <code>optional uint32 up_total_bytes = 5;</code>
       *
       * <pre>
       *上行总流量 Byte
       * </pre>
       */
      public Builder setUpTotalBytes(int value) {
        bitField0_ |= 0x00000010;
        upTotalBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 up_total_bytes = 5;</code>
       *
       * <pre>
       *上行总流量 Byte
       * </pre>
       */
      public Builder clearUpTotalBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upTotalBytes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiStatisInfo)
    }

    static {
      defaultInstance = new TWifiStatisInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiStatisInfo)
  }

  public interface TWifiConnParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool issave = 1;
    /**
     * <code>optional bool issave = 1;</code>
     *
     * <pre>
     *本地是否保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    boolean hasIssave();
    /**
     * <code>optional bool issave = 1;</code>
     *
     * <pre>
     *本地是否保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    boolean getIssave();

    // optional string ssid = 2;
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional .mt.EmWifiKeyType capabilities = 3;
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
     *
     * <pre>
     *加密类型 (issave为false时生效)       
     * </pre>
     */
    boolean hasCapabilities();
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
     *
     * <pre>
     *加密类型 (issave为false时生效)       
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities();

    // optional string password = 4;
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    // optional int32 networkid = 5;
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 (issave为true时生效)
     * </pre>
     */
    boolean hasNetworkid();
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 (issave为true时生效)
     * </pre>
     */
    int getNetworkid();
  }
  /**
   * Protobuf type {@code mt.TWifiConnParam}
   *
   * <pre>
   ** Wifi 连接参数
   * </pre>
   */
  public static final class TWifiConnParam extends
      com.google.protobuf.GeneratedMessage
      implements TWifiConnParamOrBuilder {
    // Use TWifiConnParam.newBuilder() to construct.
    private TWifiConnParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiConnParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiConnParam defaultInstance;
    public static TWifiConnParam getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiConnParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiConnParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              issave_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ssid_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                capabilities_ = value;
              }
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              password_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              networkid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConnParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConnParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiConnParam> PARSER =
        new com.google.protobuf.AbstractParser<TWifiConnParam>() {
      public TWifiConnParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiConnParam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiConnParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool issave = 1;
    public static final int ISSAVE_FIELD_NUMBER = 1;
    private boolean issave_;
    /**
     * <code>optional bool issave = 1;</code>
     *
     * <pre>
     *本地是否保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    public boolean hasIssave() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool issave = 1;</code>
     *
     * <pre>
     *本地是否保存过的 true-保存使用过  false-未使用过
     * </pre>
     */
    public boolean getIssave() {
      return issave_;
    }

    // optional string ssid = 2;
    public static final int SSID_FIELD_NUMBER = 2;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 2;</code>
     *
     * <pre>
     *wifi-ap热点名称 (issave为false时生效)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .mt.EmWifiKeyType capabilities = 3;
    public static final int CAPABILITIES_FIELD_NUMBER = 3;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType capabilities_;
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
     *
     * <pre>
     *加密类型 (issave为false时生效)       
     * </pre>
     */
    public boolean hasCapabilities() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
     *
     * <pre>
     *加密类型 (issave为false时生效)       
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities() {
      return capabilities_;
    }

    // optional string password = 4;
    public static final int PASSWORD_FIELD_NUMBER = 4;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *登录密码,未加密为空 (issave为false时生效)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 networkid = 5;
    public static final int NETWORKID_FIELD_NUMBER = 5;
    private int networkid_;
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 (issave为true时生效)
     * </pre>
     */
    public boolean hasNetworkid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 networkid = 5;</code>
     *
     * <pre>
     *保存的连接标识 (issave为true时生效)
     * </pre>
     */
    public int getNetworkid() {
      return networkid_;
    }

    private void initFields() {
      issave_ = false;
      ssid_ = "";
      capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
      password_ = "";
      networkid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, issave_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSsidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, networkid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, issave_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSsidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, capabilities_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, networkid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiConnParam}
     *
     * <pre>
     ** Wifi 连接参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConnParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConnParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        issave_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        networkid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiConnParam_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.issave_ = issave_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.capabilities_ = capabilities_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.networkid_ = networkid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam.getDefaultInstance()) return this;
        if (other.hasIssave()) {
          setIssave(other.getIssave());
        }
        if (other.hasSsid()) {
          bitField0_ |= 0x00000002;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasCapabilities()) {
          setCapabilities(other.getCapabilities());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000008;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasNetworkid()) {
          setNetworkid(other.getNetworkid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiConnParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool issave = 1;
      private boolean issave_ ;
      /**
       * <code>optional bool issave = 1;</code>
       *
       * <pre>
       *本地是否保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public boolean hasIssave() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool issave = 1;</code>
       *
       * <pre>
       *本地是否保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public boolean getIssave() {
        return issave_;
      }
      /**
       * <code>optional bool issave = 1;</code>
       *
       * <pre>
       *本地是否保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public Builder setIssave(boolean value) {
        bitField0_ |= 0x00000001;
        issave_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool issave = 1;</code>
       *
       * <pre>
       *本地是否保存过的 true-保存使用过  false-未使用过
       * </pre>
       */
      public Builder clearIssave() {
        bitField0_ = (bitField0_ & ~0x00000001);
        issave_ = false;
        onChanged();
        return this;
      }

      // optional string ssid = 2;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 2;</code>
       *
       * <pre>
       *wifi-ap热点名称 (issave为false时生效)
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional .mt.EmWifiKeyType capabilities = 3;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
       *
       * <pre>
       *加密类型 (issave为false时生效)       
       * </pre>
       */
      public boolean hasCapabilities() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
       *
       * <pre>
       *加密类型 (issave为false时生效)       
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType getCapabilities() {
        return capabilities_;
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
       *
       * <pre>
       *加密类型 (issave为false时生效)       
       * </pre>
       */
      public Builder setCapabilities(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWifiKeyType capabilities = 3;</code>
       *
       * <pre>
       *加密类型 (issave为false时生效)       
       * </pre>
       */
      public Builder clearCapabilities() {
        bitField0_ = (bitField0_ & ~0x00000004);
        capabilities_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWifiKeyType.emWifiKeyTypeNone;
        onChanged();
        return this;
      }

      // optional string password = 4;
      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000008);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *登录密码,未加密为空 (issave为false时生效)
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }

      // optional int32 networkid = 5;
      private int networkid_ ;
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 (issave为true时生效)
       * </pre>
       */
      public boolean hasNetworkid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 (issave为true时生效)
       * </pre>
       */
      public int getNetworkid() {
        return networkid_;
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 (issave为true时生效)
       * </pre>
       */
      public Builder setNetworkid(int value) {
        bitField0_ |= 0x00000010;
        networkid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 networkid = 5;</code>
       *
       * <pre>
       *保存的连接标识 (issave为true时生效)
       * </pre>
       */
      public Builder clearNetworkid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        networkid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiConnParam)
    }

    static {
      defaultInstance = new TWifiConnParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiConnParam)
  }

  public interface TMobileDataWorkModeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool enable = 1;
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    boolean hasEnable();
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    boolean getEnable();
  }
  /**
   * Protobuf type {@code mt.TMobileDataWorkMode}
   *
   * <pre>
   ** MobileData 配置
   * </pre>
   */
  public static final class TMobileDataWorkMode extends
      com.google.protobuf.GeneratedMessage
      implements TMobileDataWorkModeOrBuilder {
    // Use TMobileDataWorkMode.newBuilder() to construct.
    private TMobileDataWorkMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMobileDataWorkMode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMobileDataWorkMode defaultInstance;
    public static TMobileDataWorkMode getDefaultInstance() {
      return defaultInstance;
    }

    public TMobileDataWorkMode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMobileDataWorkMode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enable_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataWorkMode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataWorkMode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.Builder.class);
    }

    public static com.google.protobuf.Parser<TMobileDataWorkMode> PARSER =
        new com.google.protobuf.AbstractParser<TMobileDataWorkMode>() {
      public TMobileDataWorkMode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMobileDataWorkMode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMobileDataWorkMode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool enable = 1;
    public static final int ENABLE_FIELD_NUMBER = 1;
    private boolean enable_;
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    public boolean hasEnable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    public boolean getEnable() {
      return enable_;
    }

    private void initFields() {
      enable_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enable_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMobileDataWorkMode}
     *
     * <pre>
     ** MobileData 配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataWorkMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataWorkMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        enable_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataWorkMode_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enable_ = enable_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode.getDefaultInstance()) return this;
        if (other.hasEnable()) {
          setEnable(other.getEnable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataWorkMode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool enable = 1;
      private boolean enable_ ;
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public boolean hasEnable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public Builder setEnable(boolean value) {
        bitField0_ |= 0x00000001;
        enable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public Builder clearEnable() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enable_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMobileDataWorkMode)
    }

    static {
      defaultInstance = new TMobileDataWorkMode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMobileDataWorkMode)
  }

  public interface TMobileDataCurDetailInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmMobileDataLinkState state = 1;
    /**
     * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
     *
     * <pre>
     *连接状态  
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
     *
     * <pre>
     *连接状态  
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState getState();

    // optional .mt.EmMobileDataNetType emNetType = 2;
    /**
     * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
     *
     * <pre>
     *运营商类型
     * </pre>
     */
    boolean hasEmNetType();
    /**
     * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
     *
     * <pre>
     *运营商类型
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType getEmNetType();

    // optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;
    /**
     * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
     *
     * <pre>
     *版本信息 
     * </pre>
     */
    boolean hasEmGenerationType();
    /**
     * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
     *
     * <pre>
     *版本信息 
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType getEmGenerationType();

    // optional string ssid = 4;
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    java.lang.String getSsid();
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    // optional uint32 ip = 5;
    /**
     * <code>optional uint32 ip = 5;</code>
     *
     * <pre>
     *当前IP地址(网络序)
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 5;</code>
     *
     * <pre>
     *当前IP地址(网络序)
     * </pre>
     */
    int getIp();

    // optional string conn_time = 6;
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    boolean hasConnTime();
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    java.lang.String getConnTime();
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getConnTimeBytes();

    // optional .mt.EmMobileDataLinkErrReason reason = 7;
    /**
     * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason getReason();
  }
  /**
   * Protobuf type {@code mt.TMobileDataCurDetailInfo}
   *
   * <pre>
   ** MobileData 详细信息
   * </pre>
   */
  public static final class TMobileDataCurDetailInfo extends
      com.google.protobuf.GeneratedMessage
      implements TMobileDataCurDetailInfoOrBuilder {
    // Use TMobileDataCurDetailInfo.newBuilder() to construct.
    private TMobileDataCurDetailInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMobileDataCurDetailInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMobileDataCurDetailInfo defaultInstance;
    public static TMobileDataCurDetailInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TMobileDataCurDetailInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMobileDataCurDetailInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                emNetType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                emGenerationType_ = value;
              }
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ssid_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ip_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              connTime_ = input.readBytes();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                reason_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataCurDetailInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataCurDetailInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TMobileDataCurDetailInfo> PARSER =
        new com.google.protobuf.AbstractParser<TMobileDataCurDetailInfo>() {
      public TMobileDataCurDetailInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMobileDataCurDetailInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMobileDataCurDetailInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmMobileDataLinkState state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState state_;
    /**
     * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
     *
     * <pre>
     *连接状态  
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
     *
     * <pre>
     *连接状态  
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState getState() {
      return state_;
    }

    // optional .mt.EmMobileDataNetType emNetType = 2;
    public static final int EMNETTYPE_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType emNetType_;
    /**
     * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
     *
     * <pre>
     *运营商类型
     * </pre>
     */
    public boolean hasEmNetType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
     *
     * <pre>
     *运营商类型
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType getEmNetType() {
      return emNetType_;
    }

    // optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;
    public static final int EMGENERATIONTYPE_FIELD_NUMBER = 3;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType emGenerationType_;
    /**
     * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
     *
     * <pre>
     *版本信息 
     * </pre>
     */
    public boolean hasEmGenerationType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
     *
     * <pre>
     *版本信息 
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType getEmGenerationType() {
      return emGenerationType_;
    }

    // optional string ssid = 4;
    public static final int SSID_FIELD_NUMBER = 4;
    private java.lang.Object ssid_;
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 4;</code>
     *
     * <pre>
     *接入点名称	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private int ip_;
    /**
     * <code>optional uint32 ip = 5;</code>
     *
     * <pre>
     *当前IP地址(网络序)
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 ip = 5;</code>
     *
     * <pre>
     *当前IP地址(网络序)
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional string conn_time = 6;
    public static final int CONN_TIME_FIELD_NUMBER = 6;
    private java.lang.Object connTime_;
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    public boolean hasConnTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    public java.lang.String getConnTime() {
      java.lang.Object ref = connTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          connTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string conn_time = 6;</code>
     *
     * <pre>
     *连接时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getConnTimeBytes() {
      java.lang.Object ref = connTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .mt.EmMobileDataLinkErrReason reason = 7;
    public static final int REASON_FIELD_NUMBER = 7;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason reason_;
    /**
     * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
     *
     * <pre>
     *失败原因 
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason getReason() {
      return reason_;
    }

    private void initFields() {
      state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState.emMobileDataLinkStateUnUsed;
      emNetType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType.emMobileDataNetType_None;
      emGenerationType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType.emMobileDataNetGenerationType_None;
      ssid_ = "";
      ip_ = 0;
      connTime_ = "";
      reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason.emMobileDataLinkErrReason_None;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, emNetType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, emGenerationType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSsidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getConnTimeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, reason_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, emNetType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, emGenerationType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSsidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getConnTimeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, reason_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMobileDataCurDetailInfo}
     *
     * <pre>
     ** MobileData 详细信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataCurDetailInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataCurDetailInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState.emMobileDataLinkStateUnUsed;
        bitField0_ = (bitField0_ & ~0x00000001);
        emNetType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType.emMobileDataNetType_None;
        bitField0_ = (bitField0_ & ~0x00000002);
        emGenerationType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType.emMobileDataNetGenerationType_None;
        bitField0_ = (bitField0_ & ~0x00000004);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        connTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason.emMobileDataLinkErrReason_None;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataCurDetailInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.emNetType_ = emNetType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.emGenerationType_ = emGenerationType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.connTime_ = connTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.reason_ = reason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasEmNetType()) {
          setEmNetType(other.getEmNetType());
        }
        if (other.hasEmGenerationType()) {
          setEmGenerationType(other.getEmGenerationType());
        }
        if (other.hasSsid()) {
          bitField0_ |= 0x00000008;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasConnTime()) {
          bitField0_ |= 0x00000020;
          connTime_ = other.connTime_;
          onChanged();
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataCurDetailInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmMobileDataLinkState state = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState.emMobileDataLinkStateUnUsed;
      /**
       * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
       *
       * <pre>
       *连接状态  
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
       *
       * <pre>
       *连接状态  
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState getState() {
        return state_;
      }
      /**
       * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
       *
       * <pre>
       *连接状态  
       * </pre>
       */
      public Builder setState(com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmMobileDataLinkState state = 1;</code>
       *
       * <pre>
       *连接状态  
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkState.emMobileDataLinkStateUnUsed;
        onChanged();
        return this;
      }

      // optional .mt.EmMobileDataNetType emNetType = 2;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType emNetType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType.emMobileDataNetType_None;
      /**
       * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
       *
       * <pre>
       *运营商类型
       * </pre>
       */
      public boolean hasEmNetType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
       *
       * <pre>
       *运营商类型
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType getEmNetType() {
        return emNetType_;
      }
      /**
       * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
       *
       * <pre>
       *运营商类型
       * </pre>
       */
      public Builder setEmNetType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        emNetType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmMobileDataNetType emNetType = 2;</code>
       *
       * <pre>
       *运营商类型
       * </pre>
       */
      public Builder clearEmNetType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emNetType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetType.emMobileDataNetType_None;
        onChanged();
        return this;
      }

      // optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType emGenerationType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType.emMobileDataNetGenerationType_None;
      /**
       * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
       *
       * <pre>
       *版本信息 
       * </pre>
       */
      public boolean hasEmGenerationType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
       *
       * <pre>
       *版本信息 
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType getEmGenerationType() {
        return emGenerationType_;
      }
      /**
       * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
       *
       * <pre>
       *版本信息 
       * </pre>
       */
      public Builder setEmGenerationType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        emGenerationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmMobileDataNetGenerationType emGenerationType = 3;</code>
       *
       * <pre>
       *版本信息 
       * </pre>
       */
      public Builder clearEmGenerationType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        emGenerationType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataNetGenerationType.emMobileDataNetGenerationType_None;
        onChanged();
        return this;
      }

      // optional string ssid = 4;
      private java.lang.Object ssid_ = "";
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public Builder setSsid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 4;</code>
       *
       * <pre>
       *接入点名称	
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ssid_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ip = 5;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 5;</code>
       *
       * <pre>
       *当前IP地址(网络序)
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 ip = 5;</code>
       *
       * <pre>
       *当前IP地址(网络序)
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 5;</code>
       *
       * <pre>
       *当前IP地址(网络序)
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 5;</code>
       *
       * <pre>
       *当前IP地址(网络序)
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional string conn_time = 6;
      private java.lang.Object connTime_ = "";
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public boolean hasConnTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public java.lang.String getConnTime() {
        java.lang.Object ref = connTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          connTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getConnTimeBytes() {
        java.lang.Object ref = connTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          connTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public Builder setConnTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        connTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public Builder clearConnTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        connTime_ = getDefaultInstance().getConnTime();
        onChanged();
        return this;
      }
      /**
       * <code>optional string conn_time = 6;</code>
       *
       * <pre>
       *连接时间
       * </pre>
       */
      public Builder setConnTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        connTime_ = value;
        onChanged();
        return this;
      }

      // optional .mt.EmMobileDataLinkErrReason reason = 7;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason.emMobileDataLinkErrReason_None;
      /**
       * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason getReason() {
        return reason_;
      }
      /**
       * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public Builder setReason(com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmMobileDataLinkErrReason reason = 7;</code>
       *
       * <pre>
       *失败原因 
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataLinkErrReason.emMobileDataLinkErrReason_None;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMobileDataCurDetailInfo)
    }

    static {
      defaultInstance = new TMobileDataCurDetailInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMobileDataCurDetailInfo)
  }

  public interface TMobileDataStatisInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmMobileDataSignalLevel signalLevel = 1;
    /**
     * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    boolean hasSignalLevel();
    /**
     * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel getSignalLevel();

    // optional uint32 up_bandwidth = 2;
    /**
     * <code>optional uint32 up_bandwidth = 2;</code>
     *
     * <pre>
     *上传速率Kbps
     * </pre>
     */
    boolean hasUpBandwidth();
    /**
     * <code>optional uint32 up_bandwidth = 2;</code>
     *
     * <pre>
     *上传速率Kbps
     * </pre>
     */
    int getUpBandwidth();

    // optional uint32 down_bandwidth = 3;
    /**
     * <code>optional uint32 down_bandwidth = 3;</code>
     *
     * <pre>
     *下载速率Kbps
     * </pre>
     */
    boolean hasDownBandwidth();
    /**
     * <code>optional uint32 down_bandwidth = 3;</code>
     *
     * <pre>
     *下载速率Kbps
     * </pre>
     */
    int getDownBandwidth();

    // optional uint32 up_bytes = 4;
    /**
     * <code>optional uint32 up_bytes = 4;</code>
     *
     * <pre>
     *上传总流量Byte
     * </pre>
     */
    boolean hasUpBytes();
    /**
     * <code>optional uint32 up_bytes = 4;</code>
     *
     * <pre>
     *上传总流量Byte
     * </pre>
     */
    int getUpBytes();

    // optional uint32 down_bytes = 5;
    /**
     * <code>optional uint32 down_bytes = 5;</code>
     *
     * <pre>
     *下载总流量Byte 
     * </pre>
     */
    boolean hasDownBytes();
    /**
     * <code>optional uint32 down_bytes = 5;</code>
     *
     * <pre>
     *下载总流量Byte 
     * </pre>
     */
    int getDownBytes();
  }
  /**
   * Protobuf type {@code mt.TMobileDataStatisInfo}
   *
   * <pre>
   ** MobileData 连接的统计信息
   * </pre>
   */
  public static final class TMobileDataStatisInfo extends
      com.google.protobuf.GeneratedMessage
      implements TMobileDataStatisInfoOrBuilder {
    // Use TMobileDataStatisInfo.newBuilder() to construct.
    private TMobileDataStatisInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMobileDataStatisInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMobileDataStatisInfo defaultInstance;
    public static TMobileDataStatisInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TMobileDataStatisInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMobileDataStatisInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                signalLevel_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              upBandwidth_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              downBandwidth_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              upBytes_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              downBytes_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataStatisInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataStatisInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TMobileDataStatisInfo> PARSER =
        new com.google.protobuf.AbstractParser<TMobileDataStatisInfo>() {
      public TMobileDataStatisInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMobileDataStatisInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMobileDataStatisInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmMobileDataSignalLevel signalLevel = 1;
    public static final int SIGNALLEVEL_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel signalLevel_;
    /**
     * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public boolean hasSignalLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
     *
     * <pre>
     *信号强度
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel getSignalLevel() {
      return signalLevel_;
    }

    // optional uint32 up_bandwidth = 2;
    public static final int UP_BANDWIDTH_FIELD_NUMBER = 2;
    private int upBandwidth_;
    /**
     * <code>optional uint32 up_bandwidth = 2;</code>
     *
     * <pre>
     *上传速率Kbps
     * </pre>
     */
    public boolean hasUpBandwidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 up_bandwidth = 2;</code>
     *
     * <pre>
     *上传速率Kbps
     * </pre>
     */
    public int getUpBandwidth() {
      return upBandwidth_;
    }

    // optional uint32 down_bandwidth = 3;
    public static final int DOWN_BANDWIDTH_FIELD_NUMBER = 3;
    private int downBandwidth_;
    /**
     * <code>optional uint32 down_bandwidth = 3;</code>
     *
     * <pre>
     *下载速率Kbps
     * </pre>
     */
    public boolean hasDownBandwidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 down_bandwidth = 3;</code>
     *
     * <pre>
     *下载速率Kbps
     * </pre>
     */
    public int getDownBandwidth() {
      return downBandwidth_;
    }

    // optional uint32 up_bytes = 4;
    public static final int UP_BYTES_FIELD_NUMBER = 4;
    private int upBytes_;
    /**
     * <code>optional uint32 up_bytes = 4;</code>
     *
     * <pre>
     *上传总流量Byte
     * </pre>
     */
    public boolean hasUpBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 up_bytes = 4;</code>
     *
     * <pre>
     *上传总流量Byte
     * </pre>
     */
    public int getUpBytes() {
      return upBytes_;
    }

    // optional uint32 down_bytes = 5;
    public static final int DOWN_BYTES_FIELD_NUMBER = 5;
    private int downBytes_;
    /**
     * <code>optional uint32 down_bytes = 5;</code>
     *
     * <pre>
     *下载总流量Byte 
     * </pre>
     */
    public boolean hasDownBytes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 down_bytes = 5;</code>
     *
     * <pre>
     *下载总流量Byte 
     * </pre>
     */
    public int getDownBytes() {
      return downBytes_;
    }

    private void initFields() {
      signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel.emMobileDataSignalLevelNone;
      upBandwidth_ = 0;
      downBandwidth_ = 0;
      upBytes_ = 0;
      downBytes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, upBandwidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, downBandwidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, upBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, downBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, signalLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, upBandwidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, downBandwidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, upBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, downBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMobileDataStatisInfo}
     *
     * <pre>
     ** MobileData 连接的统计信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataStatisInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataStatisInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel.emMobileDataSignalLevelNone;
        bitField0_ = (bitField0_ & ~0x00000001);
        upBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        downBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        upBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        downBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMobileDataStatisInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signalLevel_ = signalLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.upBandwidth_ = upBandwidth_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.downBandwidth_ = downBandwidth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.upBytes_ = upBytes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.downBytes_ = downBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo.getDefaultInstance()) return this;
        if (other.hasSignalLevel()) {
          setSignalLevel(other.getSignalLevel());
        }
        if (other.hasUpBandwidth()) {
          setUpBandwidth(other.getUpBandwidth());
        }
        if (other.hasDownBandwidth()) {
          setDownBandwidth(other.getDownBandwidth());
        }
        if (other.hasUpBytes()) {
          setUpBytes(other.getUpBytes());
        }
        if (other.hasDownBytes()) {
          setDownBytes(other.getDownBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMobileDataStatisInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmMobileDataSignalLevel signalLevel = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel.emMobileDataSignalLevelNone;
      /**
       * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public boolean hasSignalLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel getSignalLevel() {
        return signalLevel_;
      }
      /**
       * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder setSignalLevel(com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        signalLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmMobileDataSignalLevel signalLevel = 1;</code>
       *
       * <pre>
       *信号强度
       * </pre>
       */
      public Builder clearSignalLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signalLevel_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmMobileDataSignalLevel.emMobileDataSignalLevelNone;
        onChanged();
        return this;
      }

      // optional uint32 up_bandwidth = 2;
      private int upBandwidth_ ;
      /**
       * <code>optional uint32 up_bandwidth = 2;</code>
       *
       * <pre>
       *上传速率Kbps
       * </pre>
       */
      public boolean hasUpBandwidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 up_bandwidth = 2;</code>
       *
       * <pre>
       *上传速率Kbps
       * </pre>
       */
      public int getUpBandwidth() {
        return upBandwidth_;
      }
      /**
       * <code>optional uint32 up_bandwidth = 2;</code>
       *
       * <pre>
       *上传速率Kbps
       * </pre>
       */
      public Builder setUpBandwidth(int value) {
        bitField0_ |= 0x00000002;
        upBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 up_bandwidth = 2;</code>
       *
       * <pre>
       *上传速率Kbps
       * </pre>
       */
      public Builder clearUpBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        upBandwidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 down_bandwidth = 3;
      private int downBandwidth_ ;
      /**
       * <code>optional uint32 down_bandwidth = 3;</code>
       *
       * <pre>
       *下载速率Kbps
       * </pre>
       */
      public boolean hasDownBandwidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 down_bandwidth = 3;</code>
       *
       * <pre>
       *下载速率Kbps
       * </pre>
       */
      public int getDownBandwidth() {
        return downBandwidth_;
      }
      /**
       * <code>optional uint32 down_bandwidth = 3;</code>
       *
       * <pre>
       *下载速率Kbps
       * </pre>
       */
      public Builder setDownBandwidth(int value) {
        bitField0_ |= 0x00000004;
        downBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 down_bandwidth = 3;</code>
       *
       * <pre>
       *下载速率Kbps
       * </pre>
       */
      public Builder clearDownBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        downBandwidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 up_bytes = 4;
      private int upBytes_ ;
      /**
       * <code>optional uint32 up_bytes = 4;</code>
       *
       * <pre>
       *上传总流量Byte
       * </pre>
       */
      public boolean hasUpBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 up_bytes = 4;</code>
       *
       * <pre>
       *上传总流量Byte
       * </pre>
       */
      public int getUpBytes() {
        return upBytes_;
      }
      /**
       * <code>optional uint32 up_bytes = 4;</code>
       *
       * <pre>
       *上传总流量Byte
       * </pre>
       */
      public Builder setUpBytes(int value) {
        bitField0_ |= 0x00000008;
        upBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 up_bytes = 4;</code>
       *
       * <pre>
       *上传总流量Byte
       * </pre>
       */
      public Builder clearUpBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        upBytes_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 down_bytes = 5;
      private int downBytes_ ;
      /**
       * <code>optional uint32 down_bytes = 5;</code>
       *
       * <pre>
       *下载总流量Byte 
       * </pre>
       */
      public boolean hasDownBytes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 down_bytes = 5;</code>
       *
       * <pre>
       *下载总流量Byte 
       * </pre>
       */
      public int getDownBytes() {
        return downBytes_;
      }
      /**
       * <code>optional uint32 down_bytes = 5;</code>
       *
       * <pre>
       *下载总流量Byte 
       * </pre>
       */
      public Builder setDownBytes(int value) {
        bitField0_ |= 0x00000010;
        downBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 down_bytes = 5;</code>
       *
       * <pre>
       *下载总流量Byte 
       * </pre>
       */
      public Builder clearDownBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        downBytes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMobileDataStatisInfo)
    }

    static {
      defaultInstance = new TMobileDataStatisInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMobileDataStatisInfo)
  }

  public interface TRouteItemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 interface = 1;
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    boolean hasInterface();
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    int getInterface();

    // optional uint32 dest_network = 2;
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    boolean hasDestNetwork();
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    int getDestNetwork();

    // optional uint32 dest_netmask = 3;
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    boolean hasDestNetmask();
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    int getDestNetmask();

    // optional uint32 gateway = 4;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    int getGateway();

    // optional uint32 priority = 5;
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    int getPriority();
  }
  /**
   * Protobuf type {@code mt.TRouteItemInfo}
   *
   * <pre>
   * 路由表配置参数
   * </pre>
   */
  public static final class TRouteItemInfo extends
      com.google.protobuf.GeneratedMessage
      implements TRouteItemInfoOrBuilder {
    // Use TRouteItemInfo.newBuilder() to construct.
    private TRouteItemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TRouteItemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TRouteItemInfo defaultInstance;
    public static TRouteItemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TRouteItemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TRouteItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              interface_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              destNetwork_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              destNetmask_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gateway_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              priority_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TRouteItemInfo> PARSER =
        new com.google.protobuf.AbstractParser<TRouteItemInfo>() {
      public TRouteItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TRouteItemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TRouteItemInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 interface = 1;
    public static final int INTERFACE_FIELD_NUMBER = 1;
    private int interface_;
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    public int getInterface() {
      return interface_;
    }

    // optional uint32 dest_network = 2;
    public static final int DEST_NETWORK_FIELD_NUMBER = 2;
    private int destNetwork_;
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    public boolean hasDestNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    public int getDestNetwork() {
      return destNetwork_;
    }

    // optional uint32 dest_netmask = 3;
    public static final int DEST_NETMASK_FIELD_NUMBER = 3;
    private int destNetmask_;
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    public boolean hasDestNetmask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    public int getDestNetmask() {
      return destNetmask_;
    }

    // optional uint32 gateway = 4;
    public static final int GATEWAY_FIELD_NUMBER = 4;
    private int gateway_;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    public int getGateway() {
      return gateway_;
    }

    // optional uint32 priority = 5;
    public static final int PRIORITY_FIELD_NUMBER = 5;
    private int priority_;
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    private void initFields() {
      interface_ = 0;
      destNetwork_ = 0;
      destNetmask_ = 0;
      gateway_ = 0;
      priority_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, interface_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, destNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, destNetmask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, priority_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, interface_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, destNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, destNetmask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, priority_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TRouteItemInfo}
     *
     * <pre>
     * 路由表配置参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        interface_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        destNetwork_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        destNetmask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.interface_ = interface_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.destNetwork_ = destNetwork_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.destNetmask_ = destNetmask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.priority_ = priority_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.getDefaultInstance()) return this;
        if (other.hasInterface()) {
          setInterface(other.getInterface());
        }
        if (other.hasDestNetwork()) {
          setDestNetwork(other.getDestNetwork());
        }
        if (other.hasDestNetmask()) {
          setDestNetmask(other.getDestNetmask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 interface = 1;
      private int interface_ ;
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public int getInterface() {
        return interface_;
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public Builder setInterface(int value) {
        bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public Builder clearInterface() {
        bitField0_ = (bitField0_ & ~0x00000001);
        interface_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dest_network = 2;
      private int destNetwork_ ;
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public boolean hasDestNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public int getDestNetwork() {
        return destNetwork_;
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public Builder setDestNetwork(int value) {
        bitField0_ |= 0x00000002;
        destNetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public Builder clearDestNetwork() {
        bitField0_ = (bitField0_ & ~0x00000002);
        destNetwork_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dest_netmask = 3;
      private int destNetmask_ ;
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public boolean hasDestNetmask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public int getDestNetmask() {
        return destNetmask_;
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public Builder setDestNetmask(int value) {
        bitField0_ |= 0x00000004;
        destNetmask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public Builder clearDestNetmask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        destNetmask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway = 4;
      private int gateway_ ;
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public int getGateway() {
        return gateway_;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public Builder setGateway(int value) {
        bitField0_ |= 0x00000008;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gateway_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 priority = 5;
      private int priority_ ;
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000010;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000010);
        priority_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TRouteItemInfo)
    }

    static {
      defaultInstance = new TRouteItemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TRouteItemInfo)
  }

  public interface TRouteItemInfoListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mt.TRouteItemInfo route_list = 1;
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> 
        getRouteListList();
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo getRouteList(int index);
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    int getRouteListCount();
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder> 
        getRouteListOrBuilderList();
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder getRouteListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TRouteItemInfoList}
   *
   * <pre>
   *路由表配置参数集合
   * </pre>
   */
  public static final class TRouteItemInfoList extends
      com.google.protobuf.GeneratedMessage
      implements TRouteItemInfoListOrBuilder {
    // Use TRouteItemInfoList.newBuilder() to construct.
    private TRouteItemInfoList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TRouteItemInfoList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TRouteItemInfoList defaultInstance;
    public static TRouteItemInfoList getDefaultInstance() {
      return defaultInstance;
    }

    public TRouteItemInfoList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TRouteItemInfoList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                routeList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              routeList_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          routeList_ = java.util.Collections.unmodifiableList(routeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfoList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfoList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.Builder.class);
    }

    public static com.google.protobuf.Parser<TRouteItemInfoList> PARSER =
        new com.google.protobuf.AbstractParser<TRouteItemInfoList>() {
      public TRouteItemInfoList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TRouteItemInfoList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TRouteItemInfoList> getParserForType() {
      return PARSER;
    }

    // repeated .mt.TRouteItemInfo route_list = 1;
    public static final int ROUTE_LIST_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> routeList_;
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> getRouteListList() {
      return routeList_;
    }
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder> 
        getRouteListOrBuilderList() {
      return routeList_;
    }
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public int getRouteListCount() {
      return routeList_.size();
    }
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo getRouteList(int index) {
      return routeList_.get(index);
    }
    /**
     * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder getRouteListOrBuilder(
        int index) {
      return routeList_.get(index);
    }

    private void initFields() {
      routeList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < routeList_.size(); i++) {
        output.writeMessage(1, routeList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < routeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, routeList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TRouteItemInfoList}
     *
     * <pre>
     *路由表配置参数集合
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfoList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfoList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRouteListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (routeListBuilder_ == null) {
          routeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          routeListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TRouteItemInfoList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList(this);
        int from_bitField0_ = bitField0_;
        if (routeListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            routeList_ = java.util.Collections.unmodifiableList(routeList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.routeList_ = routeList_;
        } else {
          result.routeList_ = routeListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList.getDefaultInstance()) return this;
        if (routeListBuilder_ == null) {
          if (!other.routeList_.isEmpty()) {
            if (routeList_.isEmpty()) {
              routeList_ = other.routeList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRouteListIsMutable();
              routeList_.addAll(other.routeList_);
            }
            onChanged();
          }
        } else {
          if (!other.routeList_.isEmpty()) {
            if (routeListBuilder_.isEmpty()) {
              routeListBuilder_.dispose();
              routeListBuilder_ = null;
              routeList_ = other.routeList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              routeListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRouteListFieldBuilder() : null;
            } else {
              routeListBuilder_.addAllMessages(other.routeList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mt.TRouteItemInfo route_list = 1;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> routeList_ =
        java.util.Collections.emptyList();
      private void ensureRouteListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          routeList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo>(routeList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder> routeListBuilder_;

      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> getRouteListList() {
        if (routeListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routeList_);
        } else {
          return routeListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public int getRouteListCount() {
        if (routeListBuilder_ == null) {
          return routeList_.size();
        } else {
          return routeListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo getRouteList(int index) {
        if (routeListBuilder_ == null) {
          return routeList_.get(index);
        } else {
          return routeListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder setRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.set(index, value);
          onChanged();
        } else {
          routeListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder setRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.set(index, builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.add(value);
          onChanged();
        } else {
          routeListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.add(index, value);
          onChanged();
        } else {
          routeListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.add(builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.add(index, builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addAllRouteList(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo> values) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          super.addAll(values, routeList_);
          onChanged();
        } else {
          routeListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder clearRouteList() {
        if (routeListBuilder_ == null) {
          routeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          routeListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder removeRouteList(int index) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.remove(index);
          onChanged();
        } else {
          routeListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder getRouteListBuilder(
          int index) {
        return getRouteListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder getRouteListOrBuilder(
          int index) {
        if (routeListBuilder_ == null) {
          return routeList_.get(index);  } else {
          return routeListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder> 
           getRouteListOrBuilderList() {
        if (routeListBuilder_ != null) {
          return routeListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routeList_);
        }
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder addRouteListBuilder() {
        return getRouteListFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder addRouteListBuilder(
          int index) {
        return getRouteListFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TRouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder> 
           getRouteListBuilderList() {
        return getRouteListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder> 
          getRouteListFieldBuilder() {
        if (routeListBuilder_ == null) {
          routeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TRouteItemInfoOrBuilder>(
                  routeList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          routeList_ = null;
        }
        return routeListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TRouteItemInfoList)
    }

    static {
      defaultInstance = new TRouteItemInfoList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TRouteItemInfoList)
  }

  public interface TE1RouteItemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 interface = 1;
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    boolean hasInterface();
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    int getInterface();

    // optional uint32 dest_network = 2;
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    boolean hasDestNetwork();
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    int getDestNetwork();

    // optional uint32 dest_netmask = 3;
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    boolean hasDestNetmask();
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    int getDestNetmask();

    // optional uint32 gateway = 4;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    int getGateway();

    // optional uint32 priority = 5;
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    int getPriority();

    // optional string ifname = 6;
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    boolean hasIfname();
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    java.lang.String getIfname();
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    com.google.protobuf.ByteString
        getIfnameBytes();
  }
  /**
   * Protobuf type {@code mt.TE1RouteItemInfo}
   *
   * <pre>
   * E1路由表配置参数
   * </pre>
   */
  public static final class TE1RouteItemInfo extends
      com.google.protobuf.GeneratedMessage
      implements TE1RouteItemInfoOrBuilder {
    // Use TE1RouteItemInfo.newBuilder() to construct.
    private TE1RouteItemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TE1RouteItemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TE1RouteItemInfo defaultInstance;
    public static TE1RouteItemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TE1RouteItemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TE1RouteItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              interface_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              destNetwork_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              destNetmask_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gateway_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              priority_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              ifname_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TE1RouteItemInfo> PARSER =
        new com.google.protobuf.AbstractParser<TE1RouteItemInfo>() {
      public TE1RouteItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TE1RouteItemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TE1RouteItemInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 interface = 1;
    public static final int INTERFACE_FIELD_NUMBER = 1;
    private int interface_;
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 interface = 1;</code>
     *
     * <pre>
     *网络接口，表示该条路由经由哪个接口转发出去
     * </pre>
     */
    public int getInterface() {
      return interface_;
    }

    // optional uint32 dest_network = 2;
    public static final int DEST_NETWORK_FIELD_NUMBER = 2;
    private int destNetwork_;
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    public boolean hasDestNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 dest_network = 2;</code>
     *
     * <pre>
     *路由的目标网络
     * </pre>
     */
    public int getDestNetwork() {
      return destNetwork_;
    }

    // optional uint32 dest_netmask = 3;
    public static final int DEST_NETMASK_FIELD_NUMBER = 3;
    private int destNetmask_;
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    public boolean hasDestNetmask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 dest_netmask = 3;</code>
     *
     * <pre>
     *路由的目标网络掩码
     * </pre>
     */
    public int getDestNetmask() {
      return destNetmask_;
    }

    // optional uint32 gateway = 4;
    public static final int GATEWAY_FIELD_NUMBER = 4;
    private int gateway_;
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 gateway = 4;</code>
     *
     * <pre>
     *路由网关
     * </pre>
     */
    public int getGateway() {
      return gateway_;
    }

    // optional uint32 priority = 5;
    public static final int PRIORITY_FIELD_NUMBER = 5;
    private int priority_;
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 priority = 5;</code>
     *
     * <pre>
     *优先级，值越低表示该条路由优先级越高，默认0，最大255
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    // optional string ifname = 6;
    public static final int IFNAME_FIELD_NUMBER = 6;
    private java.lang.Object ifname_;
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    public boolean hasIfname() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    public java.lang.String getIfname() {
      java.lang.Object ref = ifname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ifname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ifname = 6;</code>
     *
     * <pre>
     *本地网络接口名virtual or serial
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIfnameBytes() {
      java.lang.Object ref = ifname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ifname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      interface_ = 0;
      destNetwork_ = 0;
      destNetmask_ = 0;
      gateway_ = 0;
      priority_ = 0;
      ifname_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, interface_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, destNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, destNetmask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, priority_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getIfnameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, interface_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, destNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, destNetmask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gateway_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, priority_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIfnameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TE1RouteItemInfo}
     *
     * <pre>
     * E1路由表配置参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        interface_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        destNetwork_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        destNetmask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ifname_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.interface_ = interface_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.destNetwork_ = destNetwork_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.destNetmask_ = destNetmask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ifname_ = ifname_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.getDefaultInstance()) return this;
        if (other.hasInterface()) {
          setInterface(other.getInterface());
        }
        if (other.hasDestNetwork()) {
          setDestNetwork(other.getDestNetwork());
        }
        if (other.hasDestNetmask()) {
          setDestNetmask(other.getDestNetmask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasIfname()) {
          bitField0_ |= 0x00000020;
          ifname_ = other.ifname_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 interface = 1;
      private int interface_ ;
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public int getInterface() {
        return interface_;
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public Builder setInterface(int value) {
        bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 interface = 1;</code>
       *
       * <pre>
       *网络接口，表示该条路由经由哪个接口转发出去
       * </pre>
       */
      public Builder clearInterface() {
        bitField0_ = (bitField0_ & ~0x00000001);
        interface_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dest_network = 2;
      private int destNetwork_ ;
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public boolean hasDestNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public int getDestNetwork() {
        return destNetwork_;
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public Builder setDestNetwork(int value) {
        bitField0_ |= 0x00000002;
        destNetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dest_network = 2;</code>
       *
       * <pre>
       *路由的目标网络
       * </pre>
       */
      public Builder clearDestNetwork() {
        bitField0_ = (bitField0_ & ~0x00000002);
        destNetwork_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dest_netmask = 3;
      private int destNetmask_ ;
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public boolean hasDestNetmask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public int getDestNetmask() {
        return destNetmask_;
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public Builder setDestNetmask(int value) {
        bitField0_ |= 0x00000004;
        destNetmask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dest_netmask = 3;</code>
       *
       * <pre>
       *路由的目标网络掩码
       * </pre>
       */
      public Builder clearDestNetmask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        destNetmask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway = 4;
      private int gateway_ ;
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public int getGateway() {
        return gateway_;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public Builder setGateway(int value) {
        bitField0_ |= 0x00000008;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway = 4;</code>
       *
       * <pre>
       *路由网关
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gateway_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 priority = 5;
      private int priority_ ;
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000010;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 priority = 5;</code>
       *
       * <pre>
       *优先级，值越低表示该条路由优先级越高，默认0，最大255
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000010);
        priority_ = 0;
        onChanged();
        return this;
      }

      // optional string ifname = 6;
      private java.lang.Object ifname_ = "";
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public boolean hasIfname() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public java.lang.String getIfname() {
        java.lang.Object ref = ifname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ifname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIfnameBytes() {
        java.lang.Object ref = ifname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ifname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public Builder setIfname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ifname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public Builder clearIfname() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ifname_ = getDefaultInstance().getIfname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ifname = 6;</code>
       *
       * <pre>
       *本地网络接口名virtual or serial
       * </pre>
       */
      public Builder setIfnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ifname_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TE1RouteItemInfo)
    }

    static {
      defaultInstance = new TE1RouteItemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TE1RouteItemInfo)
  }

  public interface TE1RouteItemInfoListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mt.TE1RouteItemInfo route_list = 1;
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> 
        getRouteListList();
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo getRouteList(int index);
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    int getRouteListCount();
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder> 
        getRouteListOrBuilderList();
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder getRouteListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TE1RouteItemInfoList}
   *
   * <pre>
   *E1路由表配置参数集合
   * </pre>
   */
  public static final class TE1RouteItemInfoList extends
      com.google.protobuf.GeneratedMessage
      implements TE1RouteItemInfoListOrBuilder {
    // Use TE1RouteItemInfoList.newBuilder() to construct.
    private TE1RouteItemInfoList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TE1RouteItemInfoList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TE1RouteItemInfoList defaultInstance;
    public static TE1RouteItemInfoList getDefaultInstance() {
      return defaultInstance;
    }

    public TE1RouteItemInfoList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TE1RouteItemInfoList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                routeList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              routeList_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          routeList_ = java.util.Collections.unmodifiableList(routeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfoList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfoList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.Builder.class);
    }

    public static com.google.protobuf.Parser<TE1RouteItemInfoList> PARSER =
        new com.google.protobuf.AbstractParser<TE1RouteItemInfoList>() {
      public TE1RouteItemInfoList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TE1RouteItemInfoList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TE1RouteItemInfoList> getParserForType() {
      return PARSER;
    }

    // repeated .mt.TE1RouteItemInfo route_list = 1;
    public static final int ROUTE_LIST_FIELD_NUMBER = 1;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> routeList_;
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> getRouteListList() {
      return routeList_;
    }
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder> 
        getRouteListOrBuilderList() {
      return routeList_;
    }
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public int getRouteListCount() {
      return routeList_.size();
    }
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo getRouteList(int index) {
      return routeList_.get(index);
    }
    /**
     * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
     *
     * <pre>
     *路由表集合
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder getRouteListOrBuilder(
        int index) {
      return routeList_.get(index);
    }

    private void initFields() {
      routeList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < routeList_.size(); i++) {
        output.writeMessage(1, routeList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < routeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, routeList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TE1RouteItemInfoList}
     *
     * <pre>
     *E1路由表配置参数集合
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfoList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfoList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRouteListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (routeListBuilder_ == null) {
          routeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          routeListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TE1RouteItemInfoList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList(this);
        int from_bitField0_ = bitField0_;
        if (routeListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            routeList_ = java.util.Collections.unmodifiableList(routeList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.routeList_ = routeList_;
        } else {
          result.routeList_ = routeListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList.getDefaultInstance()) return this;
        if (routeListBuilder_ == null) {
          if (!other.routeList_.isEmpty()) {
            if (routeList_.isEmpty()) {
              routeList_ = other.routeList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRouteListIsMutable();
              routeList_.addAll(other.routeList_);
            }
            onChanged();
          }
        } else {
          if (!other.routeList_.isEmpty()) {
            if (routeListBuilder_.isEmpty()) {
              routeListBuilder_.dispose();
              routeListBuilder_ = null;
              routeList_ = other.routeList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              routeListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRouteListFieldBuilder() : null;
            } else {
              routeListBuilder_.addAllMessages(other.routeList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mt.TE1RouteItemInfo route_list = 1;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> routeList_ =
        java.util.Collections.emptyList();
      private void ensureRouteListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          routeList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo>(routeList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder> routeListBuilder_;

      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> getRouteListList() {
        if (routeListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routeList_);
        } else {
          return routeListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public int getRouteListCount() {
        if (routeListBuilder_ == null) {
          return routeList_.size();
        } else {
          return routeListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo getRouteList(int index) {
        if (routeListBuilder_ == null) {
          return routeList_.get(index);
        } else {
          return routeListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder setRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.set(index, value);
          onChanged();
        } else {
          routeListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder setRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.set(index, builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.add(value);
          onChanged();
        } else {
          routeListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo value) {
        if (routeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteListIsMutable();
          routeList_.add(index, value);
          onChanged();
        } else {
          routeListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.add(builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addRouteList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder builderForValue) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.add(index, builderForValue.build());
          onChanged();
        } else {
          routeListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder addAllRouteList(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo> values) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          super.addAll(values, routeList_);
          onChanged();
        } else {
          routeListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder clearRouteList() {
        if (routeListBuilder_ == null) {
          routeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          routeListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public Builder removeRouteList(int index) {
        if (routeListBuilder_ == null) {
          ensureRouteListIsMutable();
          routeList_.remove(index);
          onChanged();
        } else {
          routeListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder getRouteListBuilder(
          int index) {
        return getRouteListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder getRouteListOrBuilder(
          int index) {
        if (routeListBuilder_ == null) {
          return routeList_.get(index);  } else {
          return routeListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder> 
           getRouteListOrBuilderList() {
        if (routeListBuilder_ != null) {
          return routeListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routeList_);
        }
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder addRouteListBuilder() {
        return getRouteListFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder addRouteListBuilder(
          int index) {
        return getRouteListFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TE1RouteItemInfo route_list = 1;</code>
       *
       * <pre>
       *路由表集合
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder> 
           getRouteListBuilderList() {
        return getRouteListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder> 
          getRouteListFieldBuilder() {
        if (routeListBuilder_ == null) {
          routeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TE1RouteItemInfoOrBuilder>(
                  routeList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          routeList_ = null;
        }
        return routeListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TE1RouteItemInfoList)
    }

    static {
      defaultInstance = new TE1RouteItemInfoList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TE1RouteItemInfoList)
  }

  public interface TNetUsedInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmNetAdapterWorkType used_type = 1;
    /**
     * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
     *
     * <pre>
     *当前使用的网络类型 
     * </pre>
     */
    boolean hasUsedType();
    /**
     * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
     *
     * <pre>
     *当前使用的网络类型 
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getUsedType();

    // optional uint32 ip = 2;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    int getIp();

    // optional uint32 mask = 3;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *子网掩码(网络序)	  
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *子网掩码(网络序)	  
     * </pre>
     */
    int getMask();

    // optional uint32 gateway_ip = 4;
    /**
     * <code>optional uint32 gateway_ip = 4;</code>
     *
     * <pre>
     *网关(网络序)     	
     * </pre>
     */
    boolean hasGatewayIp();
    /**
     * <code>optional uint32 gateway_ip = 4;</code>
     *
     * <pre>
     *网关(网络序)     	
     * </pre>
     */
    int getGatewayIp();

    // optional uint32 dns = 5;
    /**
     * <code>optional uint32 dns = 5;</code>
     *
     * <pre>
     *DNS (网络序)
     * </pre>
     */
    boolean hasDns();
    /**
     * <code>optional uint32 dns = 5;</code>
     *
     * <pre>
     *DNS (网络序)
     * </pre>
     */
    int getDns();

    // optional uint32 dns_backup = 6;
    /**
     * <code>optional uint32 dns_backup = 6;</code>
     *
     * <pre>
     *DNS备份(网络序)
     * </pre>
     */
    boolean hasDnsBackup();
    /**
     * <code>optional uint32 dns_backup = 6;</code>
     *
     * <pre>
     *DNS备份(网络序)
     * </pre>
     */
    int getDnsBackup();
  }
  /**
   * Protobuf type {@code mt.TNetUsedInfo}
   *
   * <pre>
   ** 对外通讯IP信息
   * </pre>
   */
  public static final class TNetUsedInfo extends
      com.google.protobuf.GeneratedMessage
      implements TNetUsedInfoOrBuilder {
    // Use TNetUsedInfo.newBuilder() to construct.
    private TNetUsedInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNetUsedInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNetUsedInfo defaultInstance;
    public static TNetUsedInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TNetUsedInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNetUsedInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                usedType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ip_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mask_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gatewayIp_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dns_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dnsBackup_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetUsedInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetUsedInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TNetUsedInfo> PARSER =
        new com.google.protobuf.AbstractParser<TNetUsedInfo>() {
      public TNetUsedInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNetUsedInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNetUsedInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmNetAdapterWorkType used_type = 1;
    public static final int USED_TYPE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType usedType_;
    /**
     * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
     *
     * <pre>
     *当前使用的网络类型 
     * </pre>
     */
    public boolean hasUsedType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
     *
     * <pre>
     *当前使用的网络类型 
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getUsedType() {
      return usedType_;
    }

    // optional uint32 ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private int ip_;
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ip = 2;</code>
     *
     * <pre>
     *IP地址(网络序)
     * </pre>
     */
    public int getIp() {
      return ip_;
    }

    // optional uint32 mask = 3;
    public static final int MASK_FIELD_NUMBER = 3;
    private int mask_;
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *子网掩码(网络序)	  
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mask = 3;</code>
     *
     * <pre>
     *子网掩码(网络序)	  
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    // optional uint32 gateway_ip = 4;
    public static final int GATEWAY_IP_FIELD_NUMBER = 4;
    private int gatewayIp_;
    /**
     * <code>optional uint32 gateway_ip = 4;</code>
     *
     * <pre>
     *网关(网络序)     	
     * </pre>
     */
    public boolean hasGatewayIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 gateway_ip = 4;</code>
     *
     * <pre>
     *网关(网络序)     	
     * </pre>
     */
    public int getGatewayIp() {
      return gatewayIp_;
    }

    // optional uint32 dns = 5;
    public static final int DNS_FIELD_NUMBER = 5;
    private int dns_;
    /**
     * <code>optional uint32 dns = 5;</code>
     *
     * <pre>
     *DNS (网络序)
     * </pre>
     */
    public boolean hasDns() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 dns = 5;</code>
     *
     * <pre>
     *DNS (网络序)
     * </pre>
     */
    public int getDns() {
      return dns_;
    }

    // optional uint32 dns_backup = 6;
    public static final int DNS_BACKUP_FIELD_NUMBER = 6;
    private int dnsBackup_;
    /**
     * <code>optional uint32 dns_backup = 6;</code>
     *
     * <pre>
     *DNS备份(网络序)
     * </pre>
     */
    public boolean hasDnsBackup() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 dns_backup = 6;</code>
     *
     * <pre>
     *DNS备份(网络序)
     * </pre>
     */
    public int getDnsBackup() {
      return dnsBackup_;
    }

    private void initFields() {
      usedType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
      ip_ = 0;
      mask_ = 0;
      gatewayIp_ = 0;
      dns_ = 0;
      dnsBackup_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, usedType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, gatewayIp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, dns_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, dnsBackup_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, usedType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gatewayIp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, dns_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, dnsBackup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TNetUsedInfo}
     *
     * <pre>
     ** 对外通讯IP信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetUsedInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetUsedInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usedType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gatewayIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dns_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dnsBackup_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetUsedInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedType_ = usedType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gatewayIp_ = gatewayIp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dns_ = dns_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dnsBackup_ = dnsBackup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo.getDefaultInstance()) return this;
        if (other.hasUsedType()) {
          setUsedType(other.getUsedType());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (other.hasGatewayIp()) {
          setGatewayIp(other.getGatewayIp());
        }
        if (other.hasDns()) {
          setDns(other.getDns());
        }
        if (other.hasDnsBackup()) {
          setDnsBackup(other.getDnsBackup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetUsedInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmNetAdapterWorkType used_type = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType usedType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
      /**
       * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
       *
       * <pre>
       *当前使用的网络类型 
       * </pre>
       */
      public boolean hasUsedType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
       *
       * <pre>
       *当前使用的网络类型 
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getUsedType() {
        return usedType_;
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
       *
       * <pre>
       *当前使用的网络类型 
       * </pre>
       */
      public Builder setUsedType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        usedType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType used_type = 1;</code>
       *
       * <pre>
       *当前使用的网络类型 
       * </pre>
       */
      public Builder clearUsedType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usedType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
        onChanged();
        return this;
      }

      // optional uint32 ip = 2;
      private int ip_ ;
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public int getIp() {
        return ip_;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder setIp(int value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ip = 2;</code>
       *
       * <pre>
       *IP地址(网络序)
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mask = 3;
      private int mask_ ;
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *子网掩码(网络序)	  
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *子网掩码(网络序)	  
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *子网掩码(网络序)	  
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000004;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mask = 3;</code>
       *
       * <pre>
       *子网掩码(网络序)	  
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mask_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gateway_ip = 4;
      private int gatewayIp_ ;
      /**
       * <code>optional uint32 gateway_ip = 4;</code>
       *
       * <pre>
       *网关(网络序)     	
       * </pre>
       */
      public boolean hasGatewayIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 gateway_ip = 4;</code>
       *
       * <pre>
       *网关(网络序)     	
       * </pre>
       */
      public int getGatewayIp() {
        return gatewayIp_;
      }
      /**
       * <code>optional uint32 gateway_ip = 4;</code>
       *
       * <pre>
       *网关(网络序)     	
       * </pre>
       */
      public Builder setGatewayIp(int value) {
        bitField0_ |= 0x00000008;
        gatewayIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gateway_ip = 4;</code>
       *
       * <pre>
       *网关(网络序)     	
       * </pre>
       */
      public Builder clearGatewayIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gatewayIp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dns = 5;
      private int dns_ ;
      /**
       * <code>optional uint32 dns = 5;</code>
       *
       * <pre>
       *DNS (网络序)
       * </pre>
       */
      public boolean hasDns() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 dns = 5;</code>
       *
       * <pre>
       *DNS (网络序)
       * </pre>
       */
      public int getDns() {
        return dns_;
      }
      /**
       * <code>optional uint32 dns = 5;</code>
       *
       * <pre>
       *DNS (网络序)
       * </pre>
       */
      public Builder setDns(int value) {
        bitField0_ |= 0x00000010;
        dns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dns = 5;</code>
       *
       * <pre>
       *DNS (网络序)
       * </pre>
       */
      public Builder clearDns() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dns_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dns_backup = 6;
      private int dnsBackup_ ;
      /**
       * <code>optional uint32 dns_backup = 6;</code>
       *
       * <pre>
       *DNS备份(网络序)
       * </pre>
       */
      public boolean hasDnsBackup() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 dns_backup = 6;</code>
       *
       * <pre>
       *DNS备份(网络序)
       * </pre>
       */
      public int getDnsBackup() {
        return dnsBackup_;
      }
      /**
       * <code>optional uint32 dns_backup = 6;</code>
       *
       * <pre>
       *DNS备份(网络序)
       * </pre>
       */
      public Builder setDnsBackup(int value) {
        bitField0_ |= 0x00000020;
        dnsBackup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dns_backup = 6;</code>
       *
       * <pre>
       *DNS备份(网络序)
       * </pre>
       */
      public Builder clearDnsBackup() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dnsBackup_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TNetUsedInfo)
    }

    static {
      defaultInstance = new TNetUsedInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TNetUsedInfo)
  }

  public interface TMTNTPInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool used_ntp = 1;
    /**
     * <code>optional bool used_ntp = 1;</code>
     *
     * <pre>
     *是否使用NTP服务器 true:启用 false不启用，
     * </pre>
     */
    boolean hasUsedNtp();
    /**
     * <code>optional bool used_ntp = 1;</code>
     *
     * <pre>
     *是否使用NTP服务器 true:启用 false不启用，
     * </pre>
     */
    boolean getUsedNtp();

    // optional string domain = 2;
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    boolean hasDomain();
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    java.lang.String getDomain();
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    // optional uint32 interval = 3;
    /**
     * <code>optional uint32 interval = 3;</code>
     *
     * <pre>
     *刷新间隔 ms 
     * </pre>
     */
    boolean hasInterval();
    /**
     * <code>optional uint32 interval = 3;</code>
     *
     * <pre>
     *刷新间隔 ms 
     * </pre>
     */
    int getInterval();
  }
  /**
   * Protobuf type {@code mt.TMTNTPInfo}
   *
   * <pre>
   ** NTP和时间设置信息 
   * </pre>
   */
  public static final class TMTNTPInfo extends
      com.google.protobuf.GeneratedMessage
      implements TMTNTPInfoOrBuilder {
    // Use TMTNTPInfo.newBuilder() to construct.
    private TMTNTPInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMTNTPInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMTNTPInfo defaultInstance;
    public static TMTNTPInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TMTNTPInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMTNTPInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              usedNtp_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              domain_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              interval_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTNTPInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTNTPInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TMTNTPInfo> PARSER =
        new com.google.protobuf.AbstractParser<TMTNTPInfo>() {
      public TMTNTPInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMTNTPInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMTNTPInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool used_ntp = 1;
    public static final int USED_NTP_FIELD_NUMBER = 1;
    private boolean usedNtp_;
    /**
     * <code>optional bool used_ntp = 1;</code>
     *
     * <pre>
     *是否使用NTP服务器 true:启用 false不启用，
     * </pre>
     */
    public boolean hasUsedNtp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool used_ntp = 1;</code>
     *
     * <pre>
     *是否使用NTP服务器 true:启用 false不启用，
     * </pre>
     */
    public boolean getUsedNtp() {
      return usedNtp_;
    }

    // optional string domain = 2;
    public static final int DOMAIN_FIELD_NUMBER = 2;
    private java.lang.Object domain_;
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    public boolean hasDomain() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          domain_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string domain = 2;</code>
     *
     * <pre>
     *域名 OR IP  used_ntp为true生效
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 interval = 3;
    public static final int INTERVAL_FIELD_NUMBER = 3;
    private int interval_;
    /**
     * <code>optional uint32 interval = 3;</code>
     *
     * <pre>
     *刷新间隔 ms 
     * </pre>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 interval = 3;</code>
     *
     * <pre>
     *刷新间隔 ms 
     * </pre>
     */
    public int getInterval() {
      return interval_;
    }

    private void initFields() {
      usedNtp_ = false;
      domain_ = "";
      interval_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, usedNtp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDomainBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, interval_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, usedNtp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDomainBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, interval_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMTNTPInfo}
     *
     * <pre>
     ** NTP和时间设置信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTNTPInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTNTPInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        usedNtp_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        domain_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTNTPInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedNtp_ = usedNtp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.domain_ = domain_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.interval_ = interval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo.getDefaultInstance()) return this;
        if (other.hasUsedNtp()) {
          setUsedNtp(other.getUsedNtp());
        }
        if (other.hasDomain()) {
          bitField0_ |= 0x00000002;
          domain_ = other.domain_;
          onChanged();
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTNTPInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool used_ntp = 1;
      private boolean usedNtp_ ;
      /**
       * <code>optional bool used_ntp = 1;</code>
       *
       * <pre>
       *是否使用NTP服务器 true:启用 false不启用，
       * </pre>
       */
      public boolean hasUsedNtp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool used_ntp = 1;</code>
       *
       * <pre>
       *是否使用NTP服务器 true:启用 false不启用，
       * </pre>
       */
      public boolean getUsedNtp() {
        return usedNtp_;
      }
      /**
       * <code>optional bool used_ntp = 1;</code>
       *
       * <pre>
       *是否使用NTP服务器 true:启用 false不启用，
       * </pre>
       */
      public Builder setUsedNtp(boolean value) {
        bitField0_ |= 0x00000001;
        usedNtp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool used_ntp = 1;</code>
       *
       * <pre>
       *是否使用NTP服务器 true:启用 false不启用，
       * </pre>
       */
      public Builder clearUsedNtp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        usedNtp_ = false;
        onChanged();
        return this;
      }

      // optional string domain = 2;
      private java.lang.Object domain_ = "";
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public boolean hasDomain() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public Builder clearDomain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <code>optional string domain = 2;</code>
       *
       * <pre>
       *域名 OR IP  used_ntp为true生效
       * </pre>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        domain_ = value;
        onChanged();
        return this;
      }

      // optional uint32 interval = 3;
      private int interval_ ;
      /**
       * <code>optional uint32 interval = 3;</code>
       *
       * <pre>
       *刷新间隔 ms 
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 interval = 3;</code>
       *
       * <pre>
       *刷新间隔 ms 
       * </pre>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <code>optional uint32 interval = 3;</code>
       *
       * <pre>
       *刷新间隔 ms 
       * </pre>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000004;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 interval = 3;</code>
       *
       * <pre>
       *刷新间隔 ms 
       * </pre>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        interval_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMTNTPInfo)
    }

    static {
      defaultInstance = new TMTNTPInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMTNTPInfo)
  }

  public interface TMTTimeZoneInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmTimeZone time_zone = 1;
    /**
     * <code>optional .mt.EmTimeZone time_zone = 1;</code>
     *
     * <pre>
     *设置时区 
     * </pre>
     */
    boolean hasTimeZone();
    /**
     * <code>optional .mt.EmTimeZone time_zone = 1;</code>
     *
     * <pre>
     *设置时区 
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone getTimeZone();
  }
  /**
   * Protobuf type {@code mt.TMTTimeZoneInfo}
   *
   * <pre>
   ** 设备时区设置信息 
   * </pre>
   */
  public static final class TMTTimeZoneInfo extends
      com.google.protobuf.GeneratedMessage
      implements TMTTimeZoneInfoOrBuilder {
    // Use TMTTimeZoneInfo.newBuilder() to construct.
    private TMTTimeZoneInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMTTimeZoneInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMTTimeZoneInfo defaultInstance;
    public static TMTTimeZoneInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TMTTimeZoneInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMTTimeZoneInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                timeZone_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTTimeZoneInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTTimeZoneInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TMTTimeZoneInfo> PARSER =
        new com.google.protobuf.AbstractParser<TMTTimeZoneInfo>() {
      public TMTTimeZoneInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMTTimeZoneInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMTTimeZoneInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmTimeZone time_zone = 1;
    public static final int TIME_ZONE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone timeZone_;
    /**
     * <code>optional .mt.EmTimeZone time_zone = 1;</code>
     *
     * <pre>
     *设置时区 
     * </pre>
     */
    public boolean hasTimeZone() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmTimeZone time_zone = 1;</code>
     *
     * <pre>
     *设置时区 
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone getTimeZone() {
      return timeZone_;
    }

    private void initFields() {
      timeZone_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone.emTimeZone_GMT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, timeZone_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, timeZone_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMTTimeZoneInfo}
     *
     * <pre>
     ** 设备时区设置信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTTimeZoneInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTTimeZoneInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeZone_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone.emTimeZone_GMT;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTTimeZoneInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeZone_ = timeZone_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo.getDefaultInstance()) return this;
        if (other.hasTimeZone()) {
          setTimeZone(other.getTimeZone());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTTimeZoneInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmTimeZone time_zone = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone timeZone_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone.emTimeZone_GMT;
      /**
       * <code>optional .mt.EmTimeZone time_zone = 1;</code>
       *
       * <pre>
       *设置时区 
       * </pre>
       */
      public boolean hasTimeZone() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmTimeZone time_zone = 1;</code>
       *
       * <pre>
       *设置时区 
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone getTimeZone() {
        return timeZone_;
      }
      /**
       * <code>optional .mt.EmTimeZone time_zone = 1;</code>
       *
       * <pre>
       *设置时区 
       * </pre>
       */
      public Builder setTimeZone(com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        timeZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmTimeZone time_zone = 1;</code>
       *
       * <pre>
       *设置时区 
       * </pre>
       */
      public Builder clearTimeZone() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeZone_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmTimeZone.emTimeZone_GMT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMTTimeZoneInfo)
    }

    static {
      defaultInstance = new TMTTimeZoneInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMTTimeZoneInfo)
  }

  public interface TMTFtpTelnetAccountInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string username = 1;
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    boolean hasUsername();
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    java.lang.String getUsername();
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    // optional string password = 2;
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code mt.TMTFtpTelnetAccountInfo}
   *
   * <pre>
   ** FTP/TELNET 登录信息
   * </pre>
   */
  public static final class TMTFtpTelnetAccountInfo extends
      com.google.protobuf.GeneratedMessage
      implements TMTFtpTelnetAccountInfoOrBuilder {
    // Use TMTFtpTelnetAccountInfo.newBuilder() to construct.
    private TMTFtpTelnetAccountInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TMTFtpTelnetAccountInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TMTFtpTelnetAccountInfo defaultInstance;
    public static TMTFtpTelnetAccountInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TMTFtpTelnetAccountInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TMTFtpTelnetAccountInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              username_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              password_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTFtpTelnetAccountInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTFtpTelnetAccountInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TMTFtpTelnetAccountInfo> PARSER =
        new com.google.protobuf.AbstractParser<TMTFtpTelnetAccountInfo>() {
      public TMTFtpTelnetAccountInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMTFtpTelnetAccountInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TMTFtpTelnetAccountInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string username = 1;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private java.lang.Object username_;
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string username = 1;</code>
     *
     * <pre>
     *ftp-telnet用户账号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string password = 2;
    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     *
     * <pre>
     *账号密码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      username_ = "";
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TMTFtpTelnetAccountInfo}
     *
     * <pre>
     ** FTP/TELNET 登录信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTFtpTelnetAccountInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTFtpTelnetAccountInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TMTFtpTelnetAccountInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.username_ = username_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo.getDefaultInstance()) return this;
        if (other.hasUsername()) {
          bitField0_ |= 0x00000001;
          username_ = other.username_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TMTFtpTelnetAccountInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string username = 1;
      private java.lang.Object username_ = "";
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000001);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 1;</code>
       *
       * <pre>
       *ftp-telnet用户账号
       * </pre>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        username_ = value;
        onChanged();
        return this;
      }

      // optional string password = 2;
      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       *
       * <pre>
       *账号密码
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TMTFtpTelnetAccountInfo)
    }

    static {
      defaultInstance = new TMTFtpTelnetAccountInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TMTFtpTelnetAccountInfo)
  }

  public interface TServerTestResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 userid = 1;
    /**
     * <code>optional uint32 userid = 1;</code>
     *
     * <pre>
     *参见EmPingUserId
     * </pre>
     */
    boolean hasUserid();
    /**
     * <code>optional uint32 userid = 1;</code>
     *
     * <pre>
     *参见EmPingUserId
     * </pre>
     */
    int getUserid();

    // optional bool isok = 2;
    /**
     * <code>optional bool isok = 2;</code>
     *
     * <pre>
     *测试结果
     * </pre>
     */
    boolean hasIsok();
    /**
     * <code>optional bool isok = 2;</code>
     *
     * <pre>
     *测试结果
     * </pre>
     */
    boolean getIsok();
  }
  /**
   * Protobuf type {@code mt.TServerTestResult}
   *
   * <pre>
   ** 登录服务器连接测试结果 
   * </pre>
   */
  public static final class TServerTestResult extends
      com.google.protobuf.GeneratedMessage
      implements TServerTestResultOrBuilder {
    // Use TServerTestResult.newBuilder() to construct.
    private TServerTestResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TServerTestResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TServerTestResult defaultInstance;
    public static TServerTestResult getDefaultInstance() {
      return defaultInstance;
    }

    public TServerTestResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TServerTestResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isok_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TServerTestResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TServerTestResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.Builder.class);
    }

    public static com.google.protobuf.Parser<TServerTestResult> PARSER =
        new com.google.protobuf.AbstractParser<TServerTestResult>() {
      public TServerTestResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TServerTestResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TServerTestResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 userid = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private int userid_;
    /**
     * <code>optional uint32 userid = 1;</code>
     *
     * <pre>
     *参见EmPingUserId
     * </pre>
     */
    public boolean hasUserid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 userid = 1;</code>
     *
     * <pre>
     *参见EmPingUserId
     * </pre>
     */
    public int getUserid() {
      return userid_;
    }

    // optional bool isok = 2;
    public static final int ISOK_FIELD_NUMBER = 2;
    private boolean isok_;
    /**
     * <code>optional bool isok = 2;</code>
     *
     * <pre>
     *测试结果
     * </pre>
     */
    public boolean hasIsok() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isok = 2;</code>
     *
     * <pre>
     *测试结果
     * </pre>
     */
    public boolean getIsok() {
      return isok_;
    }

    private void initFields() {
      userid_ = 0;
      isok_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, userid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isok_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, userid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isok_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TServerTestResult}
     *
     * <pre>
     ** 登录服务器连接测试结果 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TServerTestResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TServerTestResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isok_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TServerTestResult_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userid_ = userid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isok_ = isok_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult.getDefaultInstance()) return this;
        if (other.hasUserid()) {
          setUserid(other.getUserid());
        }
        if (other.hasIsok()) {
          setIsok(other.getIsok());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TServerTestResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 userid = 1;
      private int userid_ ;
      /**
       * <code>optional uint32 userid = 1;</code>
       *
       * <pre>
       *参见EmPingUserId
       * </pre>
       */
      public boolean hasUserid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 userid = 1;</code>
       *
       * <pre>
       *参见EmPingUserId
       * </pre>
       */
      public int getUserid() {
        return userid_;
      }
      /**
       * <code>optional uint32 userid = 1;</code>
       *
       * <pre>
       *参见EmPingUserId
       * </pre>
       */
      public Builder setUserid(int value) {
        bitField0_ |= 0x00000001;
        userid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userid = 1;</code>
       *
       * <pre>
       *参见EmPingUserId
       * </pre>
       */
      public Builder clearUserid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userid_ = 0;
        onChanged();
        return this;
      }

      // optional bool isok = 2;
      private boolean isok_ ;
      /**
       * <code>optional bool isok = 2;</code>
       *
       * <pre>
       *测试结果
       * </pre>
       */
      public boolean hasIsok() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isok = 2;</code>
       *
       * <pre>
       *测试结果
       * </pre>
       */
      public boolean getIsok() {
        return isok_;
      }
      /**
       * <code>optional bool isok = 2;</code>
       *
       * <pre>
       *测试结果
       * </pre>
       */
      public Builder setIsok(boolean value) {
        bitField0_ |= 0x00000002;
        isok_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isok = 2;</code>
       *
       * <pre>
       *测试结果
       * </pre>
       */
      public Builder clearIsok() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isok_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TServerTestResult)
    }

    static {
      defaultInstance = new TServerTestResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TServerTestResult)
  }

  public interface TWifiWirelessScreenInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mt.EmWirelessScreenState wirelessScreen_state = 1;
    /**
     * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
     *
     * <pre>
     *是否启用无线投屏 true:启用 false不启用
     * </pre>
     */
    boolean hasWirelessScreenState();
    /**
     * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
     *
     * <pre>
     *是否启用无线投屏 true:启用 false不启用
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState getWirelessScreenState();

    // optional uint32 wirelessScreen_deviceNum = 2;
    /**
     * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
     *
     * <pre>
     *无线投屏设备数量
     * </pre>
     */
    boolean hasWirelessScreenDeviceNum();
    /**
     * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
     *
     * <pre>
     *无线投屏设备数量
     * </pre>
     */
    int getWirelessScreenDeviceNum();

    // optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;
    /**
     * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
     *
     * <pre>
     *无线投屏失败错误码
     * </pre>
     */
    boolean hasWirelessScreenErrReason();
    /**
     * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
     *
     * <pre>
     *无线投屏失败错误码
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason getWirelessScreenErrReason();
  }
  /**
   * Protobuf type {@code mt.TWifiWirelessScreenInfo}
   *
   * <pre>
   ** 无线投屏状态信息 
   * </pre>
   */
  public static final class TWifiWirelessScreenInfo extends
      com.google.protobuf.GeneratedMessage
      implements TWifiWirelessScreenInfoOrBuilder {
    // Use TWifiWirelessScreenInfo.newBuilder() to construct.
    private TWifiWirelessScreenInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TWifiWirelessScreenInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TWifiWirelessScreenInfo defaultInstance;
    public static TWifiWirelessScreenInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TWifiWirelessScreenInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TWifiWirelessScreenInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                wirelessScreenState_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              wirelessScreenDeviceNum_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                wirelessScreenErrReason_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWirelessScreenInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWirelessScreenInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TWifiWirelessScreenInfo> PARSER =
        new com.google.protobuf.AbstractParser<TWifiWirelessScreenInfo>() {
      public TWifiWirelessScreenInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TWifiWirelessScreenInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TWifiWirelessScreenInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mt.EmWirelessScreenState wirelessScreen_state = 1;
    public static final int WIRELESSSCREEN_STATE_FIELD_NUMBER = 1;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState wirelessScreenState_;
    /**
     * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
     *
     * <pre>
     *是否启用无线投屏 true:启用 false不启用
     * </pre>
     */
    public boolean hasWirelessScreenState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
     *
     * <pre>
     *是否启用无线投屏 true:启用 false不启用
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState getWirelessScreenState() {
      return wirelessScreenState_;
    }

    // optional uint32 wirelessScreen_deviceNum = 2;
    public static final int WIRELESSSCREEN_DEVICENUM_FIELD_NUMBER = 2;
    private int wirelessScreenDeviceNum_;
    /**
     * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
     *
     * <pre>
     *无线投屏设备数量
     * </pre>
     */
    public boolean hasWirelessScreenDeviceNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
     *
     * <pre>
     *无线投屏设备数量
     * </pre>
     */
    public int getWirelessScreenDeviceNum() {
      return wirelessScreenDeviceNum_;
    }

    // optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;
    public static final int WIRELESSSCREEN_ERRREASON_FIELD_NUMBER = 3;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason wirelessScreenErrReason_;
    /**
     * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
     *
     * <pre>
     *无线投屏失败错误码
     * </pre>
     */
    public boolean hasWirelessScreenErrReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
     *
     * <pre>
     *无线投屏失败错误码
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason getWirelessScreenErrReason() {
      return wirelessScreenErrReason_;
    }

    private void initFields() {
      wirelessScreenState_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState.emWirelessScreen_enabled;
      wirelessScreenDeviceNum_ = 0;
      wirelessScreenErrReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason.emWirelessScreenErrReason_None;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, wirelessScreenState_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, wirelessScreenDeviceNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, wirelessScreenErrReason_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, wirelessScreenState_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, wirelessScreenDeviceNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, wirelessScreenErrReason_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TWifiWirelessScreenInfo}
     *
     * <pre>
     ** 无线投屏状态信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWirelessScreenInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWirelessScreenInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        wirelessScreenState_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState.emWirelessScreen_enabled;
        bitField0_ = (bitField0_ & ~0x00000001);
        wirelessScreenDeviceNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wirelessScreenErrReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason.emWirelessScreenErrReason_None;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TWifiWirelessScreenInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.wirelessScreenState_ = wirelessScreenState_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wirelessScreenDeviceNum_ = wirelessScreenDeviceNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wirelessScreenErrReason_ = wirelessScreenErrReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo.getDefaultInstance()) return this;
        if (other.hasWirelessScreenState()) {
          setWirelessScreenState(other.getWirelessScreenState());
        }
        if (other.hasWirelessScreenDeviceNum()) {
          setWirelessScreenDeviceNum(other.getWirelessScreenDeviceNum());
        }
        if (other.hasWirelessScreenErrReason()) {
          setWirelessScreenErrReason(other.getWirelessScreenErrReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TWifiWirelessScreenInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mt.EmWirelessScreenState wirelessScreen_state = 1;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState wirelessScreenState_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState.emWirelessScreen_enabled;
      /**
       * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
       *
       * <pre>
       *是否启用无线投屏 true:启用 false不启用
       * </pre>
       */
      public boolean hasWirelessScreenState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
       *
       * <pre>
       *是否启用无线投屏 true:启用 false不启用
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState getWirelessScreenState() {
        return wirelessScreenState_;
      }
      /**
       * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
       *
       * <pre>
       *是否启用无线投屏 true:启用 false不启用
       * </pre>
       */
      public Builder setWirelessScreenState(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        wirelessScreenState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWirelessScreenState wirelessScreen_state = 1;</code>
       *
       * <pre>
       *是否启用无线投屏 true:启用 false不启用
       * </pre>
       */
      public Builder clearWirelessScreenState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        wirelessScreenState_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenState.emWirelessScreen_enabled;
        onChanged();
        return this;
      }

      // optional uint32 wirelessScreen_deviceNum = 2;
      private int wirelessScreenDeviceNum_ ;
      /**
       * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
       *
       * <pre>
       *无线投屏设备数量
       * </pre>
       */
      public boolean hasWirelessScreenDeviceNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
       *
       * <pre>
       *无线投屏设备数量
       * </pre>
       */
      public int getWirelessScreenDeviceNum() {
        return wirelessScreenDeviceNum_;
      }
      /**
       * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
       *
       * <pre>
       *无线投屏设备数量
       * </pre>
       */
      public Builder setWirelessScreenDeviceNum(int value) {
        bitField0_ |= 0x00000002;
        wirelessScreenDeviceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wirelessScreen_deviceNum = 2;</code>
       *
       * <pre>
       *无线投屏设备数量
       * </pre>
       */
      public Builder clearWirelessScreenDeviceNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        wirelessScreenDeviceNum_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason wirelessScreenErrReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason.emWirelessScreenErrReason_None;
      /**
       * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
       *
       * <pre>
       *无线投屏失败错误码
       * </pre>
       */
      public boolean hasWirelessScreenErrReason() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
       *
       * <pre>
       *无线投屏失败错误码
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason getWirelessScreenErrReason() {
        return wirelessScreenErrReason_;
      }
      /**
       * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
       *
       * <pre>
       *无线投屏失败错误码
       * </pre>
       */
      public Builder setWirelessScreenErrReason(com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        wirelessScreenErrReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmWirelessScreenErrReason wirelessScreen_ErrReason = 3;</code>
       *
       * <pre>
       *无线投屏失败错误码
       * </pre>
       */
      public Builder clearWirelessScreenErrReason() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wirelessScreenErrReason_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmWirelessScreenErrReason.emWirelessScreenErrReason_None;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TWifiWirelessScreenInfo)
    }

    static {
      defaultInstance = new TWifiWirelessScreenInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TWifiWirelessScreenInfo)
  }

  public interface TLimitedIpItemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 start_ip = 1;
    /**
     * <code>optional uint32 start_ip = 1;</code>
     *
     * <pre>
     *起始ip
     * </pre>
     */
    boolean hasStartIp();
    /**
     * <code>optional uint32 start_ip = 1;</code>
     *
     * <pre>
     *起始ip
     * </pre>
     */
    int getStartIp();

    // optional uint32 end_ip = 2;
    /**
     * <code>optional uint32 end_ip = 2;</code>
     *
     * <pre>
     *终止ip
     * </pre>
     */
    boolean hasEndIp();
    /**
     * <code>optional uint32 end_ip = 2;</code>
     *
     * <pre>
     *终止ip
     * </pre>
     */
    int getEndIp();
  }
  /**
   * Protobuf type {@code mt.TLimitedIpItemInfo}
   *
   * <pre>
   ** 限定ip段信息 
   * </pre>
   */
  public static final class TLimitedIpItemInfo extends
      com.google.protobuf.GeneratedMessage
      implements TLimitedIpItemInfoOrBuilder {
    // Use TLimitedIpItemInfo.newBuilder() to construct.
    private TLimitedIpItemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TLimitedIpItemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TLimitedIpItemInfo defaultInstance;
    public static TLimitedIpItemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TLimitedIpItemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TLimitedIpItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startIp_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endIp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<TLimitedIpItemInfo> PARSER =
        new com.google.protobuf.AbstractParser<TLimitedIpItemInfo>() {
      public TLimitedIpItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TLimitedIpItemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TLimitedIpItemInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 start_ip = 1;
    public static final int START_IP_FIELD_NUMBER = 1;
    private int startIp_;
    /**
     * <code>optional uint32 start_ip = 1;</code>
     *
     * <pre>
     *起始ip
     * </pre>
     */
    public boolean hasStartIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 start_ip = 1;</code>
     *
     * <pre>
     *起始ip
     * </pre>
     */
    public int getStartIp() {
      return startIp_;
    }

    // optional uint32 end_ip = 2;
    public static final int END_IP_FIELD_NUMBER = 2;
    private int endIp_;
    /**
     * <code>optional uint32 end_ip = 2;</code>
     *
     * <pre>
     *终止ip
     * </pre>
     */
    public boolean hasEndIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 end_ip = 2;</code>
     *
     * <pre>
     *终止ip
     * </pre>
     */
    public int getEndIp() {
      return endIp_;
    }

    private void initFields() {
      startIp_ = 0;
      endIp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, startIp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, endIp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, startIp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, endIp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TLimitedIpItemInfo}
     *
     * <pre>
     ** 限定ip段信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpItemInfo_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startIp_ = startIp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endIp_ = endIp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.getDefaultInstance()) return this;
        if (other.hasStartIp()) {
          setStartIp(other.getStartIp());
        }
        if (other.hasEndIp()) {
          setEndIp(other.getEndIp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 start_ip = 1;
      private int startIp_ ;
      /**
       * <code>optional uint32 start_ip = 1;</code>
       *
       * <pre>
       *起始ip
       * </pre>
       */
      public boolean hasStartIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 start_ip = 1;</code>
       *
       * <pre>
       *起始ip
       * </pre>
       */
      public int getStartIp() {
        return startIp_;
      }
      /**
       * <code>optional uint32 start_ip = 1;</code>
       *
       * <pre>
       *起始ip
       * </pre>
       */
      public Builder setStartIp(int value) {
        bitField0_ |= 0x00000001;
        startIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_ip = 1;</code>
       *
       * <pre>
       *起始ip
       * </pre>
       */
      public Builder clearStartIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startIp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 end_ip = 2;
      private int endIp_ ;
      /**
       * <code>optional uint32 end_ip = 2;</code>
       *
       * <pre>
       *终止ip
       * </pre>
       */
      public boolean hasEndIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 end_ip = 2;</code>
       *
       * <pre>
       *终止ip
       * </pre>
       */
      public int getEndIp() {
        return endIp_;
      }
      /**
       * <code>optional uint32 end_ip = 2;</code>
       *
       * <pre>
       *终止ip
       * </pre>
       */
      public Builder setEndIp(int value) {
        bitField0_ |= 0x00000002;
        endIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end_ip = 2;</code>
       *
       * <pre>
       *终止ip
       * </pre>
       */
      public Builder clearEndIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endIp_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TLimitedIpItemInfo)
    }

    static {
      defaultInstance = new TLimitedIpItemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TLimitedIpItemInfo)
  }

  public interface TLimitedIpCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool enable = 1;
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    boolean hasEnable();
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    boolean getEnable();

    // optional .mt.EmLimitedIpType limitedIp_type = 2;
    /**
     * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
     *
     * <pre>
     *ip限定类型
     * </pre>
     */
    boolean hasLimitedIpType();
    /**
     * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
     *
     * <pre>
     *ip限定类型
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType getLimitedIpType();

    // repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> 
        getLimitedIpListList();
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo getLimitedIpList(int index);
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    int getLimitedIpListCount();
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder> 
        getLimitedIpListOrBuilderList();
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder getLimitedIpListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TLimitedIpCfg}
   *
   * <pre>
   ** 限定ip配置 
   * </pre>
   */
  public static final class TLimitedIpCfg extends
      com.google.protobuf.GeneratedMessage
      implements TLimitedIpCfgOrBuilder {
    // Use TLimitedIpCfg.newBuilder() to construct.
    private TLimitedIpCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TLimitedIpCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TLimitedIpCfg defaultInstance;
    public static TLimitedIpCfg getDefaultInstance() {
      return defaultInstance;
    }

    public TLimitedIpCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TLimitedIpCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enable_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                limitedIpType_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                limitedIpList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              limitedIpList_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          limitedIpList_ = java.util.Collections.unmodifiableList(limitedIpList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<TLimitedIpCfg> PARSER =
        new com.google.protobuf.AbstractParser<TLimitedIpCfg>() {
      public TLimitedIpCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TLimitedIpCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TLimitedIpCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool enable = 1;
    public static final int ENABLE_FIELD_NUMBER = 1;
    private boolean enable_;
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    public boolean hasEnable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool enable = 1;</code>
     *
     * <pre>
     *0-关闭， 1-启用
     * </pre>
     */
    public boolean getEnable() {
      return enable_;
    }

    // optional .mt.EmLimitedIpType limitedIp_type = 2;
    public static final int LIMITEDIP_TYPE_FIELD_NUMBER = 2;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType limitedIpType_;
    /**
     * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
     *
     * <pre>
     *ip限定类型
     * </pre>
     */
    public boolean hasLimitedIpType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
     *
     * <pre>
     *ip限定类型
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType getLimitedIpType() {
      return limitedIpType_;
    }

    // repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;
    public static final int LIMITEDIP_LIST_FIELD_NUMBER = 3;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> limitedIpList_;
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> getLimitedIpListList() {
      return limitedIpList_;
    }
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder> 
        getLimitedIpListOrBuilderList() {
      return limitedIpList_;
    }
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    public int getLimitedIpListCount() {
      return limitedIpList_.size();
    }
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo getLimitedIpList(int index) {
      return limitedIpList_.get(index);
    }
    /**
     * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
     *
     * <pre>
     *ftp/telnet限定ip列表
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder getLimitedIpListOrBuilder(
        int index) {
      return limitedIpList_.get(index);
    }

    private void initFields() {
      enable_ = false;
      limitedIpType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType.emLimitedIpType_WhiteList;
      limitedIpList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, limitedIpType_.getNumber());
      }
      for (int i = 0; i < limitedIpList_.size(); i++) {
        output.writeMessage(3, limitedIpList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, limitedIpType_.getNumber());
      }
      for (int i = 0; i < limitedIpList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, limitedIpList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TLimitedIpCfg}
     *
     * <pre>
     ** 限定ip配置 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLimitedIpListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        enable_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        limitedIpType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType.emLimitedIpType_WhiteList;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (limitedIpListBuilder_ == null) {
          limitedIpList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          limitedIpListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TLimitedIpCfg_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enable_ = enable_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.limitedIpType_ = limitedIpType_;
        if (limitedIpListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            limitedIpList_ = java.util.Collections.unmodifiableList(limitedIpList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.limitedIpList_ = limitedIpList_;
        } else {
          result.limitedIpList_ = limitedIpListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg.getDefaultInstance()) return this;
        if (other.hasEnable()) {
          setEnable(other.getEnable());
        }
        if (other.hasLimitedIpType()) {
          setLimitedIpType(other.getLimitedIpType());
        }
        if (limitedIpListBuilder_ == null) {
          if (!other.limitedIpList_.isEmpty()) {
            if (limitedIpList_.isEmpty()) {
              limitedIpList_ = other.limitedIpList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLimitedIpListIsMutable();
              limitedIpList_.addAll(other.limitedIpList_);
            }
            onChanged();
          }
        } else {
          if (!other.limitedIpList_.isEmpty()) {
            if (limitedIpListBuilder_.isEmpty()) {
              limitedIpListBuilder_.dispose();
              limitedIpListBuilder_ = null;
              limitedIpList_ = other.limitedIpList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              limitedIpListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLimitedIpListFieldBuilder() : null;
            } else {
              limitedIpListBuilder_.addAllMessages(other.limitedIpList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool enable = 1;
      private boolean enable_ ;
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public boolean hasEnable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public Builder setEnable(boolean value) {
        bitField0_ |= 0x00000001;
        enable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enable = 1;</code>
       *
       * <pre>
       *0-关闭， 1-启用
       * </pre>
       */
      public Builder clearEnable() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enable_ = false;
        onChanged();
        return this;
      }

      // optional .mt.EmLimitedIpType limitedIp_type = 2;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType limitedIpType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType.emLimitedIpType_WhiteList;
      /**
       * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
       *
       * <pre>
       *ip限定类型
       * </pre>
       */
      public boolean hasLimitedIpType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
       *
       * <pre>
       *ip限定类型
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType getLimitedIpType() {
        return limitedIpType_;
      }
      /**
       * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
       *
       * <pre>
       *ip限定类型
       * </pre>
       */
      public Builder setLimitedIpType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        limitedIpType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmLimitedIpType limitedIp_type = 2;</code>
       *
       * <pre>
       *ip限定类型
       * </pre>
       */
      public Builder clearLimitedIpType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        limitedIpType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmLimitedIpType.emLimitedIpType_WhiteList;
        onChanged();
        return this;
      }

      // repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> limitedIpList_ =
        java.util.Collections.emptyList();
      private void ensureLimitedIpListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          limitedIpList_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo>(limitedIpList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder> limitedIpListBuilder_;

      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> getLimitedIpListList() {
        if (limitedIpListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limitedIpList_);
        } else {
          return limitedIpListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public int getLimitedIpListCount() {
        if (limitedIpListBuilder_ == null) {
          return limitedIpList_.size();
        } else {
          return limitedIpListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo getLimitedIpList(int index) {
        if (limitedIpListBuilder_ == null) {
          return limitedIpList_.get(index);
        } else {
          return limitedIpListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder setLimitedIpList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo value) {
        if (limitedIpListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitedIpListIsMutable();
          limitedIpList_.set(index, value);
          onChanged();
        } else {
          limitedIpListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder setLimitedIpList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder builderForValue) {
        if (limitedIpListBuilder_ == null) {
          ensureLimitedIpListIsMutable();
          limitedIpList_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitedIpListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder addLimitedIpList(com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo value) {
        if (limitedIpListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitedIpListIsMutable();
          limitedIpList_.add(value);
          onChanged();
        } else {
          limitedIpListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder addLimitedIpList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo value) {
        if (limitedIpListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitedIpListIsMutable();
          limitedIpList_.add(index, value);
          onChanged();
        } else {
          limitedIpListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder addLimitedIpList(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder builderForValue) {
        if (limitedIpListBuilder_ == null) {
          ensureLimitedIpListIsMutable();
          limitedIpList_.add(builderForValue.build());
          onChanged();
        } else {
          limitedIpListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder addLimitedIpList(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder builderForValue) {
        if (limitedIpListBuilder_ == null) {
          ensureLimitedIpListIsMutable();
          limitedIpList_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitedIpListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder addAllLimitedIpList(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo> values) {
        if (limitedIpListBuilder_ == null) {
          ensureLimitedIpListIsMutable();
          super.addAll(values, limitedIpList_);
          onChanged();
        } else {
          limitedIpListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder clearLimitedIpList() {
        if (limitedIpListBuilder_ == null) {
          limitedIpList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          limitedIpListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public Builder removeLimitedIpList(int index) {
        if (limitedIpListBuilder_ == null) {
          ensureLimitedIpListIsMutable();
          limitedIpList_.remove(index);
          onChanged();
        } else {
          limitedIpListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder getLimitedIpListBuilder(
          int index) {
        return getLimitedIpListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder getLimitedIpListOrBuilder(
          int index) {
        if (limitedIpListBuilder_ == null) {
          return limitedIpList_.get(index);  } else {
          return limitedIpListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder> 
           getLimitedIpListOrBuilderList() {
        if (limitedIpListBuilder_ != null) {
          return limitedIpListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limitedIpList_);
        }
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder addLimitedIpListBuilder() {
        return getLimitedIpListFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder addLimitedIpListBuilder(
          int index) {
        return getLimitedIpListFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TLimitedIpItemInfo limitedIp_List = 3;</code>
       *
       * <pre>
       *ftp/telnet限定ip列表
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder> 
           getLimitedIpListBuilderList() {
        return getLimitedIpListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder> 
          getLimitedIpListFieldBuilder() {
        if (limitedIpListBuilder_ == null) {
          limitedIpListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfo.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TLimitedIpItemInfoOrBuilder>(
                  limitedIpList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          limitedIpList_ = null;
        }
        return limitedIpListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TLimitedIpCfg)
    }

    static {
      defaultInstance = new TLimitedIpCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TLimitedIpCfg)
  }

  public interface TNetCardStatisOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string netcard_name = 1;
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    boolean hasNetcardName();
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    java.lang.String getNetcardName();
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNetcardNameBytes();

    // optional uint32 send_flow_amount = 2;
    /**
     * <code>optional uint32 send_flow_amount = 2;</code>
     *
     * <pre>
     *出口流量
     * </pre>
     */
    boolean hasSendFlowAmount();
    /**
     * <code>optional uint32 send_flow_amount = 2;</code>
     *
     * <pre>
     *出口流量
     * </pre>
     */
    int getSendFlowAmount();

    // optional uint32 recv_flow_amount = 3;
    /**
     * <code>optional uint32 recv_flow_amount = 3;</code>
     *
     * <pre>
     *入口流量
     * </pre>
     */
    boolean hasRecvFlowAmount();
    /**
     * <code>optional uint32 recv_flow_amount = 3;</code>
     *
     * <pre>
     *入口流量
     * </pre>
     */
    int getRecvFlowAmount();

    // optional .mt.EmNetAdapterWorkType netcard_type = 4;
    /**
     * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
     *
     * <pre>
     *网口类型
     * </pre>
     */
    boolean hasNetcardType();
    /**
     * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
     *
     * <pre>
     *网口类型
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getNetcardType();
  }
  /**
   * Protobuf type {@code mt.TNetCardStatis}
   *
   * <pre>
   ** 网口流量状态 
   * </pre>
   */
  public static final class TNetCardStatis extends
      com.google.protobuf.GeneratedMessage
      implements TNetCardStatisOrBuilder {
    // Use TNetCardStatis.newBuilder() to construct.
    private TNetCardStatis(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNetCardStatis(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNetCardStatis defaultInstance;
    public static TNetCardStatis getDefaultInstance() {
      return defaultInstance;
    }

    public TNetCardStatis getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNetCardStatis(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              netcardName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sendFlowAmount_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              recvFlowAmount_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType value = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                netcardType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatis_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatis_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder.class);
    }

    public static com.google.protobuf.Parser<TNetCardStatis> PARSER =
        new com.google.protobuf.AbstractParser<TNetCardStatis>() {
      public TNetCardStatis parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNetCardStatis(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNetCardStatis> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string netcard_name = 1;
    public static final int NETCARD_NAME_FIELD_NUMBER = 1;
    private java.lang.Object netcardName_;
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    public boolean hasNetcardName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    public java.lang.String getNetcardName() {
      java.lang.Object ref = netcardName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          netcardName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string netcard_name = 1;</code>
     *
     * <pre>
     *网口名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNetcardNameBytes() {
      java.lang.Object ref = netcardName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        netcardName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 send_flow_amount = 2;
    public static final int SEND_FLOW_AMOUNT_FIELD_NUMBER = 2;
    private int sendFlowAmount_;
    /**
     * <code>optional uint32 send_flow_amount = 2;</code>
     *
     * <pre>
     *出口流量
     * </pre>
     */
    public boolean hasSendFlowAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 send_flow_amount = 2;</code>
     *
     * <pre>
     *出口流量
     * </pre>
     */
    public int getSendFlowAmount() {
      return sendFlowAmount_;
    }

    // optional uint32 recv_flow_amount = 3;
    public static final int RECV_FLOW_AMOUNT_FIELD_NUMBER = 3;
    private int recvFlowAmount_;
    /**
     * <code>optional uint32 recv_flow_amount = 3;</code>
     *
     * <pre>
     *入口流量
     * </pre>
     */
    public boolean hasRecvFlowAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 recv_flow_amount = 3;</code>
     *
     * <pre>
     *入口流量
     * </pre>
     */
    public int getRecvFlowAmount() {
      return recvFlowAmount_;
    }

    // optional .mt.EmNetAdapterWorkType netcard_type = 4;
    public static final int NETCARD_TYPE_FIELD_NUMBER = 4;
    private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType netcardType_;
    /**
     * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
     *
     * <pre>
     *网口类型
     * </pre>
     */
    public boolean hasNetcardType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
     *
     * <pre>
     *网口类型
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getNetcardType() {
      return netcardType_;
    }

    private void initFields() {
      netcardName_ = "";
      sendFlowAmount_ = 0;
      recvFlowAmount_ = 0;
      netcardType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNetcardNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, sendFlowAmount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, recvFlowAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, netcardType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNetcardNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sendFlowAmount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, recvFlowAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, netcardType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TNetCardStatis}
     *
     * <pre>
     ** 网口流量状态 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatis_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatis_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        netcardName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sendFlowAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        recvFlowAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        netcardType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatis_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.netcardName_ = netcardName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sendFlowAmount_ = sendFlowAmount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.recvFlowAmount_ = recvFlowAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.netcardType_ = netcardType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.getDefaultInstance()) return this;
        if (other.hasNetcardName()) {
          bitField0_ |= 0x00000001;
          netcardName_ = other.netcardName_;
          onChanged();
        }
        if (other.hasSendFlowAmount()) {
          setSendFlowAmount(other.getSendFlowAmount());
        }
        if (other.hasRecvFlowAmount()) {
          setRecvFlowAmount(other.getRecvFlowAmount());
        }
        if (other.hasNetcardType()) {
          setNetcardType(other.getNetcardType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string netcard_name = 1;
      private java.lang.Object netcardName_ = "";
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public boolean hasNetcardName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public java.lang.String getNetcardName() {
        java.lang.Object ref = netcardName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          netcardName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNetcardNameBytes() {
        java.lang.Object ref = netcardName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          netcardName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public Builder setNetcardName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        netcardName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public Builder clearNetcardName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        netcardName_ = getDefaultInstance().getNetcardName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string netcard_name = 1;</code>
       *
       * <pre>
       *网口名称
       * </pre>
       */
      public Builder setNetcardNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        netcardName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 send_flow_amount = 2;
      private int sendFlowAmount_ ;
      /**
       * <code>optional uint32 send_flow_amount = 2;</code>
       *
       * <pre>
       *出口流量
       * </pre>
       */
      public boolean hasSendFlowAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 send_flow_amount = 2;</code>
       *
       * <pre>
       *出口流量
       * </pre>
       */
      public int getSendFlowAmount() {
        return sendFlowAmount_;
      }
      /**
       * <code>optional uint32 send_flow_amount = 2;</code>
       *
       * <pre>
       *出口流量
       * </pre>
       */
      public Builder setSendFlowAmount(int value) {
        bitField0_ |= 0x00000002;
        sendFlowAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 send_flow_amount = 2;</code>
       *
       * <pre>
       *出口流量
       * </pre>
       */
      public Builder clearSendFlowAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sendFlowAmount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 recv_flow_amount = 3;
      private int recvFlowAmount_ ;
      /**
       * <code>optional uint32 recv_flow_amount = 3;</code>
       *
       * <pre>
       *入口流量
       * </pre>
       */
      public boolean hasRecvFlowAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 recv_flow_amount = 3;</code>
       *
       * <pre>
       *入口流量
       * </pre>
       */
      public int getRecvFlowAmount() {
        return recvFlowAmount_;
      }
      /**
       * <code>optional uint32 recv_flow_amount = 3;</code>
       *
       * <pre>
       *入口流量
       * </pre>
       */
      public Builder setRecvFlowAmount(int value) {
        bitField0_ |= 0x00000004;
        recvFlowAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 recv_flow_amount = 3;</code>
       *
       * <pre>
       *入口流量
       * </pre>
       */
      public Builder clearRecvFlowAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recvFlowAmount_ = 0;
        onChanged();
        return this;
      }

      // optional .mt.EmNetAdapterWorkType netcard_type = 4;
      private com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType netcardType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
      /**
       * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
       *
       * <pre>
       *网口类型
       * </pre>
       */
      public boolean hasNetcardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
       *
       * <pre>
       *网口类型
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType getNetcardType() {
        return netcardType_;
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
       *
       * <pre>
       *网口类型
       * </pre>
       */
      public Builder setNetcardType(com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        netcardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mt.EmNetAdapterWorkType netcard_type = 4;</code>
       *
       * <pre>
       *网口类型
       * </pre>
       */
      public Builder clearNetcardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        netcardType_ = com.kedacom.mt.netmanage.protobuf.EnumPB.EmNetAdapterWorkType.emNetAdapterWorkType_None;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mt.TNetCardStatis)
    }

    static {
      defaultInstance = new TNetCardStatis(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TNetCardStatis)
  }

  public interface TNetCardStatisListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 netcard_num = 1;
    /**
     * <code>optional uint32 netcard_num = 1;</code>
     *
     * <pre>
     * 网口数量
     * </pre>
     */
    boolean hasNetcardNum();
    /**
     * <code>optional uint32 netcard_num = 1;</code>
     *
     * <pre>
     * 网口数量
     * </pre>
     */
    int getNetcardNum();

    // repeated .mt.TNetCardStatis netcard_statis = 2;
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> 
        getNetcardStatisList();
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis getNetcardStatis(int index);
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    int getNetcardStatisCount();
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder> 
        getNetcardStatisOrBuilderList();
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder getNetcardStatisOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mt.TNetCardStatisList}
   *
   * <pre>
   ** 网口流量状态 
   * </pre>
   */
  public static final class TNetCardStatisList extends
      com.google.protobuf.GeneratedMessage
      implements TNetCardStatisListOrBuilder {
    // Use TNetCardStatisList.newBuilder() to construct.
    private TNetCardStatisList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TNetCardStatisList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TNetCardStatisList defaultInstance;
    public static TNetCardStatisList getDefaultInstance() {
      return defaultInstance;
    }

    public TNetCardStatisList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TNetCardStatisList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              netcardNum_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                netcardStatis_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis>();
                mutable_bitField0_ |= 0x00000002;
              }
              netcardStatis_.add(input.readMessage(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          netcardStatis_ = java.util.Collections.unmodifiableList(netcardStatis_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatisList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatisList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.Builder.class);
    }

    public static com.google.protobuf.Parser<TNetCardStatisList> PARSER =
        new com.google.protobuf.AbstractParser<TNetCardStatisList>() {
      public TNetCardStatisList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TNetCardStatisList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TNetCardStatisList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 netcard_num = 1;
    public static final int NETCARD_NUM_FIELD_NUMBER = 1;
    private int netcardNum_;
    /**
     * <code>optional uint32 netcard_num = 1;</code>
     *
     * <pre>
     * 网口数量
     * </pre>
     */
    public boolean hasNetcardNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 netcard_num = 1;</code>
     *
     * <pre>
     * 网口数量
     * </pre>
     */
    public int getNetcardNum() {
      return netcardNum_;
    }

    // repeated .mt.TNetCardStatis netcard_statis = 2;
    public static final int NETCARD_STATIS_FIELD_NUMBER = 2;
    private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> netcardStatis_;
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> getNetcardStatisList() {
      return netcardStatis_;
    }
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder> 
        getNetcardStatisOrBuilderList() {
      return netcardStatis_;
    }
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    public int getNetcardStatisCount() {
      return netcardStatis_.size();
    }
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis getNetcardStatis(int index) {
      return netcardStatis_.get(index);
    }
    /**
     * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
     *
     * <pre>
     * 网口信息
     * </pre>
     */
    public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder getNetcardStatisOrBuilder(
        int index) {
      return netcardStatis_.get(index);
    }

    private void initFields() {
      netcardNum_ = 0;
      netcardStatis_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, netcardNum_);
      }
      for (int i = 0; i < netcardStatis_.size(); i++) {
        output.writeMessage(2, netcardStatis_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, netcardNum_);
      }
      for (int i = 0; i < netcardStatis_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, netcardStatis_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mt.TNetCardStatisList}
     *
     * <pre>
     ** 网口流量状态 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatisList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatisList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.class, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.Builder.class);
      }

      // Construct using com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNetcardStatisFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        netcardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (netcardStatisBuilder_ == null) {
          netcardStatis_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          netcardStatisBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.internal_static_mt_TNetCardStatisList_descriptor;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList getDefaultInstanceForType() {
        return com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.getDefaultInstance();
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList build() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList buildPartial() {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList result = new com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.netcardNum_ = netcardNum_;
        if (netcardStatisBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            netcardStatis_ = java.util.Collections.unmodifiableList(netcardStatis_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.netcardStatis_ = netcardStatis_;
        } else {
          result.netcardStatis_ = netcardStatisBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList) {
          return mergeFrom((com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList other) {
        if (other == com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList.getDefaultInstance()) return this;
        if (other.hasNetcardNum()) {
          setNetcardNum(other.getNetcardNum());
        }
        if (netcardStatisBuilder_ == null) {
          if (!other.netcardStatis_.isEmpty()) {
            if (netcardStatis_.isEmpty()) {
              netcardStatis_ = other.netcardStatis_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNetcardStatisIsMutable();
              netcardStatis_.addAll(other.netcardStatis_);
            }
            onChanged();
          }
        } else {
          if (!other.netcardStatis_.isEmpty()) {
            if (netcardStatisBuilder_.isEmpty()) {
              netcardStatisBuilder_.dispose();
              netcardStatisBuilder_ = null;
              netcardStatis_ = other.netcardStatis_;
              bitField0_ = (bitField0_ & ~0x00000002);
              netcardStatisBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNetcardStatisFieldBuilder() : null;
            } else {
              netcardStatisBuilder_.addAllMessages(other.netcardStatis_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 netcard_num = 1;
      private int netcardNum_ ;
      /**
       * <code>optional uint32 netcard_num = 1;</code>
       *
       * <pre>
       * 网口数量
       * </pre>
       */
      public boolean hasNetcardNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 netcard_num = 1;</code>
       *
       * <pre>
       * 网口数量
       * </pre>
       */
      public int getNetcardNum() {
        return netcardNum_;
      }
      /**
       * <code>optional uint32 netcard_num = 1;</code>
       *
       * <pre>
       * 网口数量
       * </pre>
       */
      public Builder setNetcardNum(int value) {
        bitField0_ |= 0x00000001;
        netcardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 netcard_num = 1;</code>
       *
       * <pre>
       * 网口数量
       * </pre>
       */
      public Builder clearNetcardNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        netcardNum_ = 0;
        onChanged();
        return this;
      }

      // repeated .mt.TNetCardStatis netcard_statis = 2;
      private java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> netcardStatis_ =
        java.util.Collections.emptyList();
      private void ensureNetcardStatisIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          netcardStatis_ = new java.util.ArrayList<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis>(netcardStatis_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder> netcardStatisBuilder_;

      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> getNetcardStatisList() {
        if (netcardStatisBuilder_ == null) {
          return java.util.Collections.unmodifiableList(netcardStatis_);
        } else {
          return netcardStatisBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public int getNetcardStatisCount() {
        if (netcardStatisBuilder_ == null) {
          return netcardStatis_.size();
        } else {
          return netcardStatisBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis getNetcardStatis(int index) {
        if (netcardStatisBuilder_ == null) {
          return netcardStatis_.get(index);
        } else {
          return netcardStatisBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder setNetcardStatis(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis value) {
        if (netcardStatisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNetcardStatisIsMutable();
          netcardStatis_.set(index, value);
          onChanged();
        } else {
          netcardStatisBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder setNetcardStatis(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder builderForValue) {
        if (netcardStatisBuilder_ == null) {
          ensureNetcardStatisIsMutable();
          netcardStatis_.set(index, builderForValue.build());
          onChanged();
        } else {
          netcardStatisBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder addNetcardStatis(com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis value) {
        if (netcardStatisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNetcardStatisIsMutable();
          netcardStatis_.add(value);
          onChanged();
        } else {
          netcardStatisBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder addNetcardStatis(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis value) {
        if (netcardStatisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNetcardStatisIsMutable();
          netcardStatis_.add(index, value);
          onChanged();
        } else {
          netcardStatisBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder addNetcardStatis(
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder builderForValue) {
        if (netcardStatisBuilder_ == null) {
          ensureNetcardStatisIsMutable();
          netcardStatis_.add(builderForValue.build());
          onChanged();
        } else {
          netcardStatisBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder addNetcardStatis(
          int index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder builderForValue) {
        if (netcardStatisBuilder_ == null) {
          ensureNetcardStatisIsMutable();
          netcardStatis_.add(index, builderForValue.build());
          onChanged();
        } else {
          netcardStatisBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder addAllNetcardStatis(
          java.lang.Iterable<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis> values) {
        if (netcardStatisBuilder_ == null) {
          ensureNetcardStatisIsMutable();
          super.addAll(values, netcardStatis_);
          onChanged();
        } else {
          netcardStatisBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder clearNetcardStatis() {
        if (netcardStatisBuilder_ == null) {
          netcardStatis_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          netcardStatisBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public Builder removeNetcardStatis(int index) {
        if (netcardStatisBuilder_ == null) {
          ensureNetcardStatisIsMutable();
          netcardStatis_.remove(index);
          onChanged();
        } else {
          netcardStatisBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder getNetcardStatisBuilder(
          int index) {
        return getNetcardStatisFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder getNetcardStatisOrBuilder(
          int index) {
        if (netcardStatisBuilder_ == null) {
          return netcardStatis_.get(index);  } else {
          return netcardStatisBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public java.util.List<? extends com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder> 
           getNetcardStatisOrBuilderList() {
        if (netcardStatisBuilder_ != null) {
          return netcardStatisBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(netcardStatis_);
        }
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder addNetcardStatisBuilder() {
        return getNetcardStatisFieldBuilder().addBuilder(
            com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder addNetcardStatisBuilder(
          int index) {
        return getNetcardStatisFieldBuilder().addBuilder(
            index, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.getDefaultInstance());
      }
      /**
       * <code>repeated .mt.TNetCardStatis netcard_statis = 2;</code>
       *
       * <pre>
       * 网口信息
       * </pre>
       */
      public java.util.List<com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder> 
           getNetcardStatisBuilderList() {
        return getNetcardStatisFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder> 
          getNetcardStatisFieldBuilder() {
        if (netcardStatisBuilder_ == null) {
          netcardStatisBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatis.Builder, com.kedacom.mt.netmanage.protobuf.NetManagePB.TNetCardStatisOrBuilder>(
                  netcardStatis_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          netcardStatis_ = null;
        }
        return netcardStatisBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mt.TNetCardStatisList)
    }

    static {
      defaultInstance = new TNetCardStatisList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mt.TNetCardStatisList)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TEthnetWorkModeList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TEthnetWorkModeList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TEthnetInterfaceParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TEthnetInterfaceParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TEthnetInterfaceParamList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TEthnetInterfaceParamList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TDNSParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TDNSParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TDHCPLeaseInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TDHCPLeaseInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TDHCPStateInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TDHCPStateInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPPPoEConnectParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPPPoEConnectParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPPPoEState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPPPoEState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPPPoEStatis_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPPPoEStatis_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPPPoEVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPPPoEVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TE1SerialInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TE1SerialInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TE1SingleChainInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TE1SingleChainInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TE1MultiChainInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TE1MultiChainInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPingCmdOption_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPingCmdOption_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPingTestParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPingTestParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TPingResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TPingResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TDNSNameToIpInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TDNSNameToIpInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TDNSNameToIpResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TDNSNameToIpResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TNetConfilictedInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TNetConfilictedInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiWorkMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiWorkMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiApConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiApConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiScanResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiScanResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiScanResultList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiScanResultList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiCurDetailInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiCurDetailInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiStatisInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiStatisInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiConnParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiConnParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMobileDataWorkMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMobileDataWorkMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMobileDataCurDetailInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMobileDataCurDetailInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMobileDataStatisInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMobileDataStatisInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TRouteItemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TRouteItemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TRouteItemInfoList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TRouteItemInfoList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TE1RouteItemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TE1RouteItemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TE1RouteItemInfoList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TE1RouteItemInfoList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TNetUsedInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TNetUsedInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMTNTPInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMTNTPInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMTTimeZoneInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMTTimeZoneInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TMTFtpTelnetAccountInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TMTFtpTelnetAccountInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TServerTestResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TServerTestResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TWifiWirelessScreenInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TWifiWirelessScreenInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TLimitedIpItemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TLimitedIpItemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TLimitedIpCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TLimitedIpCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TNetCardStatis_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TNetCardStatis_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mt_TNetCardStatisList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mt_TNetCardStatisList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017structnet.proto\022\002mt\032\nenum.proto\032\022struc" +
      "tcommon.proto\"q\n\023TEthnetWorkModeList\022,\n\016" +
      "card1_workmode\030\001 \001(\0162\024.mt.EmEthnetWorkMo" +
      "de\022,\n\016card2_workmode\030\002 \001(\0162\024.mt.EmEthnet" +
      "WorkMode\">\n\025TEthnetInterfaceParam\022\n\n\002ip\030" +
      "\001 \001(\r\022\014\n\004mask\030\002 \001(\r\022\013\n\003mac\030\003 \001(\t\"I\n\031TEth" +
      "netInterfaceParamList\022,\n\tparamList\030\001 \003(\013" +
      "2\031.mt.TEthnetInterfaceParam\"*\n\tTDNSParam" +
      "\022\017\n\007dnsList\030\001 \003(\r\022\014\n\004auto\030\002 \001(\010\"\212\001\n\016TDHC" +
      "PLeaseInfo\022\022\n\nethernetid\030\001 \001(\r\022\n\n\002ip\030\002 \001",
      "(\r\022\014\n\004mask\030\003 \001(\r\022\017\n\007gateway\030\004 \001(\r\022\020\n\010dur" +
      "ation\030\005 \001(\r\022\016\n\006dnsnum\030\006 \001(\r\022\027\n\017dns_serve" +
      "r_list\030\007 \003(\r\"\037\n\016TDHCPStateInfo\022\r\n\005state\030" +
      "\001 \001(\005\"\214\002\n\022TPPPoEConnectParam\022\022\n\nethernet" +
      "id\030\001 \001(\r\022\020\n\010username\030\002 \001(\t\022\020\n\010password\030\003" +
      " \001(\t\022\022\n\nservername\030\004 \001(\t\022\020\n\010autodial\030\005 \001" +
      "(\010\022\030\n\020def_route_enable\030\006 \001(\010\022\020\n\010in_debug" +
      "\030\007 \001(\010\022\031\n\021autodial_interval\030\010 \001(\r\022\027\n\017dia" +
      "l_retrytimes\030\t \001(\r\022\034\n\024lcpecho_sendInterv" +
      "al\030\n \001(\r\022\032\n\022lcpecho_retrytimes\030\013 \001(\r\"\305\001\n",
      "\013TPPPoEState\022+\n\rpppoe_running\030\001 \001(\0162\024.mt" +
      ".EmPPPoELinkState\022\022\n\nservername\030\002 \001(\t\022\017\n" +
      "\007localip\030\003 \001(\r\022\016\n\006peerip\030\004 \001(\r\022\023\n\013mDnsSe" +
      "rver1\030\005 \001(\r\022\023\n\013mDnsServer2\030\006 \001(\r\022*\n\010emRe" +
      "ason\030\007 \001(\0162\030.mt.EmPPPoELinkErrReason\"\231\001\n" +
      "\014TPPPoEStatis\022\025\n\rlink_keeptime\030\001 \001(\r\022\026\n\016" +
      "link_downtimes\030\002 \001(\r\022\023\n\013num_pkgsent\030\003 \001(" +
      "\r\022\025\n\rnum_pkgrecved\030\004 \001(\r\022\025\n\rnum_bytessen" +
      "t\030\005 \001(\r\022\027\n\017num_bytesrecved\030\006 \001(\r\" \n\rTPPP" +
      "oEVersion\022\017\n\007version\030\001 \001(\t\"\263\001\n\rTE1Serial",
      "Info\022\021\n\tused_flag\030\001 \001(\r\022\020\n\010serialid\030\002 \001(" +
      "\r\022\014\n\004e1id\030\003 \001(\r\022\022\n\ne1_ts_mask\030\004 \001(\r\022\026\n\016e" +
      "1chan_groupid\030\005 \001(\r\022\025\n\rprotocol_type\030\006 \001" +
      "(\r\022\025\n\recho_interval\030\007 \001(\r\022\025\n\recho_maxret" +
      "ry\030\010 \001(\r\"h\n\022TE1SingleChainInfo\022\021\n\tused_f" +
      "lag\030\001 \001(\r\022\n\n\002ip\030\002 \001(\r\022\014\n\004mask\030\003 \001(\r\022%\n\ns" +
      "erialinfo\030\004 \001(\0132\021.mt.TE1SerialInfo\"\357\001\n\021T" +
      "E1MultiChainInfo\022\021\n\tused_flag\030\001 \001(\r\022\n\n\002i" +
      "p\030\002 \001(\r\022\014\n\004mask\030\003 \001(\r\022\021\n\tauth_type\030\004 \001(\r" +
      "\022\033\n\023frag_minpackage_len\030\005 \001(\r\022\023\n\013svr_usr",
      "name\030\006 \001(\t\022\022\n\nsvr_usrpwd\030\007 \001(\t\022\024\n\014sent_u" +
      "srname\030\010 \001(\t\022\023\n\013sent_usrpwd\030\t \001(\t\022)\n\016ser" +
      "ialinfolist\030\n \003(\0132\021.mt.TE1SerialInfo\"R\n\016" +
      "TPingCmdOption\022\023\n\013packagesize\030\001 \001(\r\022\017\n\007t" +
      "imeout\030\002 \001(\r\022\013\n\003ttl\030\003 \001(\r\022\r\n\005count\030\004 \001(\r" +
      "\"[\n\016TPingTestParam\022\020\n\010dst_info\030\001 \001(\t\022\'\n\013" +
      "ping_option\030\002 \001(\0132\022.mt.TPingCmdOption\022\016\n" +
      "\006userid\030\003 \001(\r\"\216\001\n\013TPingResult\022\'\n\014ping_er" +
      "rcode\030\001 \001(\0162\021.mt.EmPingErrcode\022\013\n\003ttl\030\002 " +
      "\001(\r\022\021\n\ttrip_time\030\003 \001(\r\022\016\n\006userid\030\004 \001(\r\022\022",
      "\n\nerror_type\030\005 \001(\r\022\022\n\nerror_code\030\006 \001(\r\"$" +
      "\n\020TDNSNameToIpInfo\022\020\n\010dns_name\030\001 \001(\t\"F\n\022" +
      "TDNSNameToIpResult\022\020\n\010dns_name\030\001 \001(\t\022\n\n\002" +
      "ip\030\002 \001(\r\022\022\n\nerror_code\030\003 \001(\r\"S\n\023TNetConf" +
      "ilictedInfo\022#\n\004type\030\001 \001(\0162\025.mt.EmNetConf" +
      "lictType\022\013\n\003mac\030\002 \001(\t\022\n\n\002ip\030\003 \001(\r\"j\n\rTWi" +
      "fiWorkMode\022)\n\rwifi_workmode\030\001 \001(\0162\022.mt.E" +
      "mWifiWorkMode\022.\n\014wifiApConfig\030\002 \001(\0132\030.mt" +
      ".TWifiApConfiguration\"\325\001\n\024TWifiApConfigu" +
      "ration\022\014\n\004ssid\030\001 \001(\t\022)\n\014capabilities\030\002 \001",
      "(\0162\023.mt.EmWifiApKeyType\022\013\n\003key\030\003 \001(\t\022\024\n\014" +
      "dhcp_startip\030\004 \001(\r\022\022\n\ndhcp_endip\030\005 \001(\r\022\n" +
      "\n\002ip\030\006 \001(\r\022\014\n\004mask\030\007 \001(\r\0223\n\016frequency_ba" +
      "nd\030\010 \001(\0162\033.mt.EmWifiFrequencyBandType\"o\n" +
      "\022TWifiConfiguration\022\027\n\017enable_autoconn\030\001" +
      " \001(\010\022\025\n\renable_autoip\030\002 \001(\010\022\n\n\002ip\030\003 \001(\r\022" +
      "\014\n\004mask\030\004 \001(\r\022\017\n\007gateway\030\005 \001(\r\"\227\001\n\017TWifi" +
      "ScanResult\022\014\n\004ssid\030\001 \001(\t\022\'\n\014capabilities" +
      "\030\002 \001(\0162\021.mt.EmWifiKeyType\022*\n\013signalLevel" +
      "\030\003 \001(\0162\025.mt.EmWifiSignalLevel\022\016\n\006issave\030",
      "\004 \001(\010\022\021\n\tnetworkid\030\005 \001(\005\"=\n\023TWifiScanRes" +
      "ultList\022&\n\tscan_list\030\001 \003(\0132\023.mt.TWifiSca" +
      "nResult\"\321\001\n\022TWifiCurDetailInfo\022\"\n\005state\030" +
      "\001 \001(\0162\023.mt.EmWifiLinkState\022\021\n\tnetworkid\030" +
      "\002 \001(\005\022\014\n\004ssid\030\003 \001(\t\022\r\n\005bssid\030\004 \001(\t\022\023\n\013ma" +
      "c_address\030\005 \001(\t\022\n\n\002ip\030\006 \001(\r\022\014\n\004mask\030\007 \001(" +
      "\r\022\017\n\007gateway\030\010 \001(\r\022\'\n\006reason\030\t \001(\0162\027.mt." +
      "EmWifiLinkErrReason\"\220\001\n\017TWifiStatisInfo\022" +
      "\014\n\004ssid\030\001 \001(\t\022\021\n\tnetworkid\030\002 \001(\005\022*\n\013sign" +
      "alLevel\030\003 \001(\0162\025.mt.EmWifiSignalLevel\022\030\n\020",
      "down_total_bytes\030\004 \001(\r\022\026\n\016up_total_bytes" +
      "\030\005 \001(\r\"|\n\016TWifiConnParam\022\016\n\006issave\030\001 \001(\010" +
      "\022\014\n\004ssid\030\002 \001(\t\022\'\n\014capabilities\030\003 \001(\0162\021.m" +
      "t.EmWifiKeyType\022\020\n\010password\030\004 \001(\t\022\021\n\tnet" +
      "workid\030\005 \001(\005\"%\n\023TMobileDataWorkMode\022\016\n\006e" +
      "nable\030\001 \001(\010\"\211\002\n\030TMobileDataCurDetailInfo" +
      "\022(\n\005state\030\001 \001(\0162\031.mt.EmMobileDataLinkSta" +
      "te\022*\n\temNetType\030\002 \001(\0162\027.mt.EmMobileDataN" +
      "etType\022;\n\020emGenerationType\030\003 \001(\0162!.mt.Em" +
      "MobileDataNetGenerationType\022\014\n\004ssid\030\004 \001(",
      "\t\022\n\n\002ip\030\005 \001(\r\022\021\n\tconn_time\030\006 \001(\t\022-\n\006reas" +
      "on\030\007 \001(\0162\035.mt.EmMobileDataLinkErrReason\"" +
      "\235\001\n\025TMobileDataStatisInfo\0220\n\013signalLevel" +
      "\030\001 \001(\0162\033.mt.EmMobileDataSignalLevel\022\024\n\014u" +
      "p_bandwidth\030\002 \001(\r\022\026\n\016down_bandwidth\030\003 \001(" +
      "\r\022\020\n\010up_bytes\030\004 \001(\r\022\022\n\ndown_bytes\030\005 \001(\r\"" +
      "r\n\016TRouteItemInfo\022\021\n\tinterface\030\001 \001(\r\022\024\n\014" +
      "dest_network\030\002 \001(\r\022\024\n\014dest_netmask\030\003 \001(\r" +
      "\022\017\n\007gateway\030\004 \001(\r\022\020\n\010priority\030\005 \001(\r\"<\n\022T" +
      "RouteItemInfoList\022&\n\nroute_list\030\001 \003(\0132\022.",
      "mt.TRouteItemInfo\"\204\001\n\020TE1RouteItemInfo\022\021" +
      "\n\tinterface\030\001 \001(\r\022\024\n\014dest_network\030\002 \001(\r\022" +
      "\024\n\014dest_netmask\030\003 \001(\r\022\017\n\007gateway\030\004 \001(\r\022\020" +
      "\n\010priority\030\005 \001(\r\022\016\n\006ifname\030\006 \001(\t\"@\n\024TE1R" +
      "outeItemInfoList\022(\n\nroute_list\030\001 \003(\0132\024.m" +
      "t.TE1RouteItemInfo\"\212\001\n\014TNetUsedInfo\022+\n\tu" +
      "sed_type\030\001 \001(\0162\030.mt.EmNetAdapterWorkType" +
      "\022\n\n\002ip\030\002 \001(\r\022\014\n\004mask\030\003 \001(\r\022\022\n\ngateway_ip" +
      "\030\004 \001(\r\022\013\n\003dns\030\005 \001(\r\022\022\n\ndns_backup\030\006 \001(\r\"" +
      "@\n\nTMTNTPInfo\022\020\n\010used_ntp\030\001 \001(\010\022\016\n\006domai",
      "n\030\002 \001(\t\022\020\n\010interval\030\003 \001(\r\"4\n\017TMTTimeZone" +
      "Info\022!\n\ttime_zone\030\001 \001(\0162\016.mt.EmTimeZone\"" +
      "=\n\027TMTFtpTelnetAccountInfo\022\020\n\010username\030\001" +
      " \001(\t\022\020\n\010password\030\002 \001(\t\"1\n\021TServerTestRes" +
      "ult\022\016\n\006userid\030\001 \001(\r\022\014\n\004isok\030\002 \001(\010\"\265\001\n\027TW" +
      "ifiWirelessScreenInfo\0227\n\024wirelessScreen_" +
      "state\030\001 \001(\0162\031.mt.EmWirelessScreenState\022 " +
      "\n\030wirelessScreen_deviceNum\030\002 \001(\r\022?\n\030wire" +
      "lessScreen_ErrReason\030\003 \001(\0162\035.mt.EmWirele" +
      "ssScreenErrReason\"6\n\022TLimitedIpItemInfo\022",
      "\020\n\010start_ip\030\001 \001(\r\022\016\n\006end_ip\030\002 \001(\r\"|\n\rTLi" +
      "mitedIpCfg\022\016\n\006enable\030\001 \001(\010\022+\n\016limitedIp_" +
      "type\030\002 \001(\0162\023.mt.EmLimitedIpType\022.\n\016limit" +
      "edIp_List\030\003 \003(\0132\026.mt.TLimitedIpItemInfo\"" +
      "\212\001\n\016TNetCardStatis\022\024\n\014netcard_name\030\001 \001(\t" +
      "\022\030\n\020send_flow_amount\030\002 \001(\r\022\030\n\020recv_flow_" +
      "amount\030\003 \001(\r\022.\n\014netcard_type\030\004 \001(\0162\030.mt." +
      "EmNetAdapterWorkType\"U\n\022TNetCardStatisLi" +
      "st\022\023\n\013netcard_num\030\001 \001(\r\022*\n\016netcard_stati" +
      "s\030\002 \003(\0132\022.mt.TNetCardStatisB0\n!com.kedac",
      "om.mt.netmanage.protobufB\013NetManagePB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mt_TEthnetWorkModeList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mt_TEthnetWorkModeList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TEthnetWorkModeList_descriptor,
              new java.lang.String[] { "Card1Workmode", "Card2Workmode", });
          internal_static_mt_TEthnetInterfaceParam_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_mt_TEthnetInterfaceParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TEthnetInterfaceParam_descriptor,
              new java.lang.String[] { "Ip", "Mask", "Mac", });
          internal_static_mt_TEthnetInterfaceParamList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_mt_TEthnetInterfaceParamList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TEthnetInterfaceParamList_descriptor,
              new java.lang.String[] { "ParamList", });
          internal_static_mt_TDNSParam_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_mt_TDNSParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TDNSParam_descriptor,
              new java.lang.String[] { "DnsList", "Auto", });
          internal_static_mt_TDHCPLeaseInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_mt_TDHCPLeaseInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TDHCPLeaseInfo_descriptor,
              new java.lang.String[] { "Ethernetid", "Ip", "Mask", "Gateway", "Duration", "Dnsnum", "DnsServerList", });
          internal_static_mt_TDHCPStateInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_mt_TDHCPStateInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TDHCPStateInfo_descriptor,
              new java.lang.String[] { "State", });
          internal_static_mt_TPPPoEConnectParam_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_mt_TPPPoEConnectParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPPPoEConnectParam_descriptor,
              new java.lang.String[] { "Ethernetid", "Username", "Password", "Servername", "Autodial", "DefRouteEnable", "InDebug", "AutodialInterval", "DialRetrytimes", "LcpechoSendInterval", "LcpechoRetrytimes", });
          internal_static_mt_TPPPoEState_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_mt_TPPPoEState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPPPoEState_descriptor,
              new java.lang.String[] { "PppoeRunning", "Servername", "Localip", "Peerip", "MDnsServer1", "MDnsServer2", "EmReason", });
          internal_static_mt_TPPPoEStatis_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_mt_TPPPoEStatis_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPPPoEStatis_descriptor,
              new java.lang.String[] { "LinkKeeptime", "LinkDowntimes", "NumPkgsent", "NumPkgrecved", "NumBytessent", "NumBytesrecved", });
          internal_static_mt_TPPPoEVersion_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_mt_TPPPoEVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPPPoEVersion_descriptor,
              new java.lang.String[] { "Version", });
          internal_static_mt_TE1SerialInfo_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_mt_TE1SerialInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TE1SerialInfo_descriptor,
              new java.lang.String[] { "UsedFlag", "Serialid", "E1Id", "E1TsMask", "E1ChanGroupid", "ProtocolType", "EchoInterval", "EchoMaxretry", });
          internal_static_mt_TE1SingleChainInfo_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_mt_TE1SingleChainInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TE1SingleChainInfo_descriptor,
              new java.lang.String[] { "UsedFlag", "Ip", "Mask", "Serialinfo", });
          internal_static_mt_TE1MultiChainInfo_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_mt_TE1MultiChainInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TE1MultiChainInfo_descriptor,
              new java.lang.String[] { "UsedFlag", "Ip", "Mask", "AuthType", "FragMinpackageLen", "SvrUsrname", "SvrUsrpwd", "SentUsrname", "SentUsrpwd", "Serialinfolist", });
          internal_static_mt_TPingCmdOption_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_mt_TPingCmdOption_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPingCmdOption_descriptor,
              new java.lang.String[] { "Packagesize", "Timeout", "Ttl", "Count", });
          internal_static_mt_TPingTestParam_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_mt_TPingTestParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPingTestParam_descriptor,
              new java.lang.String[] { "DstInfo", "PingOption", "Userid", });
          internal_static_mt_TPingResult_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_mt_TPingResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TPingResult_descriptor,
              new java.lang.String[] { "PingErrcode", "Ttl", "TripTime", "Userid", "ErrorType", "ErrorCode", });
          internal_static_mt_TDNSNameToIpInfo_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_mt_TDNSNameToIpInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TDNSNameToIpInfo_descriptor,
              new java.lang.String[] { "DnsName", });
          internal_static_mt_TDNSNameToIpResult_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_mt_TDNSNameToIpResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TDNSNameToIpResult_descriptor,
              new java.lang.String[] { "DnsName", "Ip", "ErrorCode", });
          internal_static_mt_TNetConfilictedInfo_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_mt_TNetConfilictedInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TNetConfilictedInfo_descriptor,
              new java.lang.String[] { "Type", "Mac", "Ip", });
          internal_static_mt_TWifiWorkMode_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_mt_TWifiWorkMode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiWorkMode_descriptor,
              new java.lang.String[] { "WifiWorkmode", "WifiApConfig", });
          internal_static_mt_TWifiApConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_mt_TWifiApConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiApConfiguration_descriptor,
              new java.lang.String[] { "Ssid", "Capabilities", "Key", "DhcpStartip", "DhcpEndip", "Ip", "Mask", "FrequencyBand", });
          internal_static_mt_TWifiConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_mt_TWifiConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiConfiguration_descriptor,
              new java.lang.String[] { "EnableAutoconn", "EnableAutoip", "Ip", "Mask", "Gateway", });
          internal_static_mt_TWifiScanResult_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_mt_TWifiScanResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiScanResult_descriptor,
              new java.lang.String[] { "Ssid", "Capabilities", "SignalLevel", "Issave", "Networkid", });
          internal_static_mt_TWifiScanResultList_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_mt_TWifiScanResultList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiScanResultList_descriptor,
              new java.lang.String[] { "ScanList", });
          internal_static_mt_TWifiCurDetailInfo_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_mt_TWifiCurDetailInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiCurDetailInfo_descriptor,
              new java.lang.String[] { "State", "Networkid", "Ssid", "Bssid", "MacAddress", "Ip", "Mask", "Gateway", "Reason", });
          internal_static_mt_TWifiStatisInfo_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_mt_TWifiStatisInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiStatisInfo_descriptor,
              new java.lang.String[] { "Ssid", "Networkid", "SignalLevel", "DownTotalBytes", "UpTotalBytes", });
          internal_static_mt_TWifiConnParam_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_mt_TWifiConnParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiConnParam_descriptor,
              new java.lang.String[] { "Issave", "Ssid", "Capabilities", "Password", "Networkid", });
          internal_static_mt_TMobileDataWorkMode_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_mt_TMobileDataWorkMode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMobileDataWorkMode_descriptor,
              new java.lang.String[] { "Enable", });
          internal_static_mt_TMobileDataCurDetailInfo_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_mt_TMobileDataCurDetailInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMobileDataCurDetailInfo_descriptor,
              new java.lang.String[] { "State", "EmNetType", "EmGenerationType", "Ssid", "Ip", "ConnTime", "Reason", });
          internal_static_mt_TMobileDataStatisInfo_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_mt_TMobileDataStatisInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMobileDataStatisInfo_descriptor,
              new java.lang.String[] { "SignalLevel", "UpBandwidth", "DownBandwidth", "UpBytes", "DownBytes", });
          internal_static_mt_TRouteItemInfo_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_mt_TRouteItemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TRouteItemInfo_descriptor,
              new java.lang.String[] { "Interface", "DestNetwork", "DestNetmask", "Gateway", "Priority", });
          internal_static_mt_TRouteItemInfoList_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_mt_TRouteItemInfoList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TRouteItemInfoList_descriptor,
              new java.lang.String[] { "RouteList", });
          internal_static_mt_TE1RouteItemInfo_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_mt_TE1RouteItemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TE1RouteItemInfo_descriptor,
              new java.lang.String[] { "Interface", "DestNetwork", "DestNetmask", "Gateway", "Priority", "Ifname", });
          internal_static_mt_TE1RouteItemInfoList_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_mt_TE1RouteItemInfoList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TE1RouteItemInfoList_descriptor,
              new java.lang.String[] { "RouteList", });
          internal_static_mt_TNetUsedInfo_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_mt_TNetUsedInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TNetUsedInfo_descriptor,
              new java.lang.String[] { "UsedType", "Ip", "Mask", "GatewayIp", "Dns", "DnsBackup", });
          internal_static_mt_TMTNTPInfo_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_mt_TMTNTPInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMTNTPInfo_descriptor,
              new java.lang.String[] { "UsedNtp", "Domain", "Interval", });
          internal_static_mt_TMTTimeZoneInfo_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_mt_TMTTimeZoneInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMTTimeZoneInfo_descriptor,
              new java.lang.String[] { "TimeZone", });
          internal_static_mt_TMTFtpTelnetAccountInfo_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_mt_TMTFtpTelnetAccountInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TMTFtpTelnetAccountInfo_descriptor,
              new java.lang.String[] { "Username", "Password", });
          internal_static_mt_TServerTestResult_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_mt_TServerTestResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TServerTestResult_descriptor,
              new java.lang.String[] { "Userid", "Isok", });
          internal_static_mt_TWifiWirelessScreenInfo_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_mt_TWifiWirelessScreenInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TWifiWirelessScreenInfo_descriptor,
              new java.lang.String[] { "WirelessScreenState", "WirelessScreenDeviceNum", "WirelessScreenErrReason", });
          internal_static_mt_TLimitedIpItemInfo_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_mt_TLimitedIpItemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TLimitedIpItemInfo_descriptor,
              new java.lang.String[] { "StartIp", "EndIp", });
          internal_static_mt_TLimitedIpCfg_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_mt_TLimitedIpCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TLimitedIpCfg_descriptor,
              new java.lang.String[] { "Enable", "LimitedIpType", "LimitedIpList", });
          internal_static_mt_TNetCardStatis_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_mt_TNetCardStatis_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TNetCardStatis_descriptor,
              new java.lang.String[] { "NetcardName", "SendFlowAmount", "RecvFlowAmount", "NetcardType", });
          internal_static_mt_TNetCardStatisList_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_mt_TNetCardStatisList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mt_TNetCardStatisList_descriptor,
              new java.lang.String[] { "NetcardNum", "NetcardStatis", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kedacom.mt.netmanage.protobuf.EnumPB.getDescriptor(),
          com.kedacom.mt.netmanage.protobuf.StructCommonPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
